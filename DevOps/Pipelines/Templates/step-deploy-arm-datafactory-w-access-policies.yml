parameters:
- name: AzDoServiceConnection # name of the parameter; required
  type: string # data type of the parameter; required
- name: resource_group
  type: string

steps:
  - task: AzureResourceGroupDeployment@2
    inputs:
      azureSubscription: ${{ parameters.AzDoServiceConnection }}
      action: 'Create Or Update Resource Group'
      resourceGroupName: ${{ parameters.resource_group }}
      location: $(LOCATION)
      templateLocation: 'Linked artifact'
      csmFile: '$(Pipeline.Workspace)/arm_templates/arm-datafactory-w-shir.json'
      overrideParameters: '-dataFactoryName $(DATAFACTORYNAME) -dataFactorySHIRName $(DATAFACTORYSHIRNAME) -location $(LOCATION)'
      deploymentMode: 'Incremental'
    displayName: 'Deploy Datafactory with Access Policies'

  # Add Data Factory MI to Key Vault
  - task: AzureCLI@2
    displayName: 'Add Data Factory SP to AKV'
    name: add_adf_sp_to_akv
    inputs:
      azureSubscription: ${{ parameters.AzDoServiceConnection }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        # adf_sp_oid=$(az ad sp list --display-name $(DATAFACTORYNAME) --output tsv --query "[].{id:objectId}") 
        adf_sp_oid=$(az resource show -g ${{ parameters.resource_group }} --resource-type Microsoft.DataFactory/factories -n $(DATAFACTORYNAME) --query identity.principalId --output tsv)                  
        echo "$adf_sp_oid"
        az keyvault set-policy --name "$(AZUREKEYVAULTNAME)" --secret-permissions list get --object-id "$adf_sp_oid" --query "{Status:properties.provisioningState}" --output table

  # Add Data Factory MI to SQLServer
  - task: AzureCLI@2
    displayName: 'Add Data Factory SP to SQL Server AAD'
    name: add_adf_sp_to_asql
    inputs:
      azureSubscription: ${{ parameters.AzDoServiceConnection }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        # adf_sp_oid=$(az ad sp list --display-name $(DATAFACTORYNAME) --output tsv --query "[].{id:objectId}") 
        sql_resource_id=$(az resource list --name $(AZURESQLSERVERNAME) --output tsv --query "[].id")
        adf_sp_oid=$(az resource show -g ${{ parameters.resource_group }} --resource-type Microsoft.DataFactory/factories -n $(DATAFACTORYNAME) --query identity.principalId --output tsv)                  
        echo "$adf_sp_oid"
        az role assignment create --role "Contributor" --assignee-object-id "$adf_sp_oid" --scope "$sql_resource_id" 
        echo "$sql_resource_id"

  # Add diagnostic settings
  - ${{ if and(eq(variables['loganalytics'], true),eq(variables['logstorageaccount'], true)) }}:
    - task: AzureCLI@2
      displayName: 'Add diagnostic settings for Data Factory'
      name: add_diagnostics_adf
      inputs:
        azureSubscription: ${{ parameters.AzDoServiceConnection }}
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          adf_resource_id=$(az resource list --name $(DATAFACTORYNAME) --output tsv --query "[].id")
          la_resource_id=$(az resource list --name $(LOGANALYTICSNAME) --output tsv --query "[].id")
          lbs_resource_id=$(az resource list --name $(LOGSTORAGEACCOUNTNAME) --output tsv --query "[].id")
          az monitor diagnostic-settings create  \
          --name $(DATAFACTORYNAME)-Diagnostics \
          --resource $adf_resource_id \
          --logs    '[{"category": "ActivityRuns","enabled": true,"retentionPolicy": {"days": 30,"enabled": true}},{"category": "PipelineRuns","enabled": true,"retentionPolicy": {"days": 30,"enabled": true}},{"category": "TriggerRuns","enabled": true,"retentionPolicy": {"days": 30,"enabled": true}}]' \
          --metrics '[{"category": "AllMetrics","enabled": true,"retentionPolicy": {"days": 30,"enabled": true}}]' \
          --storage-account $lbs_resource_id \
          --workspace $la_resource_id
  - ${{ if and(eq(variables['loganalytics'], true),eq(variables['logstorageaccount'], false)) }}:
    - task: AzureCLI@2
      displayName: 'Add diagnostic settings for Data Factory'
      name: add_diagnostics_adf
      inputs:
        azureSubscription: ${{ parameters.AzDoServiceConnection }}
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          adf_resource_id=$(az resource list --name $(DATAFACTORYNAME) --output tsv --query "[].id")
          la_resource_id=$(az resource list --name $(LOGANALYTICSNAME) --output tsv --query "[].id")
          az monitor diagnostic-settings create  \
          --name $(DATAFACTORYNAME)-Diagnostics \
          --resource $adf_resource_id \
          --logs    '[{"category": "ActivityRuns","enabled": true,"retentionPolicy": {"days": 30,"enabled": true}},{"category": "PipelineRuns","enabled": true,"retentionPolicy": {"days": 30,"enabled": true}},{"category": "TriggerRuns","enabled": true,"retentionPolicy": {"days": 30,"enabled": true}}]' \
          --metrics '[{"category": "AllMetrics","enabled": true,"retentionPolicy": {"days": 30,"enabled": true}}]' \
          --workspace $la_resource_id
  # - ${{ if and(eq(variables['loganalytics'], false),eq(variables['logstorageaccount'], true)) }}:
  - task: AzureCLI@2
    displayName: 'Add diagnostic settings for Data Factory'
    name: add_diagnostics_adf
    inputs:
      azureSubscription: ${{ parameters.AzDoServiceConnection }}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        adf_resource_id=$(az resource list --name $(DATAFACTORYNAME) --output tsv --query "[].id")
        lbs_resource_id=$(az resource list --name $(LOGSTORAGEACCOUNTNAME) --output tsv --query "[].id")
        az monitor diagnostic-settings create  \
        --name $(DATAFACTORYNAME)-Diagnostics \
        --resource $adf_resource_id \
        --logs    '[{"category": "ActivityRuns","enabled": true,"retentionPolicy": {"days": 30,"enabled": true}},{"category": "PipelineRuns","enabled": true,"retentionPolicy": {"days": 30,"enabled": true}},{"category": "TriggerRuns","enabled": true,"retentionPolicy": {"days": 30,"enabled": true}}]' \
        --metrics '[{"category": "AllMetrics","enabled": true,"retentionPolicy": {"days": 30,"enabled": true}}]' \
        --storage-account $lbs_resource_id