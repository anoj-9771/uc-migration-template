parameters:
- name: AzDoServiceConnection # name of the parameter; required
  type: string # data type of the parameter; required
- name: resource_group
  type: string
- name: vmSize
  type: string
- name: vmName
  type: string
- name: publisher
  type: string
- name: OSVersion
  type: string
- name: offer
  type: string

steps:

  # - task: AzureKeyVault@1
  #   displayName: 'Get secrets'
  #   inputs:
  #     azureSubscription: ${{ parameters.AzDoServiceConnection }}
  #     keyVaultName: $(AZUREKEYVAULTNAME)
  #     secretsFilter: 'AzureWindowsServerPw'

  - task: AzureResourceGroupDeployment@2
    inputs:
      azureSubscription: ${{ parameters.AzDoServiceConnection }}
      action: 'Create Or Update Resource Group'
      resourceGroupName: ${{ parameters.resource_group }}
      location: $(LOCATION)
      templateLocation: 'Linked artifact'
      csmFile: '$(Pipeline.Workspace)/arm_templates/arm-vm.json'
      overrideParameters: '-location $(LOCATION) -adminUsername $(adminUsername) -adminPassword "nt_supp@123!" -publisher ${{parameters.publisher}} -offer ${{parameters.offer}} -OSVersion ${{parameters.OSVersion}} -vmSize ${{parameters.vmSize}} -vmName ${{parameters.vmName}} -subnetId $(internalSubnetId)'
      deploymentMode: 'Incremental'
      deploymentOutputs: 'armOutputs'
    displayName: 'Deploy VM ${{parameters.vmName}}'

  - task: AzureCLI@2
    displayName: 'Configure Data Disks for VM'
    condition: contains('${{parameters.vmName}}', 'sql')
    inputs:
      azureSubscription: ${{ parameters.AzDoServiceConnection }}
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        $ErrorActionPreference = "Stop"

        ndisks=$(az vm show -g ${{ parameters.resource_group }} -n ${{ parameters.vmName }} --query "storageProfile.dataDisks | length(@)")
        if [ $ndisks -ne 2 ]; 
          then 
            az vm disk attach -g ${{ parameters.resource_group }} --vm-name ${{ parameters.vmName }} --name ${{ parameters.vmName }}-datadisk0 --new --sku Premium_LRS --size-gb 1024
            az vm disk attach -g ${{ parameters.resource_group }} --vm-name ${{ parameters.vmName }} --name ${{ parameters.vmName }}-datadisk1 --new --sku Premium_LRS --size-gb 1024
        fi
        

      

