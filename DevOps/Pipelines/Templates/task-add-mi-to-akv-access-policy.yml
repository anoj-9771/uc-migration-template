                    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
                  #                      | Add Source MI to Key Vault Access Policy |               #    
                  #                      --------------------------------------------               #
                  #     This is a task level template script used to add the MI from one azure      #
                  #     resource to Key Vault's Access Policy. Parameters include service           #
                  #     connection, resource group name source resource name, Key Vault name        #
                  #     and the relevant certificate, key, secret and storage permissions.          #
                  #                                                                                 #
                    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
parameters: 
- name: service_connection
  type: string
- name: resource_group
  type: string
- name: src_resource_name
  type: string
- name: key_valut_name
  type: string
- name: secret_permissions
  type: string

# Adds one source resource's MI to target resource rbac
steps:
- task: AzureCLI@2
  displayName: 'Add Data Factory SP to AKV'
  name: add_${{ parameters.src_resource_name }}_sp_to_akv
  inputs:
    azureSubscription: ${{ parameters.service_connection }}
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      src_resource_id=$(az resource list --name ${{ parameters.src_resource_name }} --resource-group ${{ parameters.resource_group }} --output tsv --query "[].id")
      src_sp_oid=$(az resource show --ids $src_resource_id --query identity.principalId --output tsv)                  
      echo "Assiging object id: '$adf_sp_oid' a ${{ parameters.permissions }} permissions to resource: '$adf_sp_oid' to Key Vault: ${{ parameters.key_valut_name }}'s access policies'"
      az keyvault set-policy --name "${{ parameters.key_valut_name }}" --secret-permissions ${{ parameters.secret_permissions }} --object-id "$src_sp_oid" --query "{Status:properties.provisioningState}" --output table
