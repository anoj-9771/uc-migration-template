# parameters:
# - name: AzDoServiceConnection # name of the parameter; required
#   type: string # data type of the parameter; required
# - name: resource_group
#   type: string

steps:
  - task: AzureResourceGroupDeployment@2
    inputs:
      azureSubscription: ${{ variables.azdoresourceconnection }}
      action: 'Create Or Update Resource Group'
      resourceGroupName: '${{ variables.prefix }}-${{ variables.environment }}'
      location: ${{ variables.location }}
      templateLocation: 'Linked artifact'
      csmFile: '$(Pipeline.Workspace)/arm_templates/arm-blobstoragev2.json'
      overrideParameters: '-location ${{ variables.location }} -accountNames "${{ variables.datalakestorageaccountnames }}" -zones "${{ variables.zonenames }}"'
      deploymentMode: 'Incremental'
      deploymentOutputs: 'armOutputs'
    displayName: 'Deploy BLOB Storage Zones'

  - task: AzureCLI@2
    displayName: 'Set SAS tokens in AKV for BLOB Storage'
    name: SetSasTokens
    inputs:
      azureSubscription: ${{ variables.azdoresourceconnection }}
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        $ErrorActionPreference = "Stop"

        Write-Host '$(armOutputs)'
        $json = '$(armOutputs)' | convertfrom-json

        az keyvault set-policy --name "${{ variables.azurekeyvaultname }}" --secret-permissions set list get --object-id "${{ variables.spobjectid }}"
        Write-Host "Policy set"

        $json.PSObject.Properties.Value.Value | ForEach-Object {
          $value = $_.name
          Write-Host $value
          
          $date_year=(Get-Date).AddYears(1).ToString("yyyy-MM-ddTH:mmZ")
          $sas_token=az storage account generate-sas --account-name $value --permissions racwdl --services b --resource-types sco --expiry $date_year --output tsv
          Write-Host "sas token genereated"
          az keyvault secret set --name (-join($value, "-sa-sastoken")) --vault-name "${{ variables.azurekeyvaultname }}" --value "$sas_token"
          Write-Host "Secret set"
        }
