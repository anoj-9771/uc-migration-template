parameters:
- name: AzDoServiceConnection # name of the parameter; required
  type: string # data type of the parameter; required
- name: resource_group
  type: string

steps:
  - task: AzureResourceGroupDeployment@2
    inputs:
      azureSubscription: ${{ parameters.AzDoServiceConnection }}
      action: 'Create Or Update Resource Group'
      resourceGroupName: ${{ parameters.resource_group }}
      location: $(LOCATION)
      templateLocation: 'Linked artifact'
      csmFile: '$(Pipeline.Workspace)/arm_templates/arm-blobstoragev2.json'
      overrideParameters: '-location $(LOCATION) -accountNames "$(DATALAKESTORAGEACCOUNTNAMES)" -zones "$(ZONENAMES)"'
      deploymentMode: 'Incremental'
      deploymentOutputs: 'armOutputs'
    displayName: 'Deploy BLOB Storage Zones'

  - task: AzureCLI@2
    displayName: 'Set SAS tokens in AKV for ADLS'
    name: SetSasTokensADLS
    inputs:
      azureSubscription: ${{ parameters.AzDoServiceConnection }}
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        $ErrorActionPreference = "Stop"

        Write-Host '$(armOutputs)'
        $json = '$(armOutputs)' | convertfrom-json

        az keyvault set-policy --name "$(AZUREKEYVAULTNAME)" --secret-permissions set list get --object-id "$(SPOBJECTID)"
        Write-Host "Policy set"

        $json.PSObject.Properties.Value.Value | ForEach-Object {
          $value = $_.name
          Write-Host $value
          
          $date_year=(Get-Date).AddYears(1).ToString("yyyy-MM-ddTH:mmZ")
          $adls_key=az storage account keys list --account-name $(AZURE) --resource-group sl-nonprod --output tsv --query "[0].value"
          Write-Host "Retrieved key..."
          az keyvault secret set --name (-join($value, "-adls-key")) --vault-name "$(AZUREKEYVAULTNAME)" --value "$adls_key"
          Write-Host "Secret set"
        }
