{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "insight-etlframework-adf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Databricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Log Databricks",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Databricks",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 5,
							"retryIntervalInSeconds": 120,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CTL].[sp_updateTaskLog]",
							"storedProcedureParameters": {
								"BatchId": {
									"value": {
										"value": "@pipeline().parameters.item.BatchId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"Output": {
									"value": {
										"value": "@if(empty(activity('Databricks').output), if(empty(activity('Databricks').error), '{\"error\": \"Data Factory processing error, check pipeline activity.\"}', string(activity('Databricks').error)), string(activity('Databricks').output))",
										"type": "Expression"
									},
									"type": "String"
								},
								"FullBlobName": {
									"value": {
										"value": "@concat(pipeline().parameters.item.TargetName,pipeline().parameters.item.Path,pipeline().parameters.item.TargetName)",
										"type": "Expression"
									},
									"type": "String"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.item.TaskId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Databricks",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@pipeline().parameters.item.Query",
								"type": "Expression"
							},
							"baseParameters": {
								"srcBlobName": {
									"value": "@pipeline().parameters.item.SourceBlobName",
									"type": "Expression"
								},
								"dstDirectoryName": {
									"value": "@replace(pipeline().parameters.item.TargetLocation, concat(tolower(split(pipeline().parameters.item.StageName,'->')[1]),'/'),'')",
									"type": "Expression"
								},
								"srcDirectoryName": {
									"value": "@replace(pipeline().parameters.item.SourceLocation, concat(tolower(split(pipeline().parameters.item.StageName,'->')[0]),'/'),'')",
									"type": "Expression"
								},
								"srcKvSecret": {
									"value": "@pipeline().parameters.item.SourceConnection",
									"type": "Expression"
								},
								"dstKvSecret": {
									"value": "@pipeline().parameters.item.TargetConnection",
									"type": "Expression"
								},
								"srcContainerName": {
									"value": "@tolower(split(pipeline().parameters.item.StageName,'->')[0])",
									"type": "Expression"
								},
								"dstContainerName": {
									"value": "@tolower(split(pipeline().parameters.item.StageName,'->')[1])",
									"type": "Expression"
								},
								"srcAccount": {
									"value": "@split(pipeline().parameters.item.SourceDataStoreName,'-')[0]",
									"type": "Expression"
								},
								"dstAccount": {
									"value": "@split(pipeline().parameters.item.TargetDataStoreName,'-')[0]\n",
									"type": "Expression"
								},
								"srcFormat": {
									"value": "@pipeline().parameters.item.SourceFormat",
									"type": "Expression"
								},
								"dstFormat": {
									"value": "@pipeline().parameters.item.TargetFormat",
									"type": "Expression"
								},
								"dstTableName": {
									"value": "@pipeline().parameters.item.DestinationTable",
									"type": "Expression"
								},
								"srcType": {
									"value": "@pipeline().parameters.item.SourceType",
									"type": "Expression"
								},
								"prcType": {
									"value": "@pipeline().parameters.item.ProcessType",
									"type": "Expression"
								},
								"query": {
									"value": "@pipeline().parameters.item.SourceQuery",
									"type": "Expression"
								},
								"dstBlobName": {
									"value": "@pipeline().parameters.item.TargetBlobName",
									"type": "Expression"
								},
								"execTime": {
									"value": "@pipeline().parameters.execTime",
									"type": "Expression"
								},
								"dstType": {
									"value": "@pipeline().parameters.item.TargetType",
									"type": "Expression"
								},
								"catalogSecret": "DataCatalog-SP",
								"batchId": {
									"value": "@string(pipeline().parameters.item.BatchId)",
									"type": "Expression"
								},
								"sourceId": {
									"value": "@string(pipeline().parameters.item.SourceId)",
									"type": "Expression"
								},
								"targetId": {
									"value": "@string(pipeline().parameters.item.TargetId)",
									"type": "Expression"
								},
								"taskId": {
									"value": "@string(pipeline().parameters.item.TaskId)",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_DefinedCluster",
							"type": "LinkedServiceReference",
							"parameters": {
								"kvSecret": {
									"value": "@split(pipeline().parameters.item.WorkerDetails,'|')[0]",
									"type": "Expression"
								},
								"clusterId": {
									"value": "@split(pipeline().parameters.item.WorkerDetails,'|')[1]",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"item": {
						"type": "object"
					},
					"execTime": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}