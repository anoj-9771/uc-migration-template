{
	"name": "04-DL-Load-Raw-to-Delta-Table",
	"properties": {
		"activities": [
			{
				"name": "Set-ClusterType",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ClusterType",
					"value": {
						"value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If-ClusterType",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set-ClusterType",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('ClusterType'), 'interactive')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Notebook-Delta-Table-Job",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": {
									"value": "@variables('NoteBookURL')",
									"type": "Expression"
								},
								"baseParameters": {
									"file_object": {
										"value": "@concat(pipeline().parameters.TargetBLOBFolder,pipeline().parameters.TargetBLOBName)",
										"type": "Expression"
									},
									"source_param": {
										"value": "@string(pipeline().parameters.TaskDetails)",
										"type": "Expression"
									},
									"file_date_time_stamp": {
										"value": "@pipeline().parameters.SourceFileDateTimeStamp",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureDatabricks_JobCluster",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
										"type": "Expression"
									},
									"DataBricksClusterType": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
										"type": "Expression"
									},
									"DataBricksClusterVersion": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
										"type": "Expression"
									},
									"DataBricksWorkerNodes": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Set-ReturnValue-Job-DataFile",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Notebook-Delta-Table-Job",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "DataFileRecordCount",
								"value": {
									"value": "@string(activity('Notebook-Delta-Table-Job').output.runOutput.DataFileRecordCount)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set-ReturnValue-Job-TargetTable",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Notebook-Delta-Table-Job",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "TargetTableRecordCount",
								"value": {
									"value": "@string(activity('Notebook-Delta-Table-Job').output.runOutput.TargetTableRecordCount)",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Notebook-Delta-Table-Interactive",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.02:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": {
									"value": "@variables('NoteBookURL')",
									"type": "Expression"
								},
								"baseParameters": {
									"file_object": {
										"value": "@concat(pipeline().parameters.TargetBLOBFolder,pipeline().parameters.TargetBLOBName)",
										"type": "Expression"
									},
									"source_param": {
										"value": "@string(pipeline().parameters.TaskDetails)",
										"type": "Expression"
									},
									"file_date_time_stamp": {
										"value": "@pipeline().parameters.SourceFileDateTimeStamp",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureDatabricks_DefinedCluster",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
										"type": "Expression"
									},
									"clusterId": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Set-ReturnValue-Interactive-DataFile",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Notebook-Delta-Table-Interactive",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "DataFileRecordCount",
								"value": {
									"value": "@string(activity('Notebook-Delta-Table-Interactive').output.runOutput.DataFileRecordCount)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set-ReturnValue-Interactive-TargetTable",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Notebook-Delta-Table-Interactive",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "TargetTableRecordCount",
								"value": {
									"value": "@string(activity('Notebook-Delta-Table-Interactive').output.runOutput.TargetTableRecordCount)",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "SP-Update-Manifest-Delta-Records",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "If-ClusterType",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateManifestDeltaRecords]",
					"storedProcedureParameters": {
						"BatchExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"TaskExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"RecordsDeltaTable": {
							"value": {
								"value": "@variables('DataFileRecordCount')",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"SourceFileDateStamp": {
							"value": {
								"value": "@pipeline().parameters.SourceFileDateTimeStamp",
								"type": "Expression"
							},
							"type": "String"
						},
						"RecordsTargetTable": {
							"value": {
								"value": "@variables('TargetTableRecordCount')",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"BatchLogID": {
				"type": "int",
				"defaultValue": 1
			},
			"TaskExecutionLogId": {
				"type": "int",
				"defaultValue": 1
			},
			"TaskDetails": {
				"type": "object"
			},
			"TargetBLOBFolder": {
				"type": "string",
				"defaultValue": "raw"
			},
			"TargetBLOBName": {
				"type": "string",
				"defaultValue": "targetdirectory"
			},
			"ProjectRunID": {
				"type": "string"
			},
			"SourceFileName": {
				"type": "string"
			},
			"SourceFileDateTimeStamp": {
				"type": "string"
			}
		},
		"variables": {
			"TargetTableRecordCount": {
				"type": "String"
			},
			"ClusterType": {
				"type": "String"
			},
			"NoteBookURL": {
				"type": "String",
				"defaultValue": "/build/raw/load-raw-deltatable"
			},
			"DataFileRecordCount": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Data Lake"
		},
		"annotations": [],
		"lastPublishTime": "2022-03-22T04:55:11Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}