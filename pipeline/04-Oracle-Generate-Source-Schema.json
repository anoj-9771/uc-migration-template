{
	"name": "04-Oracle-Generate-Source-Schema",
	"properties": {
		"activities": [
			{
				"name": "Generate Schema",
				"description": "",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set-File",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": {
							"value": "@replace(replace(variables('SQL'), '<<TABLE>>', variables('Table')), '<<OWNER>>', variables('Owner'))",
							"type": "Expression"
						},
						"partitionOption": "None",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "SRC_Oracle",
						"type": "DatasetReference",
						"parameters": {
							"kvSecret": {
								"value": "@pipeline().parameters.SourceServer",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "RAW_ADLS_Schema",
						"type": "DatasetReference",
						"parameters": {
							"BlobPath": {
								"value": "@variables('Folder')",
								"type": "Expression"
							},
							"BlobName": {
								"value": "@variables('File')",
								"type": "Expression"
							},
							"Compression": "none",
							"ColumnDelim": ",",
							"HeaderRow": false
						}
					}
				]
			},
			{
				"name": "Set-Owner",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Owner",
					"value": {
						"value": "@split(pipeline().parameters.SourceObject,'.')[0]",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set-Table",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Table",
					"value": {
						"value": "@split(pipeline().parameters.SourceObject,'.')[1]",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Generate Schema Original",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Generate Schema",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": {
							"value": "@replace(replace(variables('SQL-Original'), '<<TABLE>>', variables('Table')), '<<OWNER>>', variables('Owner'))",
							"type": "Expression"
						},
						"partitionOption": "None",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "SRC_Oracle",
						"type": "DatasetReference",
						"parameters": {
							"kvSecret": {
								"value": "@pipeline().parameters.SourceServer",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "RAW_ADLS_Schema",
						"type": "DatasetReference",
						"parameters": {
							"BlobPath": {
								"value": "@concat(variables('Folder'), '/original/')",
								"type": "Expression"
							},
							"BlobName": {
								"value": "@concat(variables('File'), '.csv')",
								"type": "Expression"
							},
							"Compression": "none",
							"ColumnDelim": ",",
							"HeaderRow": true
						}
					}
				]
			},
			{
				"name": "Set-Folder",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Folder",
					"value": {
						"value": "@toLower(concat(pipeline().parameters.Project, '//', 'schema'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set-File",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set-Owner",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-Table",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-Folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "File",
					"value": {
						"value": "@toLower(concat(variables('Owner'), '_', variables('Table'), '.', 'schema'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If-Empty-Delete",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Generate Schema Original",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Generate Schema').output.rowsCopied, 0)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Delete-Empty-File",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "RAW_PARQUET",
									"type": "DatasetReference",
									"parameters": {
										"BlobPath": "a",
										"BlobName": "a"
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "LS_AzureDatalake",
										"type": "LinkedServiceReference"
									},
									"path": "log"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"SourceObject": {
				"type": "string",
				"defaultValue": "EBS_0165.USERS"
			},
			"Project": {
				"type": "string",
				"defaultValue": "OneEBS"
			},
			"SourceServer": {
				"type": "string",
				"defaultValue": "OneEBS-0165"
			}
		},
		"variables": {
			"Owner": {
				"type": "String"
			},
			"Table": {
				"type": "String"
			},
			"SQL": {
				"type": "String",
				"defaultValue": "SELECT column_name,         CASE           WHEN data_type = 'NUMBER' AND data_scale = 0 THEN 'double'           WHEN data_type = 'NUMBER' AND data_scale > 0 THEN 'double'           WHEN data_type = 'DATE' THEN 'timestamp'           ELSE 'string'         END                              AS fieldtype,         CASE           WHEN data_type = 'DATE' THEN 'DATETIME2'           ELSE data_type         END                              AS data_type,         Nvl(data_precision, data_length) PRECISION,         data_scale                       scale,         table_name                       table_name,         owner                            table_schema  FROM   all_tab_cols  WHERE  table_name = '<<TABLE>>'         AND owner = '<<OWNER>>'         AND hidden_column = 'NO'  \t   "
			},
			"SQL-Original": {
				"type": "String",
				"defaultValue": "SELECT * FROM all_tab_cols WHERE table_name = '<<TABLE>>' \tAND owner = '<<OWNER>>'"
			},
			"Folder": {
				"type": "String"
			},
			"File": {
				"type": "String"
			}
		},
		"folder": {
			"name": "z_Archive/Oracle"
		},
		"annotations": [],
		"lastPublishTime": "2022-02-13T23:11:32Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}