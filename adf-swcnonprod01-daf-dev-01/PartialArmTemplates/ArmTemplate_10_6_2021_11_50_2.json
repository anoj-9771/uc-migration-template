{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-swcnonprod01-daf-dev-01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/03-Execute-Project-Tasks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Load Tasks",
						"description": "",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set RunDate",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set RunTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[CTL].[getExecutionTasks]",
								"storedProcedureParameters": {
									"ProjectId": {
										"type": "Int64",
										"value": {
											"value": "@pipeline().parameters.ProjectId",
											"type": "Expression"
										}
									},
									"StageId": {
										"type": "Int64",
										"value": {
											"value": "@pipeline().parameters.StageId",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabase_Ctrldb",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Execute Each Task",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Generate Batch Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Load Tasks').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Generate Task Log",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[CTL].[CreateTaskLog]",
											"storedProcedureParameters": {
												"BatchLogId": {
													"type": "Int64",
													"value": {
														"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
														"type": "Expression"
													}
												},
												"TaskId": {
													"type": "Int64",
													"value": {
														"value": "@item().TaskId",
														"type": "Expression"
													}
												}
											},
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlDatabase_Ctrldb",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Source-to-Raw-Blob      Stage1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Generate Task Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(equals(item().SourceType,'BLOB Storage (json)'), equals(item().ControlStageId,1))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "EP-Blob-to-Raw",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "04-Blob-Json-A-Source-Copy",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"TaskDetails": {
															"value": "@item()",
															"type": "Expression"
														},
														"BatchLogId": {
															"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
															"type": "Expression"
														},
														"TaskExecutionLogId": {
															"value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
															"type": "Expression"
														},
														"ProjectRunID": {
															"value": "@pipeline().parameters.ProjectRunID",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "Raw-to-Cleansed Stage2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Generate Task Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().ControlStageId,2)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "EP-Raw-to-Cleansed",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "05-DL-Load-Raw-to-Cleansed",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"TaskDetails": {
															"value": "@item()",
															"type": "Expression"
														},
														"BatchLogId": {
															"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
															"type": "Expression"
														},
														"TaskExecutionLogId": {
															"value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
															"type": "Expression"
														},
														"ProjectRunID": {
															"value": "@pipeline().parameters.ProjectRunID",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "Cleansed-to-Curated Stage3",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Generate Task Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().ControlStageId,3)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "EP-Cleansed-to-Curated",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "05-DL-Load-Cleansed-to-Curated",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"TaskDetails": {
															"value": "@item()",
															"type": "Expression"
														},
														"BatchLogId": {
															"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
															"type": "Expression"
														},
														"TaskExecutionLogId": {
															"value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
															"type": "Expression"
														},
														"ProjectRunID": {
															"value": "@pipeline().parameters.ProjectRunID",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "Source-to-Raw-Blob _FlatFile_Copy",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Generate Task Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(equals(item().SourceType,'Flat File'), equals(item().ControlStageId,1))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "EP-Lake-to-Raw",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "04-LakeLanding-FlatFile-A-Source-Copy",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"TaskDetails": {
															"value": "@item()",
															"type": "Expression"
														},
														"BatchLogId": {
															"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
															"type": "Expression"
														},
														"TaskExecutionLogId": {
															"value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
															"type": "Expression"
														},
														"ProjectRunID": {
															"value": "@pipeline().parameters.ProjectRunID",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "Source-to-Raw-SQL Stage1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Generate Task Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(equals(item().SourceType,'SQL Server'), equals(item().ControlStageId,1))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "EP-SqlSource-to-Raw-Load",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "04-SQLServer-A-Source Load",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"BatchLogId": {
															"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
															"type": "Expression"
														},
														"TaskDetails": {
															"value": "@item()",
															"type": "Expression"
														},
														"TaskExecutionLogId": {
															"value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
															"type": "Expression"
														},
														"ProjectRunID": {
															"value": "@pipeline().parameters.ProjectRunID",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "SRC-RAW-Blob-CSV      Stage1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Generate Task Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(equals(item().SourceType,'BLOB Storage (csv)'), equals(item().ControlStageId,1))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "EP-SRC-RAW-BLOB-CSV",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "04-Blob-A-Source Load_CSV",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"TaskDetails": {
															"value": "@item()",
															"type": "Expression"
														},
														"BatchLogId": {
															"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
															"type": "Expression"
														},
														"TaskExecutionLogId": {
															"value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
															"type": "Expression"
														},
														"ProjectRunID": {
															"value": "@pipeline().parameters.ProjectRunID",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Batch Log Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute Each Task",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CTL].[UpdateBatchLog]",
							"storedProcedureParameters": {
								"BatchLogId": {
									"value": {
										"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"Status": {
									"value": "Complete",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference",
							"parameters": {
								"kvSecret": "daf-sql-controldb-connectionstring"
							}
						}
					},
					{
						"name": "Batch Log Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute Each Task",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CTL].[UpdateBatchLog]",
							"storedProcedureParameters": {
								"BatchLogId": {
									"value": {
										"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ErrorMessage": {
									"value": "Check Task Execution Log for errors",
									"type": "String"
								},
								"Status": {
									"value": "Failure",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference",
							"parameters": {
								"kvSecret": "daf-sql-controldb-connectionstring"
							}
						}
					},
					{
						"name": "Generate Batch Log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get Load Tasks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[CTL].[CreateBatchLog]",
								"storedProcedureParameters": {
									"ProjectID": {
										"type": "Int64",
										"value": {
											"value": "@pipeline().parameters.ProjectId",
											"type": "Expression"
										}
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabase_Ctrldb",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Set RunDate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunDate",
							"value": {
								"value": "@formatDateTime(convertFromUtc(utcnow(),'AUS Eastern Standard Time'),'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set RunTime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunTime",
							"value": {
								"value": "@formatDateTime(convertFromUtc(utcnow(),'AUS Eastern Standard Time'),'yyyyMMdd_HH:mm:ss')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"StageId": {
						"type": "int"
					},
					"ProjectId": {
						"type": "int"
					},
					"ProjectRunID": {
						"type": "string"
					}
				},
				"variables": {
					"RunDate": {
						"type": "String"
					},
					"RunTime": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-06-30T02:11:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/04-Blob-A-Source Load_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04-Blob-A-Source Load_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Clone of 05-DL-Load-Raw-to-Trusted",
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set-Source-Container",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set-Source-Filename",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set ProjectName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SRC_BLOB_JSON_copy1",
								"type": "DatasetReference",
								"parameters": {
									"BlobName": {
										"value": "@concat(variables('SourceFileName'),'*')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "Loop-All-Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SET-FileName to Child Item",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileName",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Handle Manifest Files",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "Set Manifest File or Not",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@variables('Manifest')",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "DataFile",
												"activities": [
													{
														"name": "Copy-Blob-to-DataLake-Raw",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "SRC_BLOB_CSV",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@variables('SourceContainer')",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "RAW_ADLS_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobPath": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Execute-DP-Load-Raw-to-Delta-Table",
														"type": "ExecutePipeline",
														"dependsOn": [
															{
																"activity": "SP-Upsert-Manifest-Record-Data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "04-DL-Load-Raw-to-Delta-Table",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"BatchLogID": {
																	"value": "@pipeline().parameters.BatchLogId",
																	"type": "Expression"
																},
																"TaskExecutionLogId": {
																	"value": "@pipeline().parameters.TaskExecutionLogId",
																	"type": "Expression"
																},
																"TaskDetails": {
																	"value": "@pipeline().parameters.TaskDetails",
																	"type": "Expression"
																},
																"TargetBLOBFolder": {
																	"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																	"type": "Expression"
																},
																"TargetBLOBName": {
																	"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																	"type": "Expression"
																},
																"ProjectRunID": {
																	"value": "@pipeline().parameters.ProjectRunID",
																	"type": "Expression"
																},
																"SourceFileName": {
																	"value": "@variables('FileName')",
																	"type": "Expression"
																},
																"SourceFileDateTimeStamp": {
																	"value": "@variables('FileDateTimeStamp')",
																	"type": "Expression"
																}
															}
														}
													},
													{
														"name": "Copy Blob File to ArchiveContainer",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "Execute-DP-Load-Raw-to-Delta-Table",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobStorageWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "SRC_BLOB_CSV",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@variables('SourceContainer')",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "ARCHIVE_BLOB_JSON",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@concat(variables('ProjectName'),'/',pipeline().parameters.RunDate,'/',pipeline().parameters.RunTime)",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Delete File from LandingBlob",
														"type": "Delete",
														"dependsOn": [
															{
																"activity": "Copy Blob File to ArchiveContainer",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataset": {
																"referenceName": "SRC_BLOB_CSV",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@variables('SourceContainer')",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															},
															"logStorageSettings": {
																"linkedServiceName": {
																	"referenceName": "LS_AzureDatalake",
																	"type": "LinkedServiceReference"
																},
																"path": "assurance"
															},
															"enableLogging": true,
															"storeSettings": {
																"type": "AzureBlobStorageReadSettings",
																"recursive": true,
																"enablePartitionDiscovery": false
															}
														}
													},
													{
														"name": "SP-Upsert-Manifest-Record-Data",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "Copy-Blob-to-DataLake-Raw",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[CTL].[UpsertManifestRecord]",
															"storedProcedureParameters": {
																"BatchExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.BatchLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"Container": {
																	"value": "raw",
																	"type": "String"
																},
																"DeltaColumn": {
																	"value": null,
																	"type": "String"
																},
																"EndCounter": {
																	"value": "0",
																	"type": "String"
																},
																"FileName": {
																	"value": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"FolderName": {
																	"value": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"PipelineRunID": {
																	"value": {
																		"value": "@pipeline().RunId",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"Records": {
																	"value": "1",
																	"type": "Int64"
																},
																"RecordsDeltaTable": {
																	"value": null,
																	"type": "Int64"
																},
																"SourceObject": {
																	"value": {
																		"value": "@pipeline().parameters.TaskDetails.SourceName",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"StartCounter": {
																	"value": "0",
																	"type": "String"
																},
																"TaskExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.TaskExecutionLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"SourceFileName": {
																	"value": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"IsManifest": {
																	"value": "false",
																	"type": "Boolean"
																},
																"SourceFileDateStamp": {
																	"value": {
																		"value": "@variables('FileDateTimeStamp')",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS-AzureSqlDatabase_Ctrldb",
															"type": "LinkedServiceReference",
															"parameters": {
																"kvSecret": "daf-sql-controldb-connectionstring"
															}
														}
													}
												]
											},
											{
												"value": "ManifestFile",
												"activities": [
													{
														"name": "Copy Manifest to Raw Zone",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "SRC_BLOB_JSON_copy1",
																"type": "DatasetReference",
																"parameters": {
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "RAW_ADLS_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobPath": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Archive Manifest File",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "SP-Update-Manifest-Value",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobStorageWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "SRC_BLOB_JSON_copy1",
																"type": "DatasetReference",
																"parameters": {
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "ARCHIVE_BLOB_JSON",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@concat(variables('ProjectName'),'/',pipeline().parameters.RunDate,'/',pipeline().parameters.RunTime)",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Delete File From Landing",
														"type": "Delete",
														"dependsOn": [
															{
																"activity": "Archive Manifest File",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataset": {
																"referenceName": "SRC_BLOB_JSON_copy1",
																"type": "DatasetReference",
																"parameters": {
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															},
															"logStorageSettings": {
																"linkedServiceName": {
																	"referenceName": "LS_AzureDatalake",
																	"type": "LinkedServiceReference"
																},
																"path": "assurance"
															},
															"enableLogging": true,
															"storeSettings": {
																"type": "AzureBlobStorageReadSettings",
																"recursive": true,
																"enablePartitionDiscovery": false
															}
														}
													},
													{
														"name": "SP-Upsert-Manifest-Record",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "Copy Manifest to Raw Zone",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[CTL].[UpsertManifestRecord]",
															"storedProcedureParameters": {
																"BatchExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.BatchLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"Container": {
																	"value": "raw",
																	"type": "String"
																},
																"DeltaColumn": {
																	"value": null,
																	"type": "String"
																},
																"EndCounter": {
																	"value": "0",
																	"type": "String"
																},
																"FileName": {
																	"value": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"FolderName": {
																	"value": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"PipelineRunID": {
																	"value": {
																		"value": "@pipeline().RunId",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"Records": {
																	"value": "1",
																	"type": "Int64"
																},
																"RecordsDeltaTable": {
																	"value": null,
																	"type": "Int64"
																},
																"SourceFileName": {
																	"value": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"SourceObject": {
																	"value": {
																		"value": "@pipeline().parameters.TaskDetails.SourceName",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"StartCounter": {
																	"value": "0",
																	"type": "String"
																},
																"TaskExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.TaskExecutionLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"IsManifest": {
																	"value": "true",
																	"type": "Boolean"
																},
																"SourceFileDateStamp": {
																	"value": {
																		"value": "@variables('FileDateTimeStamp')",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS-AzureSqlDatabase_Ctrldb",
															"type": "LinkedServiceReference",
															"parameters": {
																"kvSecret": "daf-sql-controldb-connectionstring"
															}
														}
													},
													{
														"name": "Notebook-Read-Manifest-Value",
														"type": "DatabricksNotebook",
														"dependsOn": [
															{
																"activity": "SP-Upsert-Manifest-Record",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"notebookPath": {
																"value": "@variables('NoteBookURL')",
																"type": "Expression"
															},
															"baseParameters": {
																"file_object": {
																	"value": "@concat(activity('Get Full File Name').output.firstrow.StorageFolder,activity('Get Full File Name').output.firstrow.StorageFile)",
																	"type": "Expression"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS-AzureDatabricks_DefinedCluster",
															"type": "LinkedServiceReference",
															"parameters": {
																"kvSecret": {
																	"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
																	"type": "Expression"
																},
																"clusterId": {
																	"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
																	"type": "Expression"
																}
															}
														}
													},
													{
														"name": "SP-Update-Manifest-Value",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "Notebook-Read-Manifest-Value",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[CTL].[UpdateManifestValue]",
															"storedProcedureParameters": {
																"BatchExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.BatchLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"M_DeltaRecordCount": {
																	"value": {
																		"value": "@string(activity('Notebook-Read-Manifest-Value').output.runOutput.DELTA_RECORD_COUNT)",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"SourceFileDateStamp": {
																	"value": {
																		"value": "@variables('FileDateTimeStamp')",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"TaskExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.TaskExecutionLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"M_TotalNoRows": {
																	"value": {
																		"value": "@string(activity('Notebook-Read-Manifest-Value').output.runOutput.TOTAL_NO_OF_ROWS)",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"M_Message": {
																	"value": {
																		"value": "@string(activity('Notebook-Read-Manifest-Value').output.runOutput.message)",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS-AzureSqlDatabase_Ctrldb",
															"type": "LinkedServiceReference",
															"parameters": {
																"kvSecret": "daf-sql-controldb-connectionstring"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "Set Manifest File or Not",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set FileDateTimeStamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Manifest",
										"value": {
											"value": "@if(contains(variables('FileName'),'MANIFEST'),'ManifestFile','DataFile')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Get Full File Name",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
											"storedProcedureParameters": {
												"DeltaExtract": {
													"type": "Boolean",
													"value": {
														"value": "@pipeline().parameters.TaskDetails.DeltaExtract",
														"type": "Expression"
													}
												},
												"FileName": {
													"type": "String",
													"value": {
														"value": "@concat(pipeline().parameters.TaskDetails.SourceLocation, if(contains(variables('FileName'),'MANIFEST'),'_MANIFEST',''))",
														"type": "Expression"
													}
												},
												"FolderName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.TaskDetails.TargetLocation",
														"type": "Expression"
													}
												},
												"Grain": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.TaskDetails.ObjectGrain",
														"type": "Expression"
													}
												},
												"Compressed": {
													"type": "Boolean",
													"value": {
														"value": "true",
														"type": "Expression"
													}
												},
												"TargetType": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.TaskDetails.TargetType",
														"type": "Expression"
													}
												}
											},
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlDatabase_Ctrldb",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "Set FileDateTimeStamp",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Full File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "SET-FileName to Child Item",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileDateTimeStamp",
										"value": {
											"value": "@replace(last(split(variables('FileName'),'_')),'.json','')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set-Source-Container",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "SourceContainer",
							"value": {
								"value": "@toLower(first(split(pipeline().parameters.TaskDetails.SourceGroup,'/')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set-Source-Filename",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "SourceFileName",
							"value": {
								"value": "@last(split(pipeline().parameters.TaskDetails.SourceLocation,'/'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Log Failure DL Raw",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loop-All-Files",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "[[CTL].[UpdateTaskLog]",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"BatchLogId": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ErrorMessage": {
									"value": {
										"value": "@concat(pipeline().parameters.TaskDetails.SourceLocation, ' failed to load to raw zone')",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionLogId": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"Output": {
									"value": null
								},
								"Status": {
									"value": "Failure",
									"type": "String"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.TaskId",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference",
							"parameters": {
								"kvSecret": "daf-sql-controldb-connectionstring"
							}
						}
					},
					{
						"name": "Log Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loop-All-Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "[[CTL].[UpdateTaskLog]",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"BatchLogId": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"ExecutionLogId": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"Output": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.TaskId",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference",
							"parameters": {
								"kvSecret": "daf-sql-controldb-connectionstring"
							}
						}
					},
					{
						"name": "Set ProjectName",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ProjectName",
							"value": {
								"value": "@pipeline().parameters.TaskDetails.SourceGroup",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"TaskDetails": {
						"type": "object"
					},
					"BatchLogId": {
						"type": "int"
					},
					"TaskExecutionLogId": {
						"type": "int"
					},
					"ProjectRunID": {
						"type": "string"
					},
					"TargetBLOBFolder": {
						"type": "string"
					},
					"TargetBLOBName": {
						"type": "string"
					},
					"StartCounter": {
						"type": "string"
					},
					"EndCounter": {
						"type": "string"
					},
					"ValidationDetails": {
						"type": "string"
					},
					"RunDate": {
						"type": "string"
					},
					"RunTime": {
						"type": "string"
					}
				},
				"variables": {
					"SourceContainer": {
						"type": "String"
					},
					"SourceFileName": {
						"type": "String"
					},
					"OutputFileName": {
						"type": "String"
					},
					"DeltaSQL": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					},
					"DateStamp": {
						"type": "String"
					},
					"Manifest": {
						"type": "String"
					},
					"ProjectName": {
						"type": "String"
					},
					"FileDateTimeStamp": {
						"type": "String"
					},
					"NoteBookURL": {
						"type": "String",
						"defaultValue": "/build/raw/read-manifest-value"
					}
				},
				"folder": {
					"name": "Blob"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-30T08:46:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_BLOB_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04-Blob-A-Source Load_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Clone of 05-DL-Load-Raw-to-Trusted",
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set-Source-Container",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set-Source-Filename",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set ProjectName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SRC_BLOB_JSON_copy1",
								"type": "DatasetReference",
								"parameters": {
									"BlobName": {
										"value": "@concat(variables('SourceFileName'),'*')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "Loop-All-Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SET-FileName to Child Item",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileName",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Handle Manifest Files",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "Set Manifest File or Not",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@variables('Manifest')",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "DataFile",
												"activities": [
													{
														"name": "Copy-Blob-to-DataLake-Raw",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "SRC_BLOB_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@variables('SourceContainer')",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "RAW_ADLS_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobPath": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Execute-DP-Load-Raw-to-Delta-Table",
														"type": "ExecutePipeline",
														"dependsOn": [
															{
																"activity": "SP-Upsert-Manifest-Record-Data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "04-DL-Load-Raw-to-Delta-Table",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"BatchLogID": {
																	"value": "@pipeline().parameters.BatchLogId",
																	"type": "Expression"
																},
																"TaskExecutionLogId": {
																	"value": "@pipeline().parameters.TaskExecutionLogId",
																	"type": "Expression"
																},
																"TaskDetails": {
																	"value": "@pipeline().parameters.TaskDetails",
																	"type": "Expression"
																},
																"TargetBLOBFolder": {
																	"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																	"type": "Expression"
																},
																"TargetBLOBName": {
																	"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																	"type": "Expression"
																},
																"ProjectRunID": {
																	"value": "@pipeline().parameters.ProjectRunID",
																	"type": "Expression"
																},
																"SourceFileName": {
																	"value": "@variables('FileName')",
																	"type": "Expression"
																},
																"SourceFileDateTimeStamp": {
																	"value": "@variables('FileDateTimeStamp')",
																	"type": "Expression"
																}
															}
														}
													},
													{
														"name": "Copy Blob File to ArchiveContainer",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "Execute-DP-Load-Raw-to-Delta-Table",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobStorageWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "SRC_BLOB_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@variables('SourceContainer')",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "ARCHIVE_BLOB_JSON",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@concat(variables('ProjectName'),'/',pipeline().parameters.RunDate,'/',pipeline().parameters.RunTime)",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Delete File from LandingBlob",
														"type": "Delete",
														"dependsOn": [
															{
																"activity": "Copy Blob File to ArchiveContainer",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataset": {
																"referenceName": "SRC_BLOB_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@variables('SourceContainer')",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															},
															"logStorageSettings": {
																"linkedServiceName": {
																	"referenceName": "LS_AzureDatalake",
																	"type": "LinkedServiceReference"
																},
																"path": "assurance"
															},
															"enableLogging": true,
															"storeSettings": {
																"type": "AzureBlobStorageReadSettings",
																"recursive": true,
																"enablePartitionDiscovery": false
															}
														}
													},
													{
														"name": "SP-Upsert-Manifest-Record-Data",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "Copy-Blob-to-DataLake-Raw",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[CTL].[UpsertManifestRecord]",
															"storedProcedureParameters": {
																"BatchExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.BatchLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"Container": {
																	"value": "raw",
																	"type": "String"
																},
																"DeltaColumn": {
																	"value": null,
																	"type": "String"
																},
																"EndCounter": {
																	"value": "0",
																	"type": "String"
																},
																"FileName": {
																	"value": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"FolderName": {
																	"value": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"PipelineRunID": {
																	"value": {
																		"value": "@pipeline().RunId",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"Records": {
																	"value": "1",
																	"type": "Int64"
																},
																"RecordsDeltaTable": {
																	"value": null,
																	"type": "Int64"
																},
																"SourceObject": {
																	"value": {
																		"value": "@pipeline().parameters.TaskDetails.SourceName",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"StartCounter": {
																	"value": "0",
																	"type": "String"
																},
																"TaskExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.TaskExecutionLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"SourceFileName": {
																	"value": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"IsManifest": {
																	"value": "false",
																	"type": "Boolean"
																},
																"SourceFileDateStamp": {
																	"value": {
																		"value": "@variables('FileDateTimeStamp')",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS-AzureSqlDatabase_Ctrldb",
															"type": "LinkedServiceReference",
															"parameters": {
																"kvSecret": "daf-sql-controldb-connectionstring"
															}
														}
													}
												]
											},
											{
												"value": "ManifestFile",
												"activities": [
													{
														"name": "Copy Manifest to Raw Zone",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "SRC_BLOB_JSON_copy1",
																"type": "DatasetReference",
																"parameters": {
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "RAW_ADLS_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobPath": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Archive Manifest File",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "SP-Update-Manifest-Value",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobStorageWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "SRC_BLOB_JSON_copy1",
																"type": "DatasetReference",
																"parameters": {
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "ARCHIVE_BLOB_JSON",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@concat(variables('ProjectName'),'/',pipeline().parameters.RunDate,'/',pipeline().parameters.RunTime)",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Delete File From Landing",
														"type": "Delete",
														"dependsOn": [
															{
																"activity": "Archive Manifest File",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataset": {
																"referenceName": "SRC_BLOB_JSON_copy1",
																"type": "DatasetReference",
																"parameters": {
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															},
															"logStorageSettings": {
																"linkedServiceName": {
																	"referenceName": "LS_AzureDatalake",
																	"type": "LinkedServiceReference"
																},
																"path": "assurance"
															},
															"enableLogging": true,
															"storeSettings": {
																"type": "AzureBlobStorageReadSettings",
																"recursive": true,
																"enablePartitionDiscovery": false
															}
														}
													},
													{
														"name": "SP-Upsert-Manifest-Record",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "Copy Manifest to Raw Zone",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[CTL].[UpsertManifestRecord]",
															"storedProcedureParameters": {
																"BatchExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.BatchLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"Container": {
																	"value": "raw",
																	"type": "String"
																},
																"DeltaColumn": {
																	"value": null,
																	"type": "String"
																},
																"EndCounter": {
																	"value": "0",
																	"type": "String"
																},
																"FileName": {
																	"value": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"FolderName": {
																	"value": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"PipelineRunID": {
																	"value": {
																		"value": "@pipeline().RunId",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"Records": {
																	"value": "1",
																	"type": "Int64"
																},
																"RecordsDeltaTable": {
																	"value": null,
																	"type": "Int64"
																},
																"SourceFileName": {
																	"value": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"SourceObject": {
																	"value": {
																		"value": "@pipeline().parameters.TaskDetails.SourceName",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"StartCounter": {
																	"value": "0",
																	"type": "String"
																},
																"TaskExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.TaskExecutionLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"IsManifest": {
																	"value": "true",
																	"type": "Boolean"
																},
																"SourceFileDateStamp": {
																	"value": {
																		"value": "@variables('FileDateTimeStamp')",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS-AzureSqlDatabase_Ctrldb",
															"type": "LinkedServiceReference",
															"parameters": {
																"kvSecret": "daf-sql-controldb-connectionstring"
															}
														}
													},
													{
														"name": "Notebook-Read-Manifest-Value",
														"type": "DatabricksNotebook",
														"dependsOn": [
															{
																"activity": "SP-Upsert-Manifest-Record",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"notebookPath": {
																"value": "@variables('NoteBookURL')",
																"type": "Expression"
															},
															"baseParameters": {
																"file_object": {
																	"value": "@concat(activity('Get Full File Name').output.firstrow.StorageFolder,activity('Get Full File Name').output.firstrow.StorageFile)",
																	"type": "Expression"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS-AzureDatabricks_DefinedCluster",
															"type": "LinkedServiceReference",
															"parameters": {
																"kvSecret": {
																	"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
																	"type": "Expression"
																},
																"clusterId": {
																	"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
																	"type": "Expression"
																}
															}
														}
													},
													{
														"name": "SP-Update-Manifest-Value",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "Notebook-Read-Manifest-Value",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[CTL].[UpdateManifestValue]",
															"storedProcedureParameters": {
																"BatchExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.BatchLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"M_DeltaRecordCount": {
																	"value": {
																		"value": "@string(activity('Notebook-Read-Manifest-Value').output.runOutput.DELTA_RECORD_COUNT)",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"SourceFileDateStamp": {
																	"value": {
																		"value": "@variables('FileDateTimeStamp')",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"TaskExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.TaskExecutionLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"M_TotalNoRows": {
																	"value": {
																		"value": "@string(activity('Notebook-Read-Manifest-Value').output.runOutput.TOTAL_NO_OF_ROWS)",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"M_Message": {
																	"value": {
																		"value": "@string(activity('Notebook-Read-Manifest-Value').output.runOutput.message)",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS-AzureSqlDatabase_Ctrldb",
															"type": "LinkedServiceReference",
															"parameters": {
																"kvSecret": "daf-sql-controldb-connectionstring"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "Set Manifest File or Not",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set FileDateTimeStamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Manifest",
										"value": {
											"value": "@if(contains(variables('FileName'),'MANIFEST'),'ManifestFile','DataFile')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Get Full File Name",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
											"storedProcedureParameters": {
												"DeltaExtract": {
													"type": "Boolean",
													"value": {
														"value": "@pipeline().parameters.TaskDetails.DeltaExtract",
														"type": "Expression"
													}
												},
												"FileName": {
													"type": "String",
													"value": {
														"value": "@concat(pipeline().parameters.TaskDetails.SourceLocation, if(contains(variables('FileName'),'MANIFEST'),'_MANIFEST',''))",
														"type": "Expression"
													}
												},
												"FolderName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.TaskDetails.TargetLocation",
														"type": "Expression"
													}
												},
												"Grain": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.TaskDetails.ObjectGrain",
														"type": "Expression"
													}
												},
												"Compressed": {
													"type": "Boolean",
													"value": {
														"value": "true",
														"type": "Expression"
													}
												},
												"TargetType": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.TaskDetails.TargetType",
														"type": "Expression"
													}
												}
											},
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlDatabase_Ctrldb",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "Set FileDateTimeStamp",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Full File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "SET-FileName to Child Item",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileDateTimeStamp",
										"value": {
											"value": "@replace(last(split(variables('FileName'),'_')),'.json','')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set-Source-Container",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "SourceContainer",
							"value": {
								"value": "@toLower(first(split(pipeline().parameters.TaskDetails.SourceGroup,'/')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set-Source-Filename",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "SourceFileName",
							"value": {
								"value": "@last(split(pipeline().parameters.TaskDetails.SourceLocation,'/'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Log Failure DL Raw",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loop-All-Files",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "[[CTL].[UpdateTaskLog]",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"BatchLogId": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ErrorMessage": {
									"value": {
										"value": "@concat(pipeline().parameters.TaskDetails.SourceLocation, ' failed to load to raw zone')",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionLogId": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"Output": {
									"value": null
								},
								"Status": {
									"value": "Failure",
									"type": "String"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.TaskId",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference",
							"parameters": {
								"kvSecret": "daf-sql-controldb-connectionstring"
							}
						}
					},
					{
						"name": "Log Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loop-All-Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "[[CTL].[UpdateTaskLog]",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"BatchLogId": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"ExecutionLogId": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"Output": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.TaskId",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference",
							"parameters": {
								"kvSecret": "daf-sql-controldb-connectionstring"
							}
						}
					},
					{
						"name": "Set ProjectName",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ProjectName",
							"value": {
								"value": "@pipeline().parameters.TaskDetails.SourceGroup",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"TaskDetails": {
						"type": "object"
					},
					"BatchLogId": {
						"type": "int"
					},
					"TaskExecutionLogId": {
						"type": "int"
					},
					"ProjectRunID": {
						"type": "string"
					},
					"TargetBLOBFolder": {
						"type": "string"
					},
					"TargetBLOBName": {
						"type": "string"
					},
					"StartCounter": {
						"type": "string"
					},
					"EndCounter": {
						"type": "string"
					},
					"ValidationDetails": {
						"type": "string"
					},
					"RunDate": {
						"type": "string"
					},
					"RunTime": {
						"type": "string"
					}
				},
				"variables": {
					"SourceContainer": {
						"type": "String"
					},
					"SourceFileName": {
						"type": "String"
					},
					"OutputFileName": {
						"type": "String"
					},
					"DeltaSQL": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					},
					"DateStamp": {
						"type": "String"
					},
					"Manifest": {
						"type": "String"
					},
					"ProjectName": {
						"type": "String"
					},
					"FileDateTimeStamp": {
						"type": "String"
					},
					"NoteBookURL": {
						"type": "String",
						"defaultValue": "/build/raw/read-manifest-value"
					}
				},
				"folder": {
					"name": "Blob"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-30T08:46:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_BLOB_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobContainer": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().BlobContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}