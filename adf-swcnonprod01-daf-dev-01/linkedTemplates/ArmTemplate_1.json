{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-swcnonprod01-daf-dev-01"
		},
		"LS-AzureDatabricks_JobCluster_properties_typeProperties_domain": {
			"type": "string",
			"defaultValue": "https://australiaeast.azuredatabricks.net"
		},
		"LS-AzureSqlDatabase_Ctrldb_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "daf-sql-controldb-connectionstring"
		},
		"LS_AzureBlobStorage_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://sablobdafdev01.blob.core.windows.net"
		},
		"LS_AzureBlobStorage_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "8351bb5c-749d-4ee4-b1c4-71a3971acbe9"
		},
		"LS_AzureBlobStorage_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "acff96db-8630-433b-bbb1-35a3813fa036"
		},
		"LS_AzureDatabricks_InstancePool_properties_typeProperties_domain": {
			"type": "string",
			"defaultValue": "https://adb-7004525605760210.10.azuredatabricks.net"
		},
		"LS_AzureDatalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sadafdev01.dfs.core.windows.net"
		},
		"LS_AzureDatalake_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "8351bb5c-749d-4ee4-b1c4-71a3971acbe9"
		},
		"LS_AzureDatalake_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "acff96db-8630-433b-bbb1-35a3813fa036"
		},
		"LS_AzureSqlDatabase_Sewercctv_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "daf-sql-sewercctv-connectionstring"
		},
		"LS_DeltaLake_properties_typeProperties_domain": {
			"type": "string",
			"defaultValue": "https://adb-7004525605760210.10.azuredatabricks.net"
		},
		"azure_Sql_sewercctv_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "daf-sql-sewercctv-connectionstring"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS-AzureDatabricks_JobCluster')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"kvSecret": {
						"type": "String"
					},
					"DataBricksClusterType": {
						"type": "String"
					},
					"DataBricksClusterVersion": {
						"type": "String"
					},
					"DataBricksWorkerNodes": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "[parameters('LS-AzureDatabricks_JobCluster_properties_typeProperties_domain')]",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS-AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().kvSecret",
							"type": "Expression"
						},
						"secretVersion": "Latest version"
					},
					"newClusterNodeType": "@linkedService().DataBricksClusterType",
					"newClusterNumOfWorker": "@linkedService().DataBricksWorkerNodes",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "@linkedService().DataBricksClusterVersion",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime-Azure-ManagedVnet-01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS-AzureSqlDatabase_Ctrldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ETL Control database linked service",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS-AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS-AzureSqlDatabase_Ctrldb_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime-Azure-ManagedVnet-01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('LS_AzureBlobStorage_properties_typeProperties_serviceEndpoint')]",
					"tenant": "[parameters('LS_AzureBlobStorage_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('LS_AzureBlobStorage_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS-AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "SERVICE-PRINCIPAL-SECRET"
					},
					"accountKind": "StorageV2"
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime-Azure-ManagedVnet-01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureDatabricks_InstancePool')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"kvSecret": {
						"type": "string",
						"defaultValue": "databricks-token"
					},
					"PoolId": {
						"type": "string",
						"defaultValue": "0121-060302-next337-pool-owblzzx4"
					},
					"DatabricksVersion": {
						"type": "string",
						"defaultValue": "9.1.x-scala2.12"
					}
				},
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "[parameters('LS_AzureDatabricks_InstancePool_properties_typeProperties_domain')]",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS-AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().kvSecret",
							"type": "Expression"
						}
					},
					"instancePoolId": "@linkedService().PoolId",
					"newClusterNumOfWorker": "1:8",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "@linkedService().DatabricksVersion",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime-Azure-ManagedVnet-01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureDatalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AzureDatalake_properties_typeProperties_url')]",
					"tenant": "[parameters('LS_AzureDatalake_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('LS_AzureDatalake_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalCredentialType": "ServicePrincipalKey",
					"servicePrincipalCredential": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS-AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "SERVICE-PRINCIPAL-SECRET"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime-Azure-ManagedVnet-01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSqlDatabase_Sewercctv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS-AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_AzureSqlDatabase_Sewercctv_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime-Azure-ManagedVnet-01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_DeltaLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Databricks Delta Lake ",
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "[parameters('LS_DeltaLake_properties_typeProperties_domain')]",
					"clusterId": "0216-023322-gejhoxce",
					"workspaceResourceId": "/subscriptions/e59a4313-66c3-4db6-842d-6154c5e08205/resourceGroups/rg-swcnonprod01-daf-dev-01/providers/Microsoft.Databricks/workspaces/dbw-swcnonprod01-daf-dev-01"
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime-Azure-ManagedVnet-01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure_Sql_sewercctv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS-AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('azure_Sql_sewercctv_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime-Azure-ManagedVnet-01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/04-Blob-A-Pre-Process_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set-ClusterType",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ClusterType",
							"value": {
								"value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch-ClusterType",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set-ClusterType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@variables('ClusterType')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "interactive",
									"activities": [
										{
											"name": "Notebook-preprocess-bods-json Interactive",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.02:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": {
													"value": "@variables('NoteBookURL')",
													"type": "Expression"
												},
												"baseParameters": {
													"file_object": {
														"value": "@pipeline().parameters.SourceFileName",
														"type": "Expression"
													},
													"source_param": {
														"value": "@string(pipeline().parameters.TaskDetails)",
														"type": "Expression"
													},
													"source_container": {
														"value": "@pipeline().parameters.SourceContainer",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS-AzureDatabricks_DefinedCluster",
												"type": "LinkedServiceReference",
												"parameters": {
													"kvSecret": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
														"type": "Expression"
													},
													"clusterId": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "job-cluster",
									"activities": [
										{
											"name": "Notebook-preprocess-bods-json JobCluster",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.02:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": {
													"value": "@variables('NoteBookURL')",
													"type": "Expression"
												},
												"baseParameters": {
													"file_object": {
														"value": "@pipeline().parameters.SourceFileName",
														"type": "Expression"
													},
													"source_param": {
														"value": "@string(pipeline().parameters.TaskDetails)",
														"type": "Expression"
													},
													"source_container": {
														"value": "@pipeline().parameters.SourceContainer",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS-AzureDatabricks_JobCluster",
												"type": "LinkedServiceReference",
												"parameters": {
													"kvSecret": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
														"type": "Expression"
													},
													"DataBricksClusterType": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
														"type": "Expression"
													},
													"DataBricksClusterVersion": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
														"type": "Expression"
													},
													"DataBricksWorkerNodes": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "instance-pool",
									"activities": [
										{
											"name": "Notebook-preprocess-bods-json InstancePool",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.02:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": {
													"value": "@variables('NoteBookURL')",
													"type": "Expression"
												},
												"baseParameters": {
													"file_object": {
														"value": "@pipeline().parameters.SourceFileName",
														"type": "Expression"
													},
													"source_param": {
														"value": "@string(pipeline().parameters.TaskDetails)",
														"type": "Expression"
													},
													"source_container": {
														"value": "@pipeline().parameters.SourceContainer",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS_AzureDatabricks_InstancePool",
												"type": "LinkedServiceReference",
												"parameters": {
													"kvSecret": "databricks-token"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BatchLogID": {
						"type": "int",
						"defaultValue": 1
					},
					"TaskExecutionLogId": {
						"type": "int",
						"defaultValue": 1
					},
					"TaskDetails": {
						"type": "object"
					},
					"SourceContainer": {
						"type": "string",
						"defaultValue": "test"
					},
					"ProjectRunID": {
						"type": "string"
					},
					"SourceFileName": {
						"type": "string",
						"defaultValue": "0UC_DEVICEH_ATTR_20211025142337.json"
					}
				},
				"variables": {
					"TargetTableRecordCount": {
						"type": "String"
					},
					"ClusterType": {
						"type": "String",
						"defaultValue": "interactive"
					},
					"NoteBookURL": {
						"type": "String",
						"defaultValue": "/build/raw/preprocess-bods-json"
					},
					"DataFileRecordCount": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Pre-Process"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-30T03:14:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_JobCluster')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDatabricks_InstancePool')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04-DL-Load-Raw-to-Delta-Table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set-ClusterType",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ClusterType",
							"value": {
								"value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SP-Update-Manifest-Delta-Records",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SwitchCluster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CTL].[UpdateManifestDeltaRecords]",
							"storedProcedureParameters": {
								"BatchExecutionLogID": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TaskExecutionLogID": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"RecordsDeltaTable": {
									"value": {
										"value": "@variables('DataFileRecordCount')",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"SourceFileDateStamp": {
									"value": {
										"value": "@pipeline().parameters.SourceFileDateTimeStamp",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsTargetTable": {
									"value": {
										"value": "@variables('TargetTableRecordCount')",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SwitchCluster",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set-ClusterType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@variables('ClusterType')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "clusterpool",
									"activities": [
										{
											"name": "Notebook-Delta-Table-ClusterPool",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": {
													"value": "@variables('NoteBookURL')",
													"type": "Expression"
												},
												"baseParameters": {
													"file_object": {
														"value": "@concat(pipeline().parameters.TargetBLOBFolder,pipeline().parameters.TargetBLOBName)",
														"type": "Expression"
													},
													"source_param": {
														"value": "@string(pipeline().parameters.TaskDetails)",
														"type": "Expression"
													},
													"file_date_time_stamp": {
														"value": "@pipeline().parameters.SourceFileDateTimeStamp",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS_AzureDatabricks_InstancePool",
												"type": "LinkedServiceReference",
												"parameters": {
													"kvSecret": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
														"type": "Expression"
													},
													"PoolId": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
														"type": "Expression"
													},
													"DatabricksVersion": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "Set-ReturnValue-Pool-DataFile",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Notebook-Delta-Table-ClusterPool",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"variableName": "DataFileRecordCount",
												"value": {
													"value": "@string(activity('Notebook-Delta-Table-ClusterPool').output.runOutput.DataFileRecordCount)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set-ReturnValue-Pool-TargetTable",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Notebook-Delta-Table-ClusterPool",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"variableName": "TargetTableRecordCount",
												"value": {
													"value": "@string(activity('Notebook-Delta-Table-ClusterPool').output.runOutput.TargetTableRecordCount)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "jobcluster",
									"activities": [
										{
											"name": "Notebook-Delta-Table-Job",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": {
													"value": "@variables('NoteBookURL')",
													"type": "Expression"
												},
												"baseParameters": {
													"file_object": {
														"value": "@concat(pipeline().parameters.TargetBLOBFolder,pipeline().parameters.TargetBLOBName)",
														"type": "Expression"
													},
													"source_param": {
														"value": "@string(pipeline().parameters.TaskDetails)",
														"type": "Expression"
													},
													"file_date_time_stamp": {
														"value": "@pipeline().parameters.SourceFileDateTimeStamp",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS-AzureDatabricks_JobCluster",
												"type": "LinkedServiceReference",
												"parameters": {
													"kvSecret": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
														"type": "Expression"
													},
													"DataBricksClusterType": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
														"type": "Expression"
													},
													"DataBricksClusterVersion": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
														"type": "Expression"
													},
													"DataBricksWorkerNodes": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "Set-ReturnValue-Job-DataFile",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Notebook-Delta-Table-Job",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"variableName": "DataFileRecordCount",
												"value": {
													"value": "@string(activity('Notebook-Delta-Table-Job').output.runOutput.DataFileRecordCount)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set-ReturnValue-Job-TargetTable",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Notebook-Delta-Table-Job",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"variableName": "TargetTableRecordCount",
												"value": {
													"value": "@string(activity('Notebook-Delta-Table-Job').output.runOutput.TargetTableRecordCount)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "interactive",
									"activities": [
										{
											"name": "Notebook-Delta-Table-Interactive",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.02:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": {
													"value": "@variables('NoteBookURL')",
													"type": "Expression"
												},
												"baseParameters": {
													"file_object": {
														"value": "@concat(pipeline().parameters.TargetBLOBFolder,pipeline().parameters.TargetBLOBName)",
														"type": "Expression"
													},
													"source_param": {
														"value": "@string(pipeline().parameters.TaskDetails)",
														"type": "Expression"
													},
													"file_date_time_stamp": {
														"value": "@pipeline().parameters.SourceFileDateTimeStamp",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS-AzureDatabricks_DefinedCluster",
												"type": "LinkedServiceReference",
												"parameters": {
													"kvSecret": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
														"type": "Expression"
													},
													"clusterId": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "Set-ReturnValue-Interactive-DataFile",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Notebook-Delta-Table-Interactive",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"variableName": "DataFileRecordCount",
												"value": {
													"value": "@string(activity('Notebook-Delta-Table-Interactive').output.runOutput.DataFileRecordCount)",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set-ReturnValue-Interactive-TargetTable",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Notebook-Delta-Table-Interactive",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"variableName": "TargetTableRecordCount",
												"value": {
													"value": "@string(activity('Notebook-Delta-Table-Interactive').output.runOutput.TargetTableRecordCount)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BatchLogID": {
						"type": "int",
						"defaultValue": 1
					},
					"TaskExecutionLogId": {
						"type": "int",
						"defaultValue": 1
					},
					"TaskDetails": {
						"type": "object"
					},
					"TargetBLOBFolder": {
						"type": "string",
						"defaultValue": "raw"
					},
					"TargetBLOBName": {
						"type": "string",
						"defaultValue": "targetdirectory"
					},
					"ProjectRunID": {
						"type": "string"
					},
					"SourceFileName": {
						"type": "string"
					},
					"SourceFileDateTimeStamp": {
						"type": "string"
					}
				},
				"variables": {
					"TargetTableRecordCount": {
						"type": "String"
					},
					"ClusterType": {
						"type": "String"
					},
					"NoteBookURL": {
						"type": "String",
						"defaultValue": "/build/raw/load-raw-deltatable"
					},
					"DataFileRecordCount": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-30T03:14:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDatabricks_InstancePool')]",
				"[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_JobCluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/05-DL-Load-Raw-to-Cleansed_Bak')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Log Failure DL Cleansed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If-ClusterType",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "[[CTL].[UpdateTaskLog]",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"BatchLogId": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ErrorMessage": {
									"value": "Error Occurred during Trusted Zone load",
									"type": "String"
								},
								"ExecutionLogId": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"Output": {
									"value": null
								},
								"Status": {
									"value": "Failure",
									"type": "String"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.TaskId",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference",
							"parameters": {}
						}
					},
					{
						"name": "Log Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If-ClusterType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "[[CTL].[UpdateTaskLog]",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"BatchLogId": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"ExecutionLogId": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"Output": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.TaskId",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference",
							"parameters": {}
						}
					},
					{
						"name": "Set-ClusterType",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ClusterType",
							"value": {
								"value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If-ClusterType",
						"description": "",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set-ClusterType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('ClusterType'), 'interactive')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Load-To-Cleansed-Zone-Job",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@pipeline().parameters.TaskDetails.Command",
											"type": "Expression"
										},
										"baseParameters": {
											"source_object": {
												"value": "@pipeline().parameters.TaskDetails.SourceName",
												"type": "Expression"
											},
											"source_param": {
												"value": "@string(pipeline().parameters.TaskDetails)",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS-AzureDatabricks_JobCluster",
										"type": "LinkedServiceReference",
										"parameters": {
											"kvSecret": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
												"type": "Expression"
											},
											"DataBricksClusterType": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
												"type": "Expression"
											},
											"DataBricksClusterVersion": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
												"type": "Expression"
											},
											"DataBricksWorkerNodes": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "LoadToCleansed-Zone-Interactive",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@pipeline().parameters.TaskDetails.Command",
											"type": "Expression"
										},
										"baseParameters": {
											"source_object": {
												"value": "@pipeline().parameters.TaskDetails.SourceName",
												"type": "Expression"
											},
											"source_param": {
												"value": "@string(pipeline().parameters.TaskDetails)",
												"type": "Expression"
											},
											"delta_column": {
												"value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS-AzureDatabricks_DefinedCluster",
										"type": "LinkedServiceReference",
										"parameters": {
											"kvSecret": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
												"type": "Expression"
											},
											"clusterId": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TaskDetails": {
						"type": "object"
					},
					"BatchLogId": {
						"type": "int"
					},
					"TaskExecutionLogId": {
						"type": "int"
					},
					"ProjectRunID": {
						"type": "string"
					}
				},
				"variables": {
					"ReturnValue": {
						"type": "String"
					},
					"ClusterType": {
						"type": "String"
					},
					"SourceContainer": {
						"type": "String",
						"defaultValue": "raw"
					},
					"SourceDirectory": {
						"type": "String"
					},
					"SourceFileName": {
						"type": "String"
					},
					"TargetContainer": {
						"type": "String",
						"defaultValue": "trusted"
					},
					"TargetDirectory": {
						"type": "String"
					},
					"TargetFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "z_Archive"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-21T11:04:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
				"[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_JobCluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Technical-Reconciliation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SwitchCluster",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "clusterpool",
									"activities": [
										{
											"name": "Notebook-GetDeltaTableRecordCount-ClusterPool",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": {
													"value": "@variables('NotbookURL')",
													"type": "Expression"
												},
												"baseParameters": {
													"target_table": {
														"value": "@pipeline().parameters.TaskDetails.TargetName",
														"type": "Expression"
													},
													"filter_clause": {
														"value": "@if(equals(pipeline().parameters.TaskDetails.WhereClause,null),'',pipeline().parameters.TaskDetails.WhereClause)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS_AzureDatabricks_InstancePool",
												"type": "LinkedServiceReference",
												"parameters": {
													"kvSecret": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
														"type": "Expression"
													},
													"PoolId": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
														"type": "Expression"
													},
													"DatabricksVersion": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "SP-CreateTechRecRawToCleansed-ClusterPool",
											"type": "SqlServerStoredProcedure",
											"dependsOn": [
												{
													"activity": "Notebook-GetDeltaTableRecordCount-ClusterPool",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"storedProcedureName": "CTL.CreateTechRecRawToCleansed",
												"storedProcedureParameters": {
													"BatchExecutionId": {
														"value": {
															"value": "@pipeline().parameters.BatchLogId",
															"type": "Expression"
														},
														"type": "Int64"
													},
													"TaskExecutionLogId": {
														"value": {
															"value": "@pipeline().parameters.TaskExecutionLogId",
															"type": "Expression"
														},
														"type": "Int64"
													},
													"TaskId": {
														"value": {
															"value": "@pipeline().parameters.TaskDetails.TaskId",
															"type": "Expression"
														},
														"type": "Int64"
													},
													"SourceObject": {
														"value": {
															"value": "@pipeline().parameters.TaskDetails.SourceName",
															"type": "Expression"
														},
														"type": "String"
													},
													"TargetName": {
														"value": {
															"value": "@pipeline().parameters.TaskDetails.TargetName",
															"type": "Expression"
														},
														"type": "String"
													},
													"TotalNoRecords": {
														"value": {
															"value": "@activity('Notebook-GetDeltaTableRecordCount-ClusterPool').output.runOutput",
															"type": "Expression"
														},
														"type": "Int64"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS-AzureSqlDatabase_Ctrldb",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "jobcluster",
									"activities": [
										{
											"name": "Notebook-GetDeltaTableRecordCount-JobCluster",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": {
													"value": "@variables('NotbookURL')",
													"type": "Expression"
												},
												"baseParameters": {
													"target_table": {
														"value": "@pipeline().parameters.TaskDetails.TargetName",
														"type": "Expression"
													},
													"filter_clause": {
														"value": "@if(equals(pipeline().parameters.TaskDetails.WhereClause,null),'',pipeline().parameters.TaskDetails.WhereClause)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS-AzureDatabricks_JobCluster",
												"type": "LinkedServiceReference",
												"parameters": {
													"kvSecret": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
														"type": "Expression"
													},
													"DataBricksClusterType": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
														"type": "Expression"
													},
													"DataBricksClusterVersion": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
														"type": "Expression"
													},
													"DataBricksWorkerNodes": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "SP-CreateTechRecRawToCleansed-JobCluster",
											"type": "SqlServerStoredProcedure",
											"dependsOn": [
												{
													"activity": "Notebook-GetDeltaTableRecordCount-JobCluster",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"storedProcedureName": "CTL.CreateTechRecRawToCleansed",
												"storedProcedureParameters": {
													"BatchExecutionId": {
														"value": {
															"value": "@pipeline().parameters.BatchLogId",
															"type": "Expression"
														},
														"type": "Int64"
													},
													"TaskExecutionLogId": {
														"value": {
															"value": "@pipeline().parameters.TaskExecutionLogId",
															"type": "Expression"
														},
														"type": "Int64"
													},
													"TaskId": {
														"value": {
															"value": "@pipeline().parameters.TaskDetails.TaskId",
															"type": "Expression"
														},
														"type": "Int64"
													},
													"SourceObject": {
														"value": {
															"value": "@pipeline().parameters.TaskDetails.SourceName",
															"type": "Expression"
														},
														"type": "String"
													},
													"TargetName": {
														"value": {
															"value": "@pipeline().parameters.TaskDetails.TargetName",
															"type": "Expression"
														},
														"type": "String"
													},
													"TotalNoRecords": {
														"value": {
															"value": "@activity('Notebook-GetDeltaTableRecordCount-JobCluster').output.runOutput",
															"type": "Expression"
														},
														"type": "Int64"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS-AzureSqlDatabase_Ctrldb",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "interactive",
									"activities": [
										{
											"name": "Notebook-GetDeltaTableRecordCount-Interactive",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": {
													"value": "@variables('NotbookURL')",
													"type": "Expression"
												},
												"baseParameters": {
													"target_table": {
														"value": "@pipeline().parameters.TaskDetails.TargetName",
														"type": "Expression"
													},
													"filter_clause": {
														"value": "@if(equals(pipeline().parameters.TaskDetails.WhereClause,null),'',pipeline().parameters.TaskDetails.WhereClause)",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS-AzureDatabricks_DefinedCluster",
												"type": "LinkedServiceReference",
												"parameters": {
													"kvSecret": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
														"type": "Expression"
													},
													"clusterId": {
														"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
														"type": "Expression"
													}
												}
											}
										},
										{
											"name": "SP-CreateTechRecRawToCleansed-Interactive",
											"type": "SqlServerStoredProcedure",
											"dependsOn": [
												{
													"activity": "Notebook-GetDeltaTableRecordCount-Interactive",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"storedProcedureName": "CTL.CreateTechRecRawToCleansed",
												"storedProcedureParameters": {
													"BatchExecutionId": {
														"value": {
															"value": "@pipeline().parameters.BatchLogId",
															"type": "Expression"
														},
														"type": "Int64"
													},
													"TaskExecutionLogId": {
														"value": {
															"value": "@pipeline().parameters.TaskExecutionLogId",
															"type": "Expression"
														},
														"type": "Int64"
													},
													"TaskId": {
														"value": {
															"value": "@pipeline().parameters.TaskDetails.TaskId",
															"type": "Expression"
														},
														"type": "Int64"
													},
													"SourceObject": {
														"value": {
															"value": "@pipeline().parameters.TaskDetails.SourceName",
															"type": "Expression"
														},
														"type": "String"
													},
													"TargetName": {
														"value": {
															"value": "@pipeline().parameters.TaskDetails.TargetName",
															"type": "Expression"
														},
														"type": "String"
													},
													"TotalNoRecords": {
														"value": {
															"value": "@activity('Notebook-GetDeltaTableRecordCount-Interactive').output.runOutput",
															"type": "Expression"
														},
														"type": "Int64"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "LS-AzureSqlDatabase_Ctrldb",
												"type": "LinkedServiceReference"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TaskDetails": {
						"type": "object"
					},
					"BatchLogId": {
						"type": "int"
					},
					"TaskExecutionLogId": {
						"type": "int"
					}
				},
				"variables": {
					"NotbookURL": {
						"type": "String",
						"defaultValue": "/build/cleansed/utility/getDeltaTableRecordCount"
					}
				},
				"folder": {
					"name": "Validation"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDatabricks_InstancePool')]",
				"[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
				"[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_JobCluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/add-ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "add-ingestion-sp",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[AddIngestion]",
							"storedProcedureParameters": {
								"ExtendedProperties": {
									"value": null,
									"type": "String"
								},
								"KeyVaultSecret": {
									"value": "daf-sql-controldb-connectionstring",
									"type": "String"
								},
								"Query": {
									"value": null,
									"type": "String"
								},
								"RawFileExtension": {
									"value": null,
									"type": "String"
								},
								"Schema": {
									"value": "dbo",
									"type": "String"
								},
								"SourceHandler": {
									"value": "sql-load",
									"type": "String"
								},
								"SystemCode": {
									"value": "System",
									"type": "String"
								},
								"Table": {
									"value": "ExtractLoadManifest",
									"type": "String"
								},
								"WatermarkColumn": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "MDP-Framework/Setup"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/log-message')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "log-copy",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LogMessage]",
							"storedProcedureParameters": {
								"ID": {
									"value": {
										"value": "@pipeline().parameters.ID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ActivityType": {
									"value": {
										"value": "@pipeline().parameters.ActivityType",
										"type": "Expression"
									},
									"type": "String"
								},
								"Message": {
									"value": {
										"value": "@pipeline().parameters.Message",
										"type": "Expression"
									},
									"type": "String"
								},
								"IsTransform": {
									"value": {
										"value": "@pipeline().parameters.IsTransform",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ID": {
						"type": "int"
					},
					"ActivityType": {
						"type": "string"
					},
					"Message": {
						"type": "string"
					},
					"IsTransform": {
						"type": "bool"
					}
				},
				"folder": {
					"name": "MDP-Framework/Common/Logging"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/log-status-update')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "log-status-update",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[StatusUpdate]",
							"storedProcedureParameters": {
								"ID": {
									"value": {
										"value": "@pipeline().parameters.ID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Property": {
									"value": {
										"value": "@pipeline().parameters.Property",
										"type": "Expression"
									},
									"type": "String"
								},
								"Value": {
									"value": {
										"value": "@pipeline().parameters.Value",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ID": {
						"type": "int"
					},
					"Property": {
						"type": "string"
					},
					"Value": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MDP-Framework/Common/Logging"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARCHIVE_BLOB_BINARY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobContainer": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().BlobContainer",
							"type": "Expression"
						},
						"container": "archive"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARCHIVE_BLOB_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobContainer": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().BlobContainer",
							"type": "Expression"
						},
						"container": "archive"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARCHIVE_BLOB_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobContainer": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().BlobContainer",
							"type": "Expression"
						},
						"container": "archive"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ArchiveVideoFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Archive",
						"container": "sewercctvvideos"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_Ctrl_db_businessrecstage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "CTL",
					"table": "BusinessRecStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]"
			]
		}
	]
}