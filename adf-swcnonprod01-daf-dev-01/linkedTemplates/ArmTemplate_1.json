{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-swcnonprod01-daf-dev-01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BINARY_ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DST_RAW_ADLS_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobPath": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().BlobPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": "|",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"LakeContainer": {
						"type": "string",
						"defaultValue": "raw"
					},
					"LakeDirectory": {
						"type": "string"
					},
					"LakeFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().LakeFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().LakeDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().LakeContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"LakeContainer": {
						"type": "string"
					},
					"LakeDirectory": {
						"type": "string"
					},
					"LakeFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().LakeFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().LakeDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().LakeContainer",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip",
						"level": "Optimal"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dataset for access reference data",
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"LakeContainer": {
						"type": "string",
						"defaultValue": "raw"
					},
					"LakeDirectory": {
						"type": "string"
					},
					"LakeFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().LakeFileName",
							"type": "Expression"
						},
						"folderPath": "access data/Z309_TPROPERTY",
						"fileSystem": "raw"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RAW_ADLS_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobPath": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().BlobPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": "|",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RAW_ADLS_JSON_v2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobPath": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().BlobPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compression": {
						"type": "gzip",
						"level": "Optimal"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RAW_ADLS_Schema')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobPath": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					},
					"Compression": {
						"type": "string"
					},
					"ColumnDelim": {
						"type": "string",
						"defaultValue": ","
					},
					"HeaderRow": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "z_Archive"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().BlobPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": {
						"value": "@dataset().ColumnDelim",
						"type": "Expression"
					},
					"compressionCodec": {
						"value": "@dataset().Compression",
						"type": "Expression"
					},
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": {
						"value": "@dataset().HeaderRow",
						"type": "Expression"
					},
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RAW_PARQUET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobPath": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "z_Archive"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().BlobPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_BLOB_BINARY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobContainer": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().BlobContainer",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_BLOB_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobContainer": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().BlobContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_BLOB_CSV_NO_QUOTE_CHAR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Quote Character is set to default(No quote character)",
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobContainer": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().BlobContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_BLOB_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "bods"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_BLOB_JSON_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"container": "bods"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_BLOB_JSON_v2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobContainer": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().BlobContainer",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_Oracle')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Oracle",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "OracleDB-PAS"
					}
				},
				"parameters": {
					"kvSecret": {
						"type": "string"
					}
				},
				"folder": {
					"name": "z_Archive"
				},
				"annotations": [],
				"type": "OracleTable",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_RAW_LANDING_ADLS_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobPath": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('landing/',dataset().BlobPath)",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_SQLSERVER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": {
							"value": "@dataset().kvSecret",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"kvSecret": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SQL Server"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/04-Blob-A-Pre-Process_NC_File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set-ClusterType",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ClusterType",
							"value": {
								"value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If-ClusterType",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set-ClusterType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('ClusterType'), 'interactive')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Notebook-preprocess-iot-bom-nc",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@variables('NoteBookURL')",
											"type": "Expression"
										},
										"baseParameters": {
											"file_object": {
												"value": "@pipeline().parameters.SourceFileName",
												"type": "Expression"
											},
											"source_param": {
												"value": "@string(pipeline().parameters.TaskDetails)",
												"type": "Expression"
											},
											"source_container": {
												"value": "@pipeline().parameters.SourceContainer",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS-AzureDatabricks_JobCluster",
										"type": "LinkedServiceReference",
										"parameters": {
											"kvSecret": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
												"type": "Expression"
											},
											"DataBricksClusterType": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
												"type": "Expression"
											},
											"DataBricksClusterVersion": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
												"type": "Expression"
											},
											"DataBricksWorkerNodes": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Notebook-preprocess-iot-bom-nc Interactive",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@variables('NoteBookURL')",
											"type": "Expression"
										},
										"baseParameters": {
											"file_object": {
												"value": "@pipeline().parameters.SourceFileName",
												"type": "Expression"
											},
											"source_param": {
												"value": "@string(pipeline().parameters.TaskDetails)",
												"type": "Expression"
											},
											"source_container": {
												"value": "@pipeline().parameters.SourceContainer",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS-AzureDatabricks_DefinedCluster",
										"type": "LinkedServiceReference",
										"parameters": {
											"kvSecret": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
												"type": "Expression"
											},
											"clusterId": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Copy Blob File to ArchiveContainer",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "If-ClusterType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SRC_BLOB_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"BlobContainer": {
										"value": "@pipeline().parameters.SourceContainer",
										"type": "Expression"
									},
									"BlobName": {
										"value": "@pipeline().parameters.SourceFileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ARCHIVE_BLOB_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"BlobContainer": {
										"value": "@concat(pipeline().parameters.ProjectName,'/',pipeline().parameters.RunDate,'/',pipeline().parameters.RunTime)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete File from LandingBlob",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Blob File to ArchiveContainer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SRC_BLOB_BINARY",
								"type": "DatasetReference",
								"parameters": {
									"BlobContainer": {
										"value": "@pipeline().parameters.SourceContainer",
										"type": "Expression"
									},
									"BlobName": {
										"value": "@pipeline().parameters.SourceFileName",
										"type": "Expression"
									}
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "LS_AzureDatalake",
									"type": "LinkedServiceReference"
								},
								"path": "assurance"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BatchLogID": {
						"type": "int",
						"defaultValue": 1
					},
					"TaskExecutionLogId": {
						"type": "int",
						"defaultValue": 1
					},
					"TaskDetails": {
						"type": "object"
					},
					"SourceContainer": {
						"type": "string",
						"defaultValue": "test"
					},
					"ProjectRunID": {
						"type": "string"
					},
					"SourceFileName": {
						"type": "string",
						"defaultValue": "0UC_DEVICEH_ATTR_20211025142337.json"
					},
					"ProjectName": {
						"type": "string"
					},
					"RunDate": {
						"type": "string"
					},
					"RunTime": {
						"type": "string"
					}
				},
				"variables": {
					"TargetTableRecordCount": {
						"type": "String"
					},
					"ClusterType": {
						"type": "String",
						"defaultValue": "interactive"
					},
					"NoteBookURL": {
						"type": "String",
						"defaultValue": "/build/raw/preprocess-iot-bom-nc"
					},
					"DataFileRecordCount": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Pre-Process"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-30T03:14:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_BLOB_BINARY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04-Blob-A-Source Load_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Clone of 05-DL-Load-Raw-to-Trusted",
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set-Source-Container",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set-Source-Filename",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set ProjectName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SRC_BLOB_JSON_v2",
								"type": "DatasetReference",
								"parameters": {
									"BlobContainer": "@variables('SourceContainer')",
									"BlobName": "@concat(variables('SourceFileName'),'*')"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "Loop-All-Files",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SET-FileName to Child Item",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileName",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Handle Manifest Files",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "Set Manifest File or Not",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@variables('Manifest')",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "DataFile",
												"activities": [
													{
														"name": "Copy-Blob-to-DataLake-Raw",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "Execute-DP-Blob-A-Pre-Process_JSON",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "SRC_BLOB_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@variables('SourceContainer')",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "RAW_ADLS_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobPath": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Execute-DP-Load-Raw-to-Delta-Table",
														"type": "ExecutePipeline",
														"dependsOn": [
															{
																"activity": "SP-Upsert-Manifest-Record-Data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "04-DL-Load-Raw-to-Delta-Table",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"BatchLogID": {
																	"value": "@pipeline().parameters.BatchLogId",
																	"type": "Expression"
																},
																"TaskExecutionLogId": {
																	"value": "@pipeline().parameters.TaskExecutionLogId",
																	"type": "Expression"
																},
																"TaskDetails": {
																	"value": "@pipeline().parameters.TaskDetails",
																	"type": "Expression"
																},
																"TargetBLOBFolder": {
																	"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																	"type": "Expression"
																},
																"TargetBLOBName": {
																	"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																	"type": "Expression"
																},
																"ProjectRunID": {
																	"value": "@pipeline().parameters.ProjectRunID",
																	"type": "Expression"
																},
																"SourceFileName": {
																	"value": "@variables('FileName')",
																	"type": "Expression"
																},
																"SourceFileDateTimeStamp": {
																	"value": "@variables('FileDateTimeStamp')",
																	"type": "Expression"
																}
															}
														}
													},
													{
														"name": "Copy Blob File to ArchiveContainer",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "Execute-DP-Load-Raw-to-Delta-Table",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobStorageWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "SRC_BLOB_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@variables('SourceContainer')",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "ARCHIVE_BLOB_JSON",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@concat(variables('ProjectName'),'/',pipeline().parameters.RunDate,'/',pipeline().parameters.RunTime)",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Delete File from LandingBlob",
														"type": "Delete",
														"dependsOn": [
															{
																"activity": "Copy Blob File to ArchiveContainer",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataset": {
																"referenceName": "SRC_BLOB_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@variables('SourceContainer')",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	}
																}
															},
															"logStorageSettings": {
																"linkedServiceName": {
																	"referenceName": "LS_AzureDatalake",
																	"type": "LinkedServiceReference"
																},
																"path": "assurance"
															},
															"enableLogging": true,
															"storeSettings": {
																"type": "AzureBlobStorageReadSettings",
																"recursive": true,
																"enablePartitionDiscovery": false
															}
														}
													},
													{
														"name": "SP-Upsert-Manifest-Record-Data",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "Copy-Blob-to-DataLake-Raw",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[CTL].[UpsertManifestRecord]",
															"storedProcedureParameters": {
																"BatchExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.BatchLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"Container": {
																	"value": "raw",
																	"type": "String"
																},
																"DeltaColumn": {
																	"value": null,
																	"type": "String"
																},
																"EndCounter": {
																	"value": "0",
																	"type": "String"
																},
																"FileName": {
																	"value": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"FolderName": {
																	"value": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"PipelineRunID": {
																	"value": {
																		"value": "@pipeline().RunId",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"Records": {
																	"value": "1",
																	"type": "Int64"
																},
																"RecordsDeltaTable": {
																	"value": null,
																	"type": "Int64"
																},
																"SourceObject": {
																	"value": {
																		"value": "@pipeline().parameters.TaskDetails.SourceName",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"StartCounter": {
																	"value": "0",
																	"type": "String"
																},
																"TaskExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.TaskExecutionLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"SourceFileName": {
																	"value": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"IsManifest": {
																	"value": "false",
																	"type": "Boolean"
																},
																"SourceFileDateStamp": {
																	"value": {
																		"value": "@variables('FileDateTimeStamp')",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS-AzureSqlDatabase_Ctrldb",
															"type": "LinkedServiceReference",
															"parameters": {
																"kvSecret": "daf-sql-controldb-connectionstring"
															}
														}
													},
													{
														"name": "Execute-DP-Blob-A-Pre-Process_JSON",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "04-Blob-A-Pre-Process_JSON",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"BatchLogID": {
																	"value": "@pipeline().parameters.BatchLogId",
																	"type": "Expression"
																},
																"TaskExecutionLogId": {
																	"value": "@pipeline().parameters.TaskExecutionLogId",
																	"type": "Expression"
																},
																"TaskDetails": {
																	"value": "@pipeline().parameters.TaskDetails",
																	"type": "Expression"
																},
																"SourceContainer": {
																	"value": "@variables('SourceContainer')",
																	"type": "Expression"
																},
																"ProjectRunID": {
																	"value": "@pipeline().parameters.ProjectRunID",
																	"type": "Expression"
																},
																"SourceFileName": {
																	"value": "@variables('FileName')",
																	"type": "Expression"
																}
															}
														}
													}
												]
											},
											{
												"value": "ManifestFile",
												"activities": [
													{
														"name": "Copy Manifest to Raw Zone",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "SRC_BLOB_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": "@variables('SourceContainer')",
																	"BlobName": "@variables('FileName')"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "RAW_ADLS_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobPath": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																		"type": "Expression"
																	},
																	"BlobName": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Archive Manifest File",
														"type": "Copy",
														"dependsOn": [
															{
																"activity": "SP-Update-Manifest-Value",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "JsonSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "JsonReadSettings"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobStorageWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "SRC_BLOB_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": "@variables('SourceContainer')",
																	"BlobName": "@variables('FileName')"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "ARCHIVE_BLOB_JSON",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": {
																		"value": "@concat(variables('ProjectName'),'/',pipeline().parameters.RunDate,'/',pipeline().parameters.RunTime)",
																		"type": "Expression"
																	}
																}
															}
														]
													},
													{
														"name": "Delete File From Landing",
														"type": "Delete",
														"dependsOn": [
															{
																"activity": "Archive Manifest File",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"dataset": {
																"referenceName": "SRC_BLOB_JSON_v2",
																"type": "DatasetReference",
																"parameters": {
																	"BlobContainer": "@variables('SourceContainer')",
																	"BlobName": "@variables('FileName')"
																}
															},
															"logStorageSettings": {
																"linkedServiceName": {
																	"referenceName": "LS_AzureDatalake",
																	"type": "LinkedServiceReference"
																},
																"path": "assurance"
															},
															"enableLogging": true,
															"storeSettings": {
																"type": "AzureBlobStorageReadSettings",
																"recursive": true,
																"enablePartitionDiscovery": false
															}
														}
													},
													{
														"name": "SP-Upsert-Manifest-Record",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "Copy Manifest to Raw Zone",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[CTL].[UpsertManifestRecord]",
															"storedProcedureParameters": {
																"BatchExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.BatchLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"Container": {
																	"value": "raw",
																	"type": "String"
																},
																"DeltaColumn": {
																	"value": null,
																	"type": "String"
																},
																"EndCounter": {
																	"value": "0",
																	"type": "String"
																},
																"FileName": {
																	"value": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"FolderName": {
																	"value": {
																		"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"PipelineRunID": {
																	"value": {
																		"value": "@pipeline().RunId",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"Records": {
																	"value": "1",
																	"type": "Int64"
																},
																"RecordsDeltaTable": {
																	"value": null,
																	"type": "Int64"
																},
																"SourceFileName": {
																	"value": {
																		"value": "@variables('FileName')",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"SourceObject": {
																	"value": {
																		"value": "@pipeline().parameters.TaskDetails.SourceName",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"StartCounter": {
																	"value": "0",
																	"type": "String"
																},
																"TaskExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.TaskExecutionLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"IsManifest": {
																	"value": "true",
																	"type": "Boolean"
																},
																"SourceFileDateStamp": {
																	"value": {
																		"value": "@variables('FileDateTimeStamp')",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS-AzureSqlDatabase_Ctrldb",
															"type": "LinkedServiceReference",
															"parameters": {
																"kvSecret": "daf-sql-controldb-connectionstring"
															}
														}
													},
													{
														"name": "Notebook-Read-Manifest-Value",
														"type": "DatabricksNotebook",
														"dependsOn": [
															{
																"activity": "SP-Upsert-Manifest-Record",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"notebookPath": {
																"value": "@variables('NoteBookURL')",
																"type": "Expression"
															},
															"baseParameters": {
																"file_object": {
																	"value": "@concat(activity('Get Full File Name').output.firstrow.StorageFolder,activity('Get Full File Name').output.firstrow.StorageFile)",
																	"type": "Expression"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS-AzureDatabricks_DefinedCluster",
															"type": "LinkedServiceReference",
															"parameters": {
																"kvSecret": {
																	"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
																	"type": "Expression"
																},
																"clusterId": {
																	"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
																	"type": "Expression"
																}
															}
														}
													},
													{
														"name": "SP-Update-Manifest-Value",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "Notebook-Read-Manifest-Value",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[[CTL].[UpdateManifestValue]",
															"storedProcedureParameters": {
																"BatchExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.BatchLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"M_DeltaRecordCount": {
																	"value": {
																		"value": "@string(activity('Notebook-Read-Manifest-Value').output.runOutput.DELTA_RECORD_COUNT)",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"SourceFileDateStamp": {
																	"value": {
																		"value": "@variables('FileDateTimeStamp')",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"TaskExecutionLogID": {
																	"value": {
																		"value": "@pipeline().parameters.TaskExecutionLogId",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"M_TotalNoRows": {
																	"value": {
																		"value": "@string(activity('Notebook-Read-Manifest-Value').output.runOutput.TOTAL_NO_OF_ROWS)",
																		"type": "Expression"
																	},
																	"type": "Int64"
																},
																"M_Message": {
																	"value": {
																		"value": "@string(activity('Notebook-Read-Manifest-Value').output.runOutput.message)",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "LS-AzureSqlDatabase_Ctrldb",
															"type": "LinkedServiceReference",
															"parameters": {
																"kvSecret": "daf-sql-controldb-connectionstring"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "Set Manifest File or Not",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set FileDateTimeStamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Manifest",
										"value": {
											"value": "@if(contains(variables('FileName'),'MANIFEST'),'ManifestFile','DataFile')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Get Full File Name",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
											"storedProcedureParameters": {
												"DeltaExtract": {
													"type": "Boolean",
													"value": {
														"value": "@pipeline().parameters.TaskDetails.DeltaExtract",
														"type": "Expression"
													}
												},
												"FileName": {
													"type": "String",
													"value": {
														"value": "@concat(pipeline().parameters.TaskDetails.SourceLocation, if(contains(variables('FileName'),'MANIFEST'),'_MANIFEST',''))",
														"type": "Expression"
													}
												},
												"FolderName": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.TaskDetails.TargetLocation",
														"type": "Expression"
													}
												},
												"Grain": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.TaskDetails.ObjectGrain",
														"type": "Expression"
													}
												},
												"Compressed": {
													"type": "Boolean",
													"value": {
														"value": "true",
														"type": "Expression"
													}
												},
												"TargetType": {
													"type": "String",
													"value": {
														"value": "@pipeline().parameters.TaskDetails.TargetType",
														"type": "Expression"
													}
												}
											},
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlDatabase_Ctrldb",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "Set FileDateTimeStamp",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Full File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "SET-FileName to Child Item",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileDateTimeStamp",
										"value": {
											"value": "@replace(last(split(variables('FileName'),'_')),'.json','')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set-Source-Container",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "SourceContainer",
							"value": {
								"value": "@toLower(pipeline().parameters.TaskDetails.SourceGroup)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set-Source-Filename",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "SourceFileName",
							"value": {
								"value": "@last(split(pipeline().parameters.TaskDetails.SourceLocation,'/'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Log Failure DL Raw",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loop-All-Files",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "[[CTL].[UpdateTaskLog]",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"BatchLogId": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ErrorMessage": {
									"value": {
										"value": "@concat(pipeline().parameters.TaskDetails.SourceLocation, ' failed to load to raw zone')",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionLogId": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"Output": {
									"value": null
								},
								"Status": {
									"value": "Failure",
									"type": "String"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.TaskId",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference",
							"parameters": {
								"kvSecret": "daf-sql-controldb-connectionstring"
							}
						}
					},
					{
						"name": "Log Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loop-All-Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "[[CTL].[UpdateTaskLog]",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"BatchLogId": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"ExecutionLogId": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"Output": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.TaskId",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference",
							"parameters": {
								"kvSecret": "daf-sql-controldb-connectionstring"
							}
						}
					},
					{
						"name": "Set ProjectName",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ProjectName",
							"value": {
								"value": "@pipeline().parameters.TaskDetails.SourceGroup",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TaskDetails": {
						"type": "object"
					},
					"BatchLogId": {
						"type": "int"
					},
					"TaskExecutionLogId": {
						"type": "int"
					},
					"ProjectRunID": {
						"type": "string"
					},
					"TargetBLOBFolder": {
						"type": "string"
					},
					"TargetBLOBName": {
						"type": "string"
					},
					"StartCounter": {
						"type": "string"
					},
					"EndCounter": {
						"type": "string"
					},
					"ValidationDetails": {
						"type": "string"
					},
					"RunDate": {
						"type": "string"
					},
					"RunTime": {
						"type": "string"
					}
				},
				"variables": {
					"SourceContainer": {
						"type": "String"
					},
					"SourceFileName": {
						"type": "String"
					},
					"OutputFileName": {
						"type": "String"
					},
					"DeltaSQL": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					},
					"DateStamp": {
						"type": "String"
					},
					"Manifest": {
						"type": "String"
					},
					"ProjectName": {
						"type": "String"
					},
					"FileDateTimeStamp": {
						"type": "String"
					},
					"NoteBookURL": {
						"type": "String",
						"defaultValue": "/build/raw/read-manifest-value"
					}
				},
				"folder": {
					"name": "Blob"
				},
				"annotations": [],
				"lastPublishTime": "2021-06-30T08:46:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SRC_BLOB_JSON_v2')]",
				"[concat(variables('factoryId'), '/datasets/RAW_ADLS_JSON_v2')]"
			]
		}
	]
}