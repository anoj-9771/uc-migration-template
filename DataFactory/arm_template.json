{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "ama-panel-adf-dp-dev-as-01"
        },
        "LS-AzureDataLake_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'LS-AzureDataLake'"
        },
        "LS_LocalSQL_EDW_Temp_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'LS_LocalSQL_EDW_Temp'"
        },
        "DAILY-5AM-QLD_properties_01-Main_parameters_TriggerName": {
            "type": "string",
            "defaultValue": "DLY1300"
        },
        "LS_AzureLandingBlob_properties_typeProperties_serviceEndpoint": {
            "type": "string",
            "defaultValue": "https://saswcnonprod01landingdev.blob.core.windows.net"
        },
        "LS-AzureKeyVault_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://ama-panel-kv-dp-dev-as01.vault.azure.net/"
        },
        "LS_ODataSource_AADSP_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "@{linkedService().BaseUrl}"
        },
        "LS_ODataSource_AADSP_properties_typeProperties_tenant": {
            "type": "object",
            "defaultValue": {
                "type": "AzureKeyVaultSecret",
                "store": {
                    "referenceName": "LS-AzureKeyVault",
                    "type": "LinkedServiceReference"
                },
                "secretName": "directoryid"
            }
        },
        "LS_ODataSource_AADSP_properties_typeProperties_aadResourceId": {
            "type": "string",
            "defaultValue": "https://graph.microsoft.com"
        },
        "LS_ODataSource_AADSP_properties_typeProperties_servicePrincipalId": {
            "type": "object",
            "defaultValue": {
                "type": "AzureKeyVaultSecret",
                "store": {
                    "referenceName": "LS-AzureKeyVault",
                    "type": "LinkedServiceReference"
                },
                "secretName": "@{linkedService().AppID}"
            }
        },
        "LS-AzureSqlDatabase_SQLDB_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "@linkedService().kvSecret"
        },
        "LS_DataLake_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://amapaneldlsdpdevas01.dfs.core.windows.net"
        },
        "LS-AzureSqlDatabase_Ctrldb_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "@linkedService().kvSecret"
        },
        "LS_MySQL_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "@linkedService().kvSecret"
        },
        "LS_FileServer_properties_typeProperties_host": {
            "type": "object",
            "defaultValue": {
                "type": "AzureKeyVaultSecret",
                "store": {
                    "referenceName": "LS-AzureKeyVault",
                    "type": "LinkedServiceReference"
                },
                "secretName": "@{linkedService().URL}"
            }
        },
        "LS_FileServer_properties_typeProperties_userId": {
            "type": "string",
            "defaultValue": "@{linkedService().UserID}"
        },
        "LS_SharePointOnlineList_properties_typeProperties_servicePrincipalId": {
            "type": "object",
            "defaultValue": {
                "type": "AzureKeyVaultSecret",
                "store": {
                    "referenceName": "LS-AzureKeyVault",
                    "type": "LinkedServiceReference"
                },
                "secretName": "@{linkedService().AppID}"
            }
        },
        "LS_Oracle_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "@linkedService().kvSecret"
        },
        "LS_ODataSource_Basic_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "@{linkedService().BaseUrl}"
        },
        "LS_ODataSource_Basic_properties_typeProperties_userName": {
            "type": "object",
            "defaultValue": {
                "type": "AzureKeyVaultSecret",
                "store": {
                    "referenceName": "LS-AzureKeyVault",
                    "type": "LinkedServiceReference"
                },
                "secretName": "@{linkedService().Username}"
            }
        },
        "LS_REST_IRTAFE_Basic_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "@{linkedService().BaseUrl}"
        },
        "LS_REST_IRTAFE_Basic_properties_typeProperties_userName": {
            "type": "object",
            "defaultValue": {
                "type": "AzureKeyVaultSecret",
                "store": {
                    "referenceName": "LS-AzureKeyVault",
                    "type": "LinkedServiceReference"
                },
                "secretName": {
                    "value": "@linkedService().UserName",
                    "type": "Expression"
                }
            }
        },
        "LS-SQLServer_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "CS-ReportingData-VM-10001-81"
        },
        "LS-SQLServer_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "geminiarc\\SVC-ADF-DP-DEV-AS"
        },
        "LS_SQLAzure_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "@linkedService().kvSecret"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/DAILY-5AM-QLD')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "01-Main",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "TriggerName": "[parameters('DAILY-5AM-QLD_properties_01-Main_parameters_TriggerName')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2021-01-01T00:00:00",
                        "timeZone": "E. Australia Standard Time",
                        "schedule": {
                            "minutes": [
                                0
                            ],
                            "hours": [
                                5
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/01-Main')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ama-panel-SHIR')]",
            "type": "Microsoft.DataFactory/factories/integrationRuntimes",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "SelfHosted",
                "typeProperties": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/RAW_ODATA_AADSP_JSON')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_ODataSource_AADSP",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "AppID": {
                            "value": "@dataset().UserName",
                            "type": "Expression"
                        },
                        "AppSecret": {
                            "value": "@dataset().Password",
                            "type": "Expression"
                        },
                        "BaseUrl": {
                            "value": "@dataset().BaseUrl",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "UserName": {
                        "type": "string"
                    },
                    "Password": {
                        "type": "string"
                    },
                    "BaseUrl": {
                        "type": "string"
                    },
                    "Table": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "ODataResource",
                "schema": [],
                "typeProperties": {
                    "path": {
                        "value": "@dataset().Table",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_ODataSource_AADSP')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_AZURE_SQLSERVER')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS-AzureSqlDatabase_SQLDB",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "kvSecret": {
                            "value": "@dataset().kvSecret",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "kvSecret": {
                        "type": "string"
                    },
                    "TableName": {
                        "type": "string"
                    },
                    "SchemaName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().SchemaName",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().TableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_SQLDB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SRC_AzureSqlDatabase')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS-AzureSqlDatabase_SQLDB",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "kvSecret": {
                            "value": "@dataset().kvSecret",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "kvSecret": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_SQLDB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SRC_EXCEL')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS-AzureDataLake",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "FileName": {
                        "type": "string"
                    },
                    "SheetName": {
                        "type": "string"
                    },
                    "Container": {
                        "type": "string"
                    },
                    "Folder": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Excel",
                "typeProperties": {
                    "sheetName": {
                        "value": "@dataset().SheetName",
                        "type": "Expression"
                    },
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().FileName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().Folder",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().Container",
                            "type": "Expression"
                        }
                    },
                    "firstRowAsHeader": true
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDataLake')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RAW_ADLS_CSV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS-AzureDataLake",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "BlobPath": {
                        "type": "string"
                    },
                    "BlobName": {
                        "type": "string"
                    },
                    "Compression": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().BlobName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().BlobPath",
                            "type": "Expression"
                        },
                        "container": "raw"
                    },
                    "columnDelimiter": "|",
                    "compressionCodec": {
                        "value": "@dataset().Compression",
                        "type": "Expression"
                    },
                    "compressionLevel": "Optimal",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDataLake')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_Ctrldb')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "kvSecret": "AzureSqlDatabase-ControlDB"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/BINARY_FILESERVER')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_FileServer",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "UserID": {
                            "value": "@dataset().FileShareUserID",
                            "type": "Expression"
                        },
                        "URL": {
                            "value": "@dataset().FileShareURL",
                            "type": "Expression"
                        },
                        "Password": {
                            "value": "@dataset().FileSharePassword",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "FileShareUserID": {
                        "type": "string",
                        "defaultValue": "srvEDWSMFT@tafenswtest.edu.au"
                    },
                    "Folder": {
                        "type": "string"
                    },
                    "File": {
                        "type": "string"
                    },
                    "FileShareURL": {
                        "type": "string",
                        "defaultValue": "FileServer-URL"
                    },
                    "FileSharePassword": {
                        "type": "string",
                        "defaultValue": "FileServer-ServiceAccount-Password"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "FileServerLocation",
                        "fileName": {
                            "value": "@dataset().File",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().Folder",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_FileServer')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SRC_Oracle')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_Oracle",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "kvSecret": {
                            "value": "@dataset().kvSecret",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "kvSecret": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "OracleTable",
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_Oracle')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SRC_MySQL')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_MySQL",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "kvSecret": {
                            "value": "@dataset().kvSecret",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "kvSecret": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "MySqlTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_MySQL')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RAW_SHAREPOINT_JSON')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_SharePointOnlineList",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "AppID": {
                            "value": "@dataset().AppID",
                            "type": "Expression"
                        },
                        "AppSecret": {
                            "value": "@dataset().AppSecret",
                            "type": "Expression"
                        },
                        "SiteUrl": {
                            "value": "@dataset().SiteURL",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "AppID": {
                        "type": "string"
                    },
                    "AppSecret": {
                        "type": "string"
                    },
                    "SiteURL": {
                        "type": "string"
                    },
                    "ListName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "SharePointOnlineListResource",
                "schema": [],
                "typeProperties": {
                    "listName": {
                        "value": "@dataset().ListName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_SharePointOnlineList')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RAW_ODATA_BASIC_JSON')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_ODataSource_Basic",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "Username": {
                            "value": "@dataset().Username",
                            "type": "Expression"
                        },
                        "SecretName": {
                            "value": "@dataset().Password",
                            "type": "Expression"
                        },
                        "BaseUrl": {
                            "value": "@dataset().BaseUrl",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "Username": {
                        "type": "string"
                    },
                    "Password": {
                        "type": "string"
                    },
                    "BaseUrl": {
                        "type": "string"
                    },
                    "Table": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "ODataResource",
                "schema": [],
                "typeProperties": {
                    "path": {
                        "value": "@dataset().Table",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_ODataSource_Basic')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/BINARY_ADLS')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS-AzureDataLake",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "File": {
                        "type": "string"
                    },
                    "Container": {
                        "type": "string"
                    },
                    "Folder": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().File",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().Folder",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().Container",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDataLake')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SRC_TEXT_FILE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS-AzureDataLake",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "FileName": {
                        "type": "string"
                    },
                    "FileEncoding": {
                        "type": "string",
                        "defaultValue": "UTF-8"
                    },
                    "Container": {
                        "type": "string"
                    },
                    "Folder": {
                        "type": "string"
                    },
                    "ColumnDelim": {
                        "type": "string",
                        "defaultValue": ","
                    }
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().FileName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().Folder",
                            "type": "Expression"
                        },
                        "container": {
                            "value": "@dataset().Container",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": {
                        "value": "@dataset().ColumnDelim",
                        "type": "Expression"
                    },
                    "encodingName": {
                        "value": "@dataset().FileEncoding",
                        "type": "Expression"
                    },
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDataLake')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RAW_REST_IRTAFE_Basic')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_REST_IRTAFE_Basic",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "BaseUrl": {
                            "value": "@dataset().BaesUrl",
                            "type": "Expression"
                        },
                        "UserName": {
                            "value": "@dataset().UserName",
                            "type": "Expression"
                        },
                        "SecretKey": {
                            "value": "@dataset().SecretKey",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "BaesUrl": {
                        "type": "string",
                        "defaultValue": "https://manage.vc.tafensw.edu.au/"
                    },
                    "UserName": {
                        "type": "string",
                        "defaultValue": "API-VCPrexip-UserID"
                    },
                    "SecretKey": {
                        "type": "string",
                        "defaultValue": "API-VCPrexip-Password"
                    },
                    "RelativeURL": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {
                    "relativeUrl": {
                        "value": "@dataset().RelativeURL",
                        "type": "Expression"
                    }
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_REST_IRTAFE_Basic')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SRC_SQLServer')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS-SQLServer",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "kvSecret": {
                            "value": "@dataset().kvSecret",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "kvSecret": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-SQLServer')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RAW_ADLS_JSON')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS-AzureDataLake",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "BlobPath": {
                        "type": "string"
                    },
                    "BlobName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().BlobName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().BlobPath",
                            "type": "Expression"
                        },
                        "container": "raw"
                    },
                    "compression": {
                        "type": "gzip",
                        "level": "Optimal"
                    }
                },
                "schema": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDataLake')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RAW_ADLS_Schema')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS-AzureDataLake",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "BlobPath": {
                        "type": "string"
                    },
                    "BlobName": {
                        "type": "string"
                    },
                    "Compression": {
                        "type": "string"
                    },
                    "ColumnDelim": {
                        "type": "string",
                        "defaultValue": ","
                    },
                    "HeaderRow": {
                        "type": "bool",
                        "defaultValue": true
                    }
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().BlobName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@dataset().BlobPath",
                            "type": "Expression"
                        },
                        "container": "raw"
                    },
                    "columnDelimiter": {
                        "value": "@dataset().ColumnDelim",
                        "type": "Expression"
                    },
                    "compressionCodec": {
                        "value": "@dataset().Compression",
                        "type": "Expression"
                    },
                    "compressionLevel": "Optimal",
                    "escapeChar": "\\",
                    "firstRowAsHeader": {
                        "value": "@dataset().HeaderRow",
                        "type": "Expression"
                    },
                    "quoteChar": ""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDataLake')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/SRC_SQLAzure')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_SQLAzure",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "kvSecret": {
                            "value": "@dataset().kvSecret",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "kvSecret": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_SQLAzure')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_AzureLandingBlob')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "serviceEndpoint": "[parameters('LS_AzureLandingBlob_properties_typeProperties_serviceEndpoint')]",
                    "accountKind": "StorageV2"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS-AzureKeyVault')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('LS-AzureKeyVault_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS-AzureDataLake')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('LS-AzureDataLake_connectionString')]",
                    "accountKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "ADF-LS-DataLake-Gen2"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS-AzureDatabricks_DefinedCluster')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "kvSecret": {
                        "type": "string",
                        "defaultValue": "databricks-token"
                    },
                    "clusterId": {
                        "type": "string",
                        "defaultValue": "0625-100751-owe480"
                    }
                },
                "annotations": [],
                "type": "AzureDatabricks",
                "typeProperties": {
                    "domain": "https://australiaeast.azuredatabricks.net",
                    "accessToken": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": {
                            "value": "@linkedService().kvSecret",
                            "type": "Expression"
                        }
                    },
                    "existingClusterId": "@linkedService().clusterId"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_ODataSource_AADSP')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "OData",
                "annotations": [],
                "typeProperties": {
                    "url": "[parameters('LS_ODataSource_AADSP_properties_typeProperties_url')]",
                    "authenticationType": "AadServicePrincipal",
                    "tenant": "[parameters('LS_ODataSource_AADSP_properties_typeProperties_tenant')]",
                    "aadResourceId": "[parameters('LS_ODataSource_AADSP_properties_typeProperties_aadResourceId')]",
                    "aadServicePrincipalCredentialType": "ServicePrincipalKey",
                    "servicePrincipalId": "[parameters('LS_ODataSource_AADSP_properties_typeProperties_servicePrincipalId')]",
                    "servicePrincipalKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "@{linkedService().AppSecret}"
                    }
                },
                "parameters": {
                    "AppID": {
                        "type": "String"
                    },
                    "AppSecret": {
                        "type": "String"
                    },
                    "BaseUrl": {
                        "type": "String"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS-AzureSqlDatabase_SQLDB')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Example of Data Mart connection",
                "parameters": {
                    "kvSecret": {
                        "type": "string",
                        "defaultValue": "AzureSqlDatabase-SQLDB"
                    }
                },
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": {
                            "value": "[parameters('LS-AzureSqlDatabase_SQLDB_properties_typeProperties_connectionString_secretName')]",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_DataLake')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('LS_DataLake_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "ADF-LS-DataLake-Gen2"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS-AzureDatabricks_JobCluster')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "kvSecret": {
                        "type": "String",
                        "defaultValue": "databricks-token"
                    },
                    "DataBricksClusterType": {
                        "type": "String",
                        "defaultValue": "Standard_DS3_v2"
                    },
                    "DataBricksClusterVersion": {
                        "type": "String",
                        "defaultValue": "8.1.x-scala2.12"
                    },
                    "DataBricksWorkerNodes": {
                        "type": "String",
                        "defaultValue": "2:8"
                    }
                },
                "annotations": [],
                "type": "AzureDatabricks",
                "typeProperties": {
                    "domain": "https://australiaeast.azuredatabricks.net",
                    "accessToken": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": {
                            "value": "@linkedService().kvSecret",
                            "type": "Expression"
                        }
                    },
                    "newClusterNodeType": "@linkedService().DataBricksClusterType",
                    "newClusterNumOfWorker": "@linkedService().DataBricksWorkerNodes",
                    "newClusterSparkConf": {
                        "spark.driver.maxResultSize": "16g"
                    },
                    "newClusterSparkEnvVars": {
                        "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
                    },
                    "newClusterVersion": "@linkedService().DataBricksClusterVersion",
                    "newClusterInitScripts": []
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS-AzureSqlDatabase_Ctrldb')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "ETL Control database linked service",
                "parameters": {
                    "kvSecret": {
                        "type": "string",
                        "defaultValue": "AzureSqlDatabase-ControlDB"
                    }
                },
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": {
                            "value": "[parameters('LS-AzureSqlDatabase_Ctrldb_properties_typeProperties_connectionString_secretName')]",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_MySQL')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "kvSecret": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "MySql",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": {
                            "value": "[parameters('LS_MySQL_properties_typeProperties_connectionString_secretName')]",
                            "type": "Expression"
                        }
                    }
                },
                "connectVia": {
                    "referenceName": "ama-panel-SHIR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/ama-panel-SHIR')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_FileServer')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "FileServer",
                "annotations": [],
                "parameters": {
                    "UserID": {
                        "type": "String"
                    },
                    "URL": {
                        "type": "String",
                        "defaultValue": "FileServer-URL"
                    },
                    "Password": {
                        "type": "String",
                        "defaultValue": "FileServer-ServiceAccount-Password"
                    }
                },
                "typeProperties": {
                    "host": "[parameters('LS_FileServer_properties_typeProperties_host')]",
                    "userId": "[parameters('LS_FileServer_properties_typeProperties_userId')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "@{linkedService().Password}"
                    }
                },
                "connectVia": {
                    "referenceName": "ama-panel-SHIR",
                    "type": "IntegrationRuntimeReference"
                },
                "description": "File Share"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/ama-panel-SHIR')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_SharePointOnlineList')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "SharePointOnlineList",
                "annotations": [],
                "typeProperties": {
                    "siteUrl": "@{linkedService().SiteUrl}",
                    "tenantId": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "directoryid"
                    },
                    "servicePrincipalId": "[parameters('LS_SharePointOnlineList_properties_typeProperties_servicePrincipalId')]",
                    "servicePrincipalKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "@{linkedService().AppSecret}"
                    }
                },
                "parameters": {
                    "AppID": {
                        "type": "String"
                    },
                    "AppSecret": {
                        "type": "String"
                    },
                    "SiteUrl": {
                        "type": "String"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_Oracle')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "kvSecret": {
                        "type": "string",
                        "defaultValue": "OneEBS-0165"
                    }
                },
                "annotations": [],
                "type": "Oracle",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": {
                            "value": "[parameters('LS_Oracle_properties_typeProperties_connectionString_secretName')]",
                            "type": "Expression"
                        }
                    }
                },
                "connectVia": {
                    "referenceName": "ama-panel-SHIR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/ama-panel-SHIR')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_ODataSource_Basic')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "OData",
                "annotations": [],
                "typeProperties": {
                    "url": "[parameters('LS_ODataSource_Basic_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Basic",
                    "userName": "[parameters('LS_ODataSource_Basic_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "@{linkedService().SecretName}"
                    }
                },
                "parameters": {
                    "Username": {
                        "type": "String"
                    },
                    "SecretName": {
                        "type": "String"
                    },
                    "BaseUrl": {
                        "type": "String"
                    }
                },
                "connectVia": {
                    "referenceName": "ama-panel-SHIR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/ama-panel-SHIR')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_REST_IRTAFE_Basic')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "RestService",
                "parameters": {
                    "BaseUrl": {
                        "type": "string",
                        "defaultValue": "https://manage.vc.tafensw.edu.au/api/admin/history/v1/"
                    },
                    "UserName": {
                        "type": "string",
                        "defaultValue": "API-VCPrexip-UserID"
                    },
                    "SecretKey": {
                        "type": "string",
                        "defaultValue": "API-VCPrexip-Password"
                    }
                },
                "annotations": [],
                "typeProperties": {
                    "url": "[parameters('LS_REST_IRTAFE_Basic_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Basic",
                    "userName": "[parameters('LS_REST_IRTAFE_Basic_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": {
                            "value": "@linkedService().SecretKey",
                            "type": "Expression"
                        }
                    }
                },
                "connectVia": {
                    "referenceName": "ama-panel-SHIR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]",
                "[concat(variables('factoryId'), '/integrationRuntimes/ama-panel-SHIR')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS-SQLServer')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "kvSecret": {
                        "type": "string",
                        "defaultValue": "ADF-LS-SQLServer"
                    }
                },
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": {
                            "value": "[parameters('LS-SQLServer_properties_typeProperties_connectionString_secretName')]",
                            "type": "Expression"
                        }
                    },
                    "userName": "[parameters('LS-SQLServer_properties_typeProperties_userName')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "SVC-ADF-DP-DEV-AS"
                    }
                },
                "connectVia": {
                    "referenceName": "ama-panel-SHIR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/ama-panel-SHIR')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_LocalSQL_EDW_Temp')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "connectionString": "[parameters('LS_LocalSQL_EDW_Temp_connectionString')]"
                },
                "connectVia": {
                    "referenceName": "ama-panel-SHIR",
                    "type": "IntegrationRuntimeReference"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/integrationRuntimes/ama-panel-SHIR')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_SQLAzure')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "kvSecret": {
                        "type": "string",
                        "defaultValue": "ADF-LS-SQLAzure-iBodyShop"
                    }
                },
                "annotations": [],
                "type": "SqlServer",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS-AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": {
                            "value": "[parameters('LS_SQLAzure_properties_typeProperties_connectionString_secretName')]",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Load Data Warehouse')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Set Variable1",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "a",
                            "value": "a"
                        }
                    }
                ],
                "variables": {
                    "a": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Archive"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:05Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/07-AAS-Process')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "get-key-vault-client_id",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@replace('https://$KEYVAULTNAME$.vault.azure.net/secrets/appzebi01id?api-version=7.0', '$KEYVAULTNAME$', pipeline().parameters.keyVaultName)",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "get-key-vault-client_secret",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@replace('https://$KEYVAULTNAME$.vault.azure.net/secrets/appzebi01secret?api-version=7.0', '$KEYVAULTNAME$', pipeline().parameters.keyVaultName)",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "get-token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "set-oauth-url",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "set-oauth-body",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@variables('oauthUrl')",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "body": {
                                "value": "@variables('oauthBody')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "aas-process",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "set-token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@replace(replace(\n'https://australiaeast.asazure.windows.net/servers/$AASSERVER$/models/$MODELNAME$/refreshes'\n,'$AASSERVER$', pipeline().parameters.aasName)\n,'$MODELNAME$', pipeline().parameters.modelName)",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {
                                "Authorization": {
                                    "value": "@concat('Bearer ', variables('token'))",
                                    "type": "Expression"
                                },
                                "Content-Type": "application/json",
                                "Accept-Encoding": "gzip, deflate, br",
                                "Connection": "keep-alive",
                                "User-Agent": "PostmanRuntime/7.26.1"
                            },
                            "body": {
                                "value": "@pipeline().parameters.processCommand",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "get-key-vault-directory-id",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@replace('https://$KEYVAULTNAME$.vault.azure.net/secrets/directoryid?api-version=7.0', '$KEYVAULTNAME$', pipeline().parameters.keyVaultName)",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "get-key-vault-subscription-id",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@replace('https://$KEYVAULTNAME$.vault.azure.net/secrets/subscription-id?api-version=7.0', '$KEYVAULTNAME$', pipeline().parameters.keyVaultName)",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "set-token",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "get-token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "set-token-timestamp",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "token",
                            "value": {
                                "value": "@activity('get-token').output.access_token",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "set-oauth-url",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "get-key-vault-directory-id",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "oauthUrl",
                            "value": {
                                "value": "@replace('https://login.microsoftonline.com/$DIRECTORYID$/oauth2/token', '$DIRECTORYID$', activity('get-key-vault-directory-id').output.value)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "set-oauth-body",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "get-key-vault-client_id",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "get-key-vault-client_secret",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "get-key-vault-subscription-id",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "oauthBody",
                            "value": {
                                "value": "@replace(replace(replace(\n'grant_type=client_credentials&client_id=$CLIENTID$&client_secret=$CLIENTSECRET$&resource=$AUDIENCE$'\n,'$CLIENTID$', activity('get-key-vault-client_id').output.value)\n,'$CLIENTSECRET$', activity('get-key-vault-client_secret').output.value)\n,'$AUDIENCE$', variables('audience'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "set-token-timestamp",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "set-oauth-url",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "tokenTimestamp",
                            "value": {
                                "value": "@string(div(ticks(utcnow()), 6000000))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "loop-until-succeeded",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "check-error",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(variables('inProgressCount'), '0')",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "loop-pause",
                                    "type": "Wait",
                                    "dependsOn": [
                                        {
                                            "activity": "loop-set-inProgressCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": {
                                            "value": "@if(equals(variables('inProgressCount'), '0'), 1, pipeline().parameters.waitSeconds)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "loop-set-inProgressCount",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "loop-filter-inprogress",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "inProgressCount",
                                        "value": {
                                            "value": "@string(length(activity('loop-filter-inprogress').output.Value))",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "loop-set-refreshId",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "loop-filter-inprogress",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "refreshId",
                                        "value": {
                                            "value": "@if(equals(length(activity('loop-filter-inprogress').output.Value), 0), '', activity('loop-filter-inprogress').output.Value[0].refreshId)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "loop-aas-get-refreshes",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "if-token-expired",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@replace(replace(\n'https://australiaeast.asazure.windows.net/servers/$AASSERVER$/models/$MODELNAME$/refreshes'\n,'$AASSERVER$', pipeline().parameters.aasName)\n,'$MODELNAME$', pipeline().parameters.modelName)",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {
                                            "Authorization": {
                                                "value": "@concat('Bearer ', variables('token'))",
                                                "type": "Expression"
                                            }
                                        },
                                        "body": {
                                            "value": "@pipeline().parameters.processCommand",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "loop-filter-inprogress",
                                    "type": "Filter",
                                    "dependsOn": [
                                        {
                                            "activity": "loop-aas-get-refreshes",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "items": {
                                            "value": "@json(activity('loop-aas-get-refreshes').output.Response)",
                                            "type": "Expression"
                                        },
                                        "condition": {
                                            "value": "@equals(item().status, 'inProgress')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "if-token-expired",
                                    "type": "IfCondition",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@greater(sub(int(div(ticks(utcnow()), 6000000)), int(variables('tokenTimestamp'))), int(variables('tokenExpiry')))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "loop-get-token",
                                                "type": "WebActivity",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": true,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "url": {
                                                        "value": "@variables('oauthUrl')",
                                                        "type": "Expression"
                                                    },
                                                    "method": "POST",
                                                    "headers": {
                                                        "Content-Type": "application/x-www-form-urlencoded"
                                                    },
                                                    "body": {
                                                        "value": "@variables('oauthBody')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "loop-set-token",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "loop-get-token",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    {
                                                        "activity": "loop-set-token-timestamp",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "token",
                                                    "value": {
                                                        "value": "@activity('loop-get-token').output.access_token",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "loop-set-token-timestamp",
                                                "type": "SetVariable",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "tokenTimestamp",
                                                    "value": {
                                                        "value": "@string(div(ticks(utcnow()), 6000000))",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "timeout": "7.00:00:00"
                        }
                    },
                    {
                        "name": "check-error",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "aas-process",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "errorMessage",
                            "value": {
                                "value": "@string(if(equals(activity('aas-process').output.status, 'failed'), div(1, 0), 0))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "set-error-message",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "check-error",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "errorMessage",
                            "value": {
                                "value": "@activity('aas-process').output.messages[0].message",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "resourceGroupName": {
                        "type": "string",
                        "defaultValue": "ZERGBI01T"
                    },
                    "keyVaultName": {
                        "type": "string",
                        "defaultValue": "ZEKVBI01T"
                    },
                    "aasName": {
                        "type": "string",
                        "defaultValue": "ZEASBI01T"
                    },
                    "modelName": {
                        "type": "string",
                        "defaultValue": "CourseEnrolment"
                    },
                    "processCommand": {
                        "type": "string",
                        "defaultValue": {
                            "Type": "Full",
                            "Objects": [
                                {
                                    "database": "CourseEnrolment",
                                    "table": "Report Date"
                                }
                            ]
                        }
                    },
                    "waitSeconds": {
                        "type": "int",
                        "defaultValue": 60
                    }
                },
                "variables": {
                    "audience": {
                        "type": "String",
                        "defaultValue": "https://*.asazure.windows.net/"
                    },
                    "token": {
                        "type": "String"
                    },
                    "tokenExpiry": {
                        "type": "String",
                        "defaultValue": "3600"
                    },
                    "tokenTimestamp": {
                        "type": "String"
                    },
                    "oauthUrl": {
                        "type": "String"
                    },
                    "oauthBody": {
                        "type": "String"
                    },
                    "inProgressCount": {
                        "type": "String"
                    },
                    "refreshId": {
                        "type": "String"
                    },
                    "errorMessage": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "AAS"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:05Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/06-Curated-UMD')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SP-USP_RefreshUMDDataModel",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[UMD].[USP_RefreshUMDDataModel]"
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_SQLDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-SQLDB"
                            }
                        }
                    },
                    {
                        "name": "SP-USP_RefreshUMDDimFunding",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP-USP_RefreshUMDDataModel",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[UMD].[USP_RefreshUMDDimFunding]"
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_SQLDB",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-SQLDB"
                            }
                        }
                    }
                ],
                "folder": {
                    "name": "Curated"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:06Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_SQLDB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-DL-Load-Raw-to-Delta-Table')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SP-Record-Manifest",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "If-ClusterType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateManifestDeltaRecords]",
                            "storedProcedureParameters": {
                                "BatchExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "TaskExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "RecordsDeltaTable": {
                                    "value": {
                                        "value": "@variables('ReturnValue')",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "If-ClusterType",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Set-ClusterType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(variables('ClusterType'), 'interactive')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Notebook-Delta-Table-Job",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": {
                                            "value": "@variables('NoteBookURL')",
                                            "type": "Expression"
                                        },
                                        "baseParameters": {
                                            "file_object": {
                                                "value": "@concat(pipeline().parameters.TargetBLOBFolder,pipeline().parameters.TargetBLOBName)",
                                                "type": "Expression"
                                            },
                                            "source_param": {
                                                "value": "@string(pipeline().parameters.TaskDetails)",
                                                "type": "Expression"
                                            }
                                        },
                                        "libraries": [
                                            {
                                                "maven": {
                                                    "coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
                                                }
                                            }
                                        ]
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureDatabricks_JobCluster",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
                                                "type": "Expression"
                                            },
                                            "DataBricksClusterType": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
                                                "type": "Expression"
                                            },
                                            "DataBricksClusterVersion": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
                                                "type": "Expression"
                                            },
                                            "DataBricksWorkerNodes": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SET-ReturnValue-Job",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Notebook-Delta-Table-Job",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ReturnValue",
                                        "value": {
                                            "value": "@string(activity('Notebook-Delta-Table-Job').output.runOutput)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Notebook-Delta-Table-Interactive",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": {
                                            "value": "@variables('NoteBookURL')",
                                            "type": "Expression"
                                        },
                                        "baseParameters": {
                                            "file_object": {
                                                "value": "@concat(pipeline().parameters.TargetBLOBFolder,pipeline().parameters.TargetBLOBName)",
                                                "type": "Expression"
                                            },
                                            "source_param": {
                                                "value": "@string(pipeline().parameters.TaskDetails)",
                                                "type": "Expression"
                                            }
                                        },
                                        "libraries": [
                                            {
                                                "maven": {
                                                    "coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
                                                }
                                            }
                                        ]
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureDatabricks_DefinedCluster",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
                                                "type": "Expression"
                                            },
                                            "clusterId": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SET-ReturnValue-Interactive",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Notebook-Delta-Table-Interactive",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ReturnValue",
                                        "value": {
                                            "value": "@string(activity('Notebook-Delta-Table-Interactive').output.runOutput)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set-ClusterType",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ClusterType",
                            "value": {
                                "value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int",
                        "defaultValue": 1
                    },
                    "TaskExecutionLogId": {
                        "type": "int",
                        "defaultValue": 1
                    },
                    "TaskDetails": {
                        "type": "object",
                        "defaultValue": {
                            "SourceType": "SQL Server",
                            "SourceServer": "onprem-wwidw",
                            "SourceGroup": "WWI",
                            "SourceName": "WWI_Dimension_Supplier",
                            "SourceLocation": "Dimension.Supplier",
                            "AdditionalProperty": "",
                            "Processor": "databricks-token|0607-060317-cases301|Standard_DS3_v2|8.1.x-scala2.12|2:8|interactive",
                            "IsAuditTable": false,
                            "SoftDeleteSource": "",
                            "ProjectName": "WWIDW",
                            "ProjectId": 1,
                            "TargetType": "BLOB Storage (json)",
                            "TargetName": "WWI_Dimension_Supplier",
                            "TargetLocation": "WWI/Dimension_Supplier",
                            "TargetServer": "datalake-SasToken",
                            "DataLoadMode": "TRUNCATE-LOAD",
                            "DeltaExtract": false,
                            "CDCSource": false,
                            "TruncateTarget": true,
                            "UpsertTarget": false,
                            "AppendTarget": null,
                            "TrackChanges": false,
                            "LoadToSqlEDW": true,
                            "TaskName": "WWI_Dimension_Supplier",
                            "ControlStageId": 1,
                            "TaskId": 3,
                            "StageSequence": 100,
                            "StageName": "Source to Raw",
                            "SourceId": 5,
                            "TargetId": 3,
                            "ObjectGrain": "Day",
                            "CommandTypeId": 1,
                            "Watermarks": "",
                            "WatermarksDT": null,
                            "WatermarkColumn": "",
                            "BusinessKeyColumn": "SupplierKey",
                            "UpdateMetaData": null,
                            "SourceTimeStampFormat": "",
                            "Command": "SELECT * FROM Dimension.Supplier",
                            "LastLoadedFile": null
                        }
                    },
                    "TargetBLOBFolder": {
                        "type": "string",
                        "defaultValue": "wwi/dimension_supplier/json/year=2021/month=06/day=07/"
                    },
                    "TargetBLOBName": {
                        "type": "string",
                        "defaultValue": "Dimension.Supplier_2021-06-07_210359_093.json.gz"
                    },
                    "ProjectRunID": {
                        "type": "string",
                        "defaultValue": "d4f67ed6-9268-4ec6-b2fe-1c967b5ef49e"
                    }
                },
                "variables": {
                    "ReturnValue": {
                        "type": "String"
                    },
                    "ClusterType": {
                        "type": "String"
                    },
                    "NoteBookURL": {
                        "type": "String",
                        "defaultValue": "/build/raw/load-raw-deltatable"
                    }
                },
                "folder": {
                    "name": "Data Lake"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-27T00:17:48Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_JobCluster')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_DefinedCluster')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/06-Curated-EDWSP')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Log Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP-EDW-SP",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": "Curated Load Complete",
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "SP-EDW-SP",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": {
                                "value": "@pipeline().parameters.TaskDetails.Command",
                                "type": "Expression"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-SQLDB"
                            }
                        }
                    },
                    {
                        "name": "Log SP Curated End",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP-EDW-SP",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Error Occurred during Curated load on EDW-SP End",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object",
                        "defaultValue": {
                            "SourceType": "BLOB Storage (csv)",
                            "SourceServer": "datalake-SasToken",
                            "SourceName": "Qualtrics_Qualtrics",
                            "SourceLocation": "Qualtrics",
                            "AdditionalProperty": "",
                            "Processor": "databricks-token|0925-064956-carps143|Standard_DS5_v2|6.4.x-scala2.11|2:8|interactive",
                            "ProjectName": "Qualtrics1",
                            "TargetType": "SQL Server",
                            "TargetName": "Qualtrics_Qualtrics",
                            "TargetLocation": "Qualtrics",
                            "TargetServer": "AzureSqlDatabase-SQLDB",
                            "DataLoadMode": "0",
                            "DeltaExtract": null,
                            "CDCSource": null,
                            "TruncateTarget": null,
                            "UpsertTarget": null,
                            "TrackChanges": false,
                            "LoadToSqlEDW": true,
                            "TaskName": "Qualtrics_Qualtrics",
                            "ControlStageId": 3,
                            "TaskId": 813,
                            "StageSequence": 300,
                            "StageName": "Trusted to Curated",
                            "SourceId": 851,
                            "TargetId": 830,
                            "ObjectGrain": "Day",
                            "CommandTypeId": 8,
                            "Watermarks": null,
                            "WatermarksDT": null,
                            "WatermarkColumn": "",
                            "BusinessKeyColumn": "",
                            "Command": "/Users/rahul.agrawal1@tafenswtest.edu.au/build/curated/Qualtrics/QualtricsMaster-Test",
                            "LastLoadedFile": null
                        }
                    },
                    "TaskExecutionLogId": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "BatchLogId": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "ClusterType": {
                        "type": "String"
                    },
                    "NoteBookReturnValue": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Curated"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:06Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/08-EXPORT-SQLServer')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy-Data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "SET-TargetTableID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "@{replace(variables('TRUNCATESQL'), '<<TABLE_NAME>>', variables('TargetTableID'))}",
                                    "type": "Expression"
                                },
                                "tableOption": "autoCreate",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_AZURE_SQLSERVER",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "AzureSqlDatabase-SQLDB",
                                        "type": "Expression"
                                    },
                                    "TableName": {
                                        "value": "@split(pipeline().parameters.TaskDetails.SourceLocation,'.')[1]",
                                        "type": "Expression"
                                    },
                                    "SchemaName": {
                                        "value": "@split(pipeline().parameters.TaskDetails.SourceLocation,'.')[0]",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_AZURE_SQLSERVER",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.TargetServer",
                                        "type": "Expression"
                                    },
                                    "TableName": {
                                        "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                        "type": "Expression"
                                    },
                                    "SchemaName": {
                                        "value": "@variables('TargetSchema')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Log Copy Load Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy-Data",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred while copy data",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Log Copy Load Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy-Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "SET-TargetTableID",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "TargetTableID",
                            "value": {
                                "value": "@concat(variables('TargetSchema'), '.', pipeline().parameters.TaskDetails.TargetLocation)",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "int"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "TRUNCATESQL": {
                        "type": "String",
                        "defaultValue": "IF OBJECT_ID('<<TABLE_NAME>>', 'U') IS NOT NULL TRUNCATE TABLE <<TABLE_NAME>>"
                    },
                    "TargetSchema": {
                        "type": "String",
                        "defaultValue": "TRIP"
                    },
                    "TargetTableID": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Export"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_AZURE_SQLSERVER')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/05-DL-C-Update-Trusted-Deleted')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LU-Manifest",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetManifestAudit]",
                                "storedProcedureParameters": {
                                    "SourceObject": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SoftDeleteSource",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "If-Check-Interactive",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "LU-Manifest",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-ClusterType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(\n  not(equals(activity('LU-Manifest').output.firstRow.Batches, 0)), \n  equals(variables('ClusterType'), 'interactive')\n)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Updated-Deleted-Interactive",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": {
                                            "value": "@variables('NoteBookURL')",
                                            "type": "Expression"
                                        },
                                        "baseParameters": {
                                            "main_table": {
                                                "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                "type": "Expression"
                                            },
                                            "start_counter": {
                                                "value": "@activity('LU-Manifest').output.firstRow.StartCounter",
                                                "type": "Expression"
                                            },
                                            "end_counter": {
                                                "value": "@activity('LU-Manifest').output.firstRow.EndCounter",
                                                "type": "Expression"
                                            },
                                            "delta_column": {
                                                "value": "@activity('LU-Manifest').output.firstRow.DeltaColumn",
                                                "type": "Expression"
                                            },
                                            "business_key": {
                                                "value": "@pipeline().parameters.TaskDetails.BusinessKeyColumn",
                                                "type": "Expression"
                                            },
                                            "audit_table": {
                                                "value": "@pipeline().parameters.TaskDetails.SoftDeleteSource",
                                                "type": "Expression"
                                            }
                                        },
                                        "libraries": [
                                            {
                                                "maven": {
                                                    "coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
                                                }
                                            }
                                        ]
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureDatabricks_DefinedCluster",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
                                                "type": "Expression"
                                            },
                                            "clusterId": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Set-DB-Output-Interactive",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Updated-Deleted-Interactive",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ReturnValue",
                                        "value": {
                                            "value": "@string(activity('Updated-Deleted-Interactive').output.runOutput)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set-ClusterType",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ClusterType",
                            "value": {
                                "value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SP-UpdateManifest",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "If-Check-Job",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateManifestAudit]",
                            "storedProcedureParameters": {
                                "BatchExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "SourceObject": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.SoftDeleteSource",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ProcessedToTrusted": {
                                    "value": {
                                        "value": "@variables('ReturnValue')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "If-Check-Job",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "If-Check-Interactive",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(\n  not(equals(activity('LU-Manifest').output.firstRow.Batches, 0)), \n  not(equals(variables('ClusterType'), 'interactive'))\n)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Updated-Deleted-Job",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": {
                                            "value": "@variables('NoteBookURL')",
                                            "type": "Expression"
                                        },
                                        "baseParameters": {
                                            "main_table": {
                                                "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                "type": "Expression"
                                            },
                                            "start_counter": {
                                                "value": "@activity('LU-Manifest').output.firstRow.StartCounter",
                                                "type": "Expression"
                                            },
                                            "end_counter": {
                                                "value": "@activity('LU-Manifest').output.firstRow.EndCounter",
                                                "type": "Expression"
                                            },
                                            "delta_column": {
                                                "value": "@activity('LU-Manifest').output.firstRow.DeltaColumn",
                                                "type": "Expression"
                                            },
                                            "business_key": {
                                                "value": "@pipeline().parameters.TaskDetails.BusinessKeyColumn",
                                                "type": "Expression"
                                            },
                                            "audit_table": {
                                                "value": "@pipeline().parameters.TaskDetails.SoftDeleteSource",
                                                "type": "Expression"
                                            }
                                        },
                                        "libraries": [
                                            {
                                                "maven": {
                                                    "coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
                                                }
                                            }
                                        ]
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureDatabricks_JobCluster",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
                                                "type": "Expression"
                                            },
                                            "DataBricksClusterType": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
                                                "type": "Expression"
                                            },
                                            "DataBricksClusterVersion": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
                                                "type": "Expression"
                                            },
                                            "DataBricksWorkerNodes": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Set-DB-Output-Job",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Updated-Deleted-Job",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ReturnValue",
                                        "value": {
                                            "value": "@string(activity('Updated-Deleted-Job').output.runOutput)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object",
                        "defaultValue": {
                            "SourceType": "BLOB Storage (json)",
                            "SourceServer": "datalake-SasToken",
                            "SourceName": "OneEBS_EBS_0165_USERS",
                            "SourceLocation": "OneEBS/EBS_0165_USERS",
                            "Processor": "databricks-token|0708-233111-note225",
                            "ProjectName": "OneEBS",
                            "TargetType": "BLOB Storage (csv)",
                            "TargetName": "OneEBS_EBS_0165_USERS",
                            "TargetLocation": "OneEBS/EBS_0165_USERS",
                            "TargetServer": "datalake-SasToken",
                            "DataLoadMode": "FULL-EXTRACT",
                            "DeltaExtract": false,
                            "CDCSource": false,
                            "TruncateTarget": false,
                            "UpsertTarget": true,
                            "TrackChanges": true,
                            "TaskName": "Copy OneEBS_EBS_0165_USERS",
                            "ControlStageId": 2,
                            "TaskId": 38,
                            "StageSequence": 200,
                            "StageName": "Raw to Trusted",
                            "SourceId": 38,
                            "TargetId": 38,
                            "ObjectGrain": "Day",
                            "CommandTypeId": 8,
                            "Watermarks": null,
                            "WatermarkColumn": "",
                            "BusinessKeyColumn": "ID",
                            "Command": "/build/load-trusted-zone",
                            "LastLoadedFile": "EBS_0165.USERS_2020-05-14_090517_167.json.gz"
                        }
                    },
                    "BatchLogId": {
                        "type": "int",
                        "defaultValue": 118
                    },
                    "TaskExecutionLogId": {
                        "type": "int",
                        "defaultValue": 870
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "ReturnValue": {
                        "type": "String"
                    },
                    "ClusterType": {
                        "type": "String"
                    },
                    "NoteBookURL": {
                        "type": "String",
                        "defaultValue": "/build/trusted/function/update-deleted-from-audit"
                    }
                },
                "folder": {
                    "name": "Data Lake"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_DefinedCluster')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_JobCluster')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/recon-record-validation')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "If-Check",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "LU-Source",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('LU-Source').output.firstRow.IsAuditTable,false)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "SP-Update-Validation",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[RecordDataValidation]",
                                        "storedProcedureParameters": {
                                            "HighWatermark": {
                                                "value": {
                                                    "value": "@json(string(pipeline().parameters.ValidationDetails)).ReturnValue",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "MaxValue": {
                                                "value": {
                                                    "value": "@json(string(pipeline().parameters.ValidationDetails)).MaximumValue",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "MinValue": {
                                                "value": {
                                                    "value": "@json(string(pipeline().parameters.ValidationDetails)).MinimumValue",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "RecordCount": {
                                                "value": {
                                                    "value": "@json(string(pipeline().parameters.ValidationDetails)).RecordCount",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "TotalValue": {
                                                "value": {
                                                    "value": "@json(string(pipeline().parameters.ValidationDetails)).TotalValue",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ValidationType": {
                                                "value": {
                                                    "value": "@json(string(pipeline().parameters.ValidationDetails)).ValidationType",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ProjectRunID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.ProjectRunID",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "SourceID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.SourceID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "LU-Source",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT * FROM CTL.vw_ControlConfiguration WHERE SourceID = ', string(pipeline().parameters.SourceID))",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "parameters": {
                    "ProjectRunID": {
                        "type": "string",
                        "defaultValue": "0b6110e9-8d68-4a0a-8ee8-0182a03289ef"
                    },
                    "ValidationDetails": {
                        "type": "object",
                        "defaultValue": {
                            "SOURCECOLUMN": "COALESCE (UPDATED_DATE, CREATED_DATE)",
                            "RETURNVALUE": "2020-11-08 17:58:04",
                            "RECORDCOUNT": 52254,
                            "TOTALVALUE": 3361637939,
                            "MAXVALUE": 133557,
                            "MINVALUE": 2,
                            "VALIDATIONTYPE": "SOURCE"
                        }
                    },
                    "SourceID": {
                        "type": "int"
                    }
                },
                "folder": {
                    "name": "Validation"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/05-DL-B-Load-Trusted-To-SQLEDW')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LU-Manifest",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetManifestSQLEDW]",
                                "storedProcedureParameters": {
                                    "SourceObject": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceName",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "If-Check-Interactive",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "LU-Manifest",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-ClusterType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(\n  not(equals(activity('LU-Manifest').output.firstRow.Batches, 0)), \n  equals(variables('ClusterType'), 'interactive')\n)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Load-To-SQL-EDW-Interactive",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": {
                                            "value": "@variables('NotebookURL')",
                                            "type": "Expression"
                                        },
                                        "baseParameters": {
                                            "source_object": {
                                                "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                "type": "Expression"
                                            },
                                            "start_counter": {
                                                "value": "@activity('LU-Manifest').output.firstRow.StartCounter",
                                                "type": "Expression"
                                            },
                                            "end_counter": {
                                                "value": "@activity('LU-Manifest').output.firstRow.EndCounter",
                                                "type": "Expression"
                                            },
                                            "delta_column": {
                                                "value": "@activity('LU-Manifest').output.firstRow.DeltaColumn",
                                                "type": "Expression"
                                            },
                                            "source_param": {
                                                "value": "@string(pipeline().parameters.TaskDetails)",
                                                "type": "Expression"
                                            }
                                        },
                                        "libraries": [
                                            {
                                                "maven": {
                                                    "coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
                                                }
                                            }
                                        ]
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureDatabricks_DefinedCluster",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
                                                "type": "Expression"
                                            },
                                            "clusterId": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Set-DB-Output-Interactive",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Load-To-SQL-EDW-Interactive",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ReturnValue",
                                        "value": {
                                            "value": "@string(activity('Load-To-SQL-EDW-Interactive').output.runOutput)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set-ClusterType",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ClusterType",
                            "value": {
                                "value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SP-UpdateManifest",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "If-Check-Job",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateManifestSQLEDW]",
                            "storedProcedureParameters": {
                                "BatchExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "SourceObject": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ProcessedToSQLEDW": {
                                    "value": {
                                        "value": "@variables('ReturnValue')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "If-Check-Job",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "If-Check-Interactive",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(\n  not(equals(activity('LU-Manifest').output.firstRow.Batches, 0)), \n  not(equals(variables('ClusterType'), 'interactive'))\n)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Load-To-SQL-EDW-Job",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": {
                                            "value": "@variables('NotebookURL')",
                                            "type": "Expression"
                                        },
                                        "baseParameters": {
                                            "source_object": {
                                                "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                "type": "Expression"
                                            },
                                            "start_counter": {
                                                "value": "@activity('LU-Manifest').output.firstRow.StartCounter",
                                                "type": "Expression"
                                            },
                                            "end_counter": {
                                                "value": "@activity('LU-Manifest').output.firstRow.EndCounter",
                                                "type": "Expression"
                                            },
                                            "delta_column": {
                                                "value": "@activity('LU-Manifest').output.firstRow.DeltaColumn",
                                                "type": "Expression"
                                            },
                                            "source_param": {
                                                "value": "@string(pipeline().parameters.TaskDetails)",
                                                "type": "Expression"
                                            }
                                        },
                                        "libraries": [
                                            {
                                                "maven": {
                                                    "coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
                                                }
                                            }
                                        ]
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureDatabricks_JobCluster",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
                                                "type": "Expression"
                                            },
                                            "DataBricksClusterType": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
                                                "type": "Expression"
                                            },
                                            "DataBricksClusterVersion": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
                                                "type": "Expression"
                                            },
                                            "DataBricksWorkerNodes": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Set-DB-Output-Job",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Load-To-SQL-EDW-Job",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ReturnValue",
                                        "value": {
                                            "value": "@string(activity('Load-To-SQL-EDW-Job').output.runOutput)",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object",
                        "defaultValue": {
                            "SourceType": "BLOB Storage (json)",
                            "SourceServer": "datalake-SasToken",
                            "SourceName": "OneEBS_EBS_0165_USERS",
                            "SourceLocation": "OneEBS/EBS_0165_USERS",
                            "Processor": "databricks-token|0708-233111-note225",
                            "ProjectName": "OneEBS",
                            "TargetType": "BLOB Storage (csv)",
                            "TargetName": "OneEBS_EBS_0165_USERS",
                            "TargetLocation": "OneEBS/EBS_0165_USERS",
                            "TargetServer": "datalake-SasToken",
                            "DataLoadMode": "FULL-EXTRACT",
                            "DeltaExtract": false,
                            "CDCSource": false,
                            "TruncateTarget": false,
                            "UpsertTarget": true,
                            "TrackChanges": true,
                            "TaskName": "Copy OneEBS_EBS_0165_USERS",
                            "ControlStageId": 2,
                            "TaskId": 38,
                            "StageSequence": 200,
                            "StageName": "Raw to Trusted",
                            "SourceId": 38,
                            "TargetId": 38,
                            "ObjectGrain": "Day",
                            "CommandTypeId": 8,
                            "Watermarks": null,
                            "WatermarkColumn": "",
                            "BusinessKeyColumn": "ID",
                            "Command": "/build/load-trusted-zone",
                            "LastLoadedFile": "EBS_0165.USERS_2020-05-14_090517_167.json.gz"
                        }
                    },
                    "BatchLogId": {
                        "type": "int",
                        "defaultValue": 118
                    },
                    "TaskExecutionLogId": {
                        "type": "int",
                        "defaultValue": 870
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "ReturnValue": {
                        "type": "String"
                    },
                    "ClusterType": {
                        "type": "String"
                    },
                    "NotebookURL": {
                        "type": "String",
                        "defaultValue": "/build/trusted/function/load-trusted-sqledw-v2"
                    }
                },
                "folder": {
                    "name": "Data Lake"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_DefinedCluster')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_JobCluster')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/07-AAS-Main')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "processing-list",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "SET-RGName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "SET-KVName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "SET-WaitSeconds",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "SET-AASName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT * FROM [aas].[Partition] ORDER BY CubeSequence, ProcessOrder",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SRC_AzureSqlDatabase",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": "AzureSqlDatabase-SQLDB"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "for-each-process",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "processing-list",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('processing-list').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "aas-process",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "07-AAS-Process",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "resourceGroupName": {
                                                "value": "@variables('resourceGroupName')",
                                                "type": "Expression"
                                            },
                                            "keyVaultName": {
                                                "value": "@variables('keyVaultName')",
                                                "type": "Expression"
                                            },
                                            "aasName": {
                                                "value": "@variables('aasName')",
                                                "type": "Expression"
                                            },
                                            "modelName": {
                                                "value": "@item().ModelName",
                                                "type": "Expression"
                                            },
                                            "processCommand": {
                                                "value": "@item().RefreshCommand",
                                                "type": "Expression"
                                            },
                                            "waitSeconds": {
                                                "value": "@variables('waitSeconds')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "SET-RGName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "resourceGroupName",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty,'|')[0]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SET-KVName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "keyVaultName",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty,'|')[1]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SET-AASName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "aasName",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty,'|')[2]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SET-WaitSeconds",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "waitSeconds",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty,'|')[3]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Task Log Cube Process Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "for-each-process",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred while processing the Cube",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Log Cube Process Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "for-each-process",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "int"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "resourceGroupName": {
                        "type": "String"
                    },
                    "keyVaultName": {
                        "type": "String"
                    },
                    "aasName": {
                        "type": "String"
                    },
                    "waitSeconds": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "AAS"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SRC_AzureSqlDatabase')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/07-AAS-Process')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/util-fileserver-delete-file')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get File Metadata",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "BINARY_FILESERVER",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FileShareUserID": {
                                        "value": "@pipeline().parameters.FileShareUserID",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@pipeline().parameters.SourceFolder",
                                        "type": "Expression"
                                    },
                                    "File": {
                                        "value": "@pipeline().parameters.SourceFile",
                                        "type": "Expression"
                                    },
                                    "FileShareURL": {
                                        "value": "@pipeline().parameters.FileShareURL",
                                        "type": "Expression"
                                    },
                                    "FileSharePassword": {
                                        "value": "@pipeline().parameters.FileSharePassword",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "FileServerReadSettings",
                                "recursive": true
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "If-DeleteFile",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get File Metadata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@activity('Get File Metadata').output.exists",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Delete-File",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "BINARY_FILESERVER",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FileShareUserID": {
                                                    "value": "@pipeline().parameters.FileShareUserID",
                                                    "type": "Expression"
                                                },
                                                "Folder": {
                                                    "value": "@pipeline().parameters.SourceFolder",
                                                    "type": "Expression"
                                                },
                                                "File": {
                                                    "value": "@pipeline().parameters.SourceFile",
                                                    "type": "Expression"
                                                },
                                                "FileShareURL": {
                                                    "value": "@pipeline().parameters.FileShareURL",
                                                    "type": "Expression"
                                                },
                                                "FileSharePassword": {
                                                    "value": "@pipeline().parameters.FileSharePassword",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "FileServerReadSettings",
                                            "recursive": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "SourceFile": {
                        "type": "string"
                    },
                    "SourceFolder": {
                        "type": "string"
                    },
                    "FileShareURL": {
                        "type": "string"
                    },
                    "FileShareUserID": {
                        "type": "string"
                    },
                    "FileSharePassword": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Utility/fileserver"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/BINARY_FILESERVER')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LU_Source')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup1",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "OracleSource",
                                "oracleReaderQuery": "SELECT * FROM all_tab_cols WHERE  owner like 'o%'",
                                "partitionOption": "None",
                                "queryTimeout": "02:00:00"
                            },
                            "dataset": {
                                "referenceName": "SRC_Oracle",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": "OneEBS-0165"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Lookup1",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "OracleSource",
                                "oracleReaderQuery": "select * from all_tables\nwhere owner ='EBS_0900'",
                                "partitionOption": "None",
                                "queryTimeout": "02:00:00"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_Oracle",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": "EBS900T4U"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_CSV",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": "external",
                                    "BlobName": "filename.csv",
                                    "Compression": "none"
                                }
                            }
                        ]
                    },
                    {
                        "name": "LU-EBS",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "OracleSource",
                                "oracleReaderQuery": "select * FROM EBS_0165.DISABILITIES WHERE ID IN (38728, 38729)",
                                "partitionOption": "None",
                                "queryTimeout": "02:00:00"
                            },
                            "dataset": {
                                "referenceName": "SRC_Oracle",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": "Oneebs-0165"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "LU-MySQL",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "MySqlSource",
                                "query": "SELECT \n\t'timemodified, timecreated' AS SourceColumn, \n\tFROM_UNIXTIME(MAX(IFNULL(COALESCE(timemodified, timecreated), 0))) As ReturnValue, \n\tCOUNT(1) AS RecordCount, \n\t0 AS TotalValue, \n\t0 AS MaxValue, \n\t0 AS MinValue, \n\t'SOURCE' AS ValidationType \nFROM lmsuu.mdl_course"
                            },
                            "dataset": {
                                "referenceName": "SRC_MySQL",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": "LMS-lmsp"
                                }
                            },
                            "firstRowOnly": false
                        }
                    }
                ],
                "variables": {
                    "Owner": {
                        "type": "String"
                    },
                    "Table": {
                        "type": "String"
                    },
                    "BLOBPath": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Archive"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SRC_Oracle')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_CSV')]",
                "[concat(variables('factoryId'), '/datasets/SRC_MySQL')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/recon-target')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "If-Exists",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "LU-GetSourceID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@contains(activity('LU-GetSourceID').output,'firstRow')",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Get-SQL",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderStoredProcedureName": "[[CTL].[GetTableDetails]",
                                            "storedProcedureParameters": {
                                                "SourceId": {
                                                    "type": "Int64",
                                                    "value": {
                                                        "value": "@activity('LU-GetSourceID').output.firstRow.SourceID",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "ValidationType": {
                                                    "type": "String",
                                                    "value": "TARGET"
                                                }
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSqlDatabase_Ctrldb",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "Get-Values",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Get-SQL",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderQuery": {
                                                "value": "@activity('Get-SQL').output.firstrow.SQLStatement",
                                                "type": "Expression"
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "SRC_AzureSqlDatabase",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "kvSecret": {
                                                    "value": "AzureSqlDatabase-SQLDB",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "EP-Record-Validation",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Get-Values",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "recon-record-validation",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@activity('Get-Values').output.firstRow",
                                                "type": "Expression"
                                            },
                                            "SourceID": {
                                                "value": "@activity('LU-GetSourceID').output.firstRow.SourceID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "LU-GetSourceID",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT SourceId FROM CTL.vw_ControlConfiguration WHERE TaskName = ''', pipeline().parameters.SourceName, ''' AND ControlStageID = 1')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "parameters": {
                    "ProjectID": {
                        "type": "int",
                        "defaultValue": 1
                    },
                    "ProjectRunID": {
                        "type": "string",
                        "defaultValue": "c1ff545d-e875-4b1b-a579-975f86dbaf21"
                    },
                    "SourceName": {
                        "type": "string",
                        "defaultValue": "OneEBS_EBS_0165_LOCATIONS"
                    }
                },
                "folder": {
                    "name": "Validation"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/datasets/SRC_AzureSqlDatabase')]",
                "[concat(variables('factoryId'), '/pipelines/recon-record-validation')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/05-DL-A-Load-Raw-to-Trusted-Zone')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LU-Manifest",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetManifestTrusted]",
                                "storedProcedureParameters": {
                                    "SourceObject": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceName",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Log Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "If-LoadToSqlEDW",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Log Failure DL Trusted",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Loop Manifest",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Error Occurred during Trusted Zone load",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Loop Manifest",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LU-Manifest",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LU-Manifest').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "SP-UpdateManifest",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "If-ClusterType",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateManifestDLTrusted]",
                                        "storedProcedureParameters": {
                                            "BatchExecutionLogID": {
                                                "value": {
                                                    "value": "@item().BatchExecutionLogID",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "SourceObject": {
                                                "value": {
                                                    "value": "@item().SourceObject",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartCounter": {
                                                "value": {
                                                    "value": "@item().StartCounter",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "If-ClusterType",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Set-ClusterType",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(variables('ClusterType'), 'interactive')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Load-To-Trusted-Zone-Job",
                                                "type": "DatabricksNotebook",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "notebookPath": {
                                                        "value": "@pipeline().parameters.TaskDetails.Command",
                                                        "type": "Expression"
                                                    },
                                                    "baseParameters": {
                                                        "source_object": {
                                                            "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                            "type": "Expression"
                                                        },
                                                        "start_counter": {
                                                            "value": "@item().StartCounter",
                                                            "type": "Expression"
                                                        },
                                                        "end_counter": {
                                                            "value": "@item().EndCounter",
                                                            "type": "Expression"
                                                        },
                                                        "delta_column": {
                                                            "value": "@item().DeltaColumn",
                                                            "type": "Expression"
                                                        },
                                                        "source_param": {
                                                            "value": "@string(pipeline().parameters.TaskDetails)",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    "libraries": [
                                                        {
                                                            "maven": {
                                                                "coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
                                                            }
                                                        }
                                                    ]
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "LS-AzureDatabricks_JobCluster",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "kvSecret": {
                                                            "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
                                                            "type": "Expression"
                                                        },
                                                        "DataBricksClusterType": {
                                                            "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
                                                            "type": "Expression"
                                                        },
                                                        "DataBricksClusterVersion": {
                                                            "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
                                                            "type": "Expression"
                                                        },
                                                        "DataBricksWorkerNodes": {
                                                            "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Set-ReturnValue-Job",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Load-To-Trusted-Zone-Job",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "ReturnValue",
                                                    "value": {
                                                        "value": "@string(activity('Load-To-Trusted-Zone-Job').output.runOutput)",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "Load-To-Trusted-Zone-Interactive",
                                                "type": "DatabricksNotebook",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "notebookPath": {
                                                        "value": "@pipeline().parameters.TaskDetails.Command",
                                                        "type": "Expression"
                                                    },
                                                    "baseParameters": {
                                                        "source_object": {
                                                            "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                            "type": "Expression"
                                                        },
                                                        "start_counter": {
                                                            "value": "@item().StartCounter",
                                                            "type": "Expression"
                                                        },
                                                        "end_counter": {
                                                            "value": "@item().EndCounter",
                                                            "type": "Expression"
                                                        },
                                                        "delta_column": {
                                                            "value": "@item().DeltaColumn",
                                                            "type": "Expression"
                                                        },
                                                        "source_param": {
                                                            "value": "@string(pipeline().parameters.TaskDetails)",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    "libraries": [
                                                        {
                                                            "maven": {
                                                                "coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
                                                            }
                                                        }
                                                    ]
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "LS-AzureDatabricks_DefinedCluster",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "kvSecret": {
                                                            "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
                                                            "type": "Expression"
                                                        },
                                                        "clusterId": {
                                                            "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Set-Return-Interactive",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Load-To-Trusted-Zone-Interactive",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "ReturnValue",
                                                    "value": {
                                                        "value": "@string(activity('Load-To-Trusted-Zone-Interactive').output.runOutput)",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Set-ClusterType",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ClusterType",
                                        "value": {
                                            "value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "If-LoadToSqlEDW",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "If-SoftDelete",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@pipeline().parameters.TaskDetails.LoadToSqlEDW",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "EP-DataLake-SQLEDW",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "05-DL-B-Load-Trusted-To-SQLEDW",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Log Failure SQLEDW",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-DataLake-SQLEDW",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "Error Occurred during SQLEDW load",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "If-SoftDelete",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Loop Manifest",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@not(equals(pipeline().parameters.TaskDetails.SoftDeleteSource, ''))",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "EP-Update-Deleted",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "05-DL-C-Update-Trusted-Deleted",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Log Failure Deleted",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-Update-Deleted",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "Error Occurred during Trusted Deleted",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object"
                    },
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskExecutionLogId": {
                        "type": "int"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "ReturnValue": {
                        "type": "String"
                    },
                    "ClusterType": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Data Lake"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/05-DL-B-Load-Trusted-To-SQLEDW')]",
                "[concat(variables('factoryId'), '/pipelines/05-DL-C-Update-Trusted-Deleted')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_JobCluster')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_DefinedCluster')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/recon-target-main')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Load Tasks",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[getExecutionTasks]",
                                "storedProcedureParameters": {
                                    "ProjectId": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@pipeline().parameters.ProjectId",
                                            "type": "Expression"
                                        }
                                    },
                                    "StageId": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "1",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Execute Each Task",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Load Tasks",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Load Tasks').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "If-Validation",
                                    "type": "IfCondition",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@not(item().IsAuditTable)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "EP-Recon-Target",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "recon-target",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "ProjectID": {
                                                            "value": "@pipeline().parameters.ProjectID",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        },
                                                        "SourceName": {
                                                            "value": "@item().SourceName",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "ProjectID": {
                        "type": "int"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Validation"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/recon-target')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/util-fileserver-upload-file')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy-Files-Out",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "BinarySource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "BinaryReadSettings"
                                }
                            },
                            "sink": {
                                "type": "BinarySink",
                                "storeSettings": {
                                    "type": "FileServerWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "BINARY_ADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "File": {
                                        "value": "@pipeline().parameters.FileName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().parameters.SourceContainer",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@pipeline().parameters.SourceFolder",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "BINARY_FILESERVER",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FileShareUserID": {
                                        "value": "@pipeline().parameters.FileShareUserID",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@pipeline().parameters.UploadFolder",
                                        "type": "Expression"
                                    },
                                    "File": {
                                        "value": "@pipeline().parameters.FileName",
                                        "type": "Expression"
                                    },
                                    "FileShareURL": {
                                        "value": "@pipeline().parameters.FileShareURL",
                                        "type": "Expression"
                                    },
                                    "FileSharePassword": {
                                        "value": "@pipeline().parameters.FileSharePassword",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "parameters": {
                    "SourceContainer": {
                        "type": "string",
                        "defaultValue": "external"
                    },
                    "SourceFolder": {
                        "type": "string",
                        "defaultValue": "test"
                    },
                    "FileName": {
                        "type": "string"
                    },
                    "UploadFolder": {
                        "type": "string",
                        "defaultValue": "In"
                    },
                    "FileShareURL": {
                        "type": "string"
                    },
                    "FileShareUserID": {
                        "type": "string"
                    },
                    "FileSharePassword": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Utility/fileserver"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/BINARY_ADLS')]",
                "[concat(variables('factoryId'), '/datasets/BINARY_FILESERVER')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/util-datalake-move-file')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get File Metadata",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "BINARY_ADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "File": {
                                        "value": "@pipeline().parameters.SourceFile",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().parameters.SourceContainer",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@pipeline().parameters.SourceFolder",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "If-File-Exists",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get File Metadata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@activity('Get File Metadata').output.exists",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Move File",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "BinarySource",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageReadSettings",
                                                "recursive": true,
                                                "deleteFilesAfterCompletion": {
                                                    "value": "@pipeline().parameters.DeleteFile",
                                                    "type": "Expression"
                                                }
                                            },
                                            "formatSettings": {
                                                "type": "BinaryReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "BinarySink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "BINARY_ADLS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "File": {
                                                    "value": "@pipeline().parameters.SourceFile",
                                                    "type": "Expression"
                                                },
                                                "Container": {
                                                    "value": "@pipeline().parameters.SourceContainer",
                                                    "type": "Expression"
                                                },
                                                "Folder": {
                                                    "value": "@pipeline().parameters.SourceFolder",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BINARY_ADLS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "File": {
                                                    "value": "@pipeline().parameters.TargetFile",
                                                    "type": "Expression"
                                                },
                                                "Container": {
                                                    "value": "@pipeline().parameters.TargetContainer",
                                                    "type": "Expression"
                                                },
                                                "Folder": {
                                                    "value": "@pipeline().parameters.TargetFolder",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "If-DeleteFile",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "If-File-Exists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@pipeline().parameters.DeleteFile",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Delete-File",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "BINARY_ADLS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "File": {
                                                    "value": "@pipeline().parameters.SourceFile",
                                                    "type": "Expression"
                                                },
                                                "Container": {
                                                    "value": "@pipeline().parameters.SourceContainer",
                                                    "type": "Expression"
                                                },
                                                "Folder": {
                                                    "value": "@pipeline().parameters.SourceFolder",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "SourceFolder": {
                        "type": "string"
                    },
                    "SourceFile": {
                        "type": "string"
                    },
                    "SourceContainer": {
                        "type": "string"
                    },
                    "TargetContainer": {
                        "type": "string"
                    },
                    "DeleteFile": {
                        "type": "bool",
                        "defaultValue": true
                    },
                    "TargetFolder": {
                        "type": "string"
                    },
                    "TargetFile": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Utility"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/BINARY_ADLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/util-fileserver-upload-folder')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get-Files",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "BINARY_ADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "File": {
                                        "value": "@pipeline().parameters.FileType",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().parameters.SourceContainer",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@pipeline().parameters.SourceFolder",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEach-CopyFiles",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get-Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get-Files').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "If-File-Copy",
                                    "type": "IfCondition",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(item().type, 'File')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "EP-Upload-File",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "util-fileserver-upload-file",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "SourceContainer": {
                                                            "value": "@pipeline().parameters.SourceContainer",
                                                            "type": "Expression"
                                                        },
                                                        "SourceFolder": {
                                                            "value": "@pipeline().parameters.SourceFolder",
                                                            "type": "Expression"
                                                        },
                                                        "FileName": {
                                                            "value": "@item().name",
                                                            "type": "Expression"
                                                        },
                                                        "UploadFolder": {
                                                            "value": "@pipeline().parameters.TargetFolder",
                                                            "type": "Expression"
                                                        },
                                                        "FileShareURL": {
                                                            "value": "@pipeline().parameters.FileShareURL",
                                                            "type": "Expression"
                                                        },
                                                        "FileShareUserID": {
                                                            "value": "@pipeline().parameters.FileShareUserID",
                                                            "type": "Expression"
                                                        },
                                                        "FileSharePassword": {
                                                            "value": "@pipeline().parameters.FileSharePassword",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "FileType": {
                        "type": "string"
                    },
                    "SourceContainer": {
                        "type": "string"
                    },
                    "SourceFolder": {
                        "type": "string"
                    },
                    "TargetFolder": {
                        "type": "string"
                    },
                    "FileShareURL": {
                        "type": "string"
                    },
                    "FileShareUserID": {
                        "type": "string"
                    },
                    "FileSharePassword": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Utility/fileserver"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/BINARY_ADLS')]",
                "[concat(variables('factoryId'), '/pipelines/util-fileserver-upload-file')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/06-Curated-Qualtrics')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get-Files",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "Set-ReportFolder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-FileShareUserID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-FileShareURL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-FileSharePassword",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "BINARY_ADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "File": "CX*.txt",
                                    "Container": {
                                        "value": "@variables('SourceContainer')",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@variables('ReportFolder')",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "Set-ReportFolder",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ReportFolder",
                            "value": {
                                "value": "@concat('qualtrics/reports/', pipeline().parameters.NotebookOutput)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEach-CopyFiles",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get-Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get-Files').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "EP-Upload-File",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "util-fileserver-upload-file",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "SourceContainer": {
                                                "value": "@variables('SourceContainer')",
                                                "type": "Expression"
                                            },
                                            "SourceFolder": {
                                                "value": "@variables('ReportFolder')",
                                                "type": "Expression"
                                            },
                                            "FileName": {
                                                "value": "@item().name",
                                                "type": "Expression"
                                            },
                                            "UploadFolder": {
                                                "value": "@variables('UploadFolder')",
                                                "type": "Expression"
                                            },
                                            "FileShareURL": {
                                                "value": "@variables('FileShareURL')",
                                                "type": "Expression"
                                            },
                                            "FileShareUserID": {
                                                "value": "@variables('FileShareUserID')",
                                                "type": "Expression"
                                            },
                                            "FileSharePassword": {
                                                "value": "@variables('FileSharePassword')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set-FileShareUserID",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileShareUserID",
                            "value": {
                                "value": "123\n/*@pipeline().globalParameters.FileServerUserID*/",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-FileShareURL",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileShareURL",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[0]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-FileSharePassword",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileSharePassword",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[2]",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object",
                        "defaultValue": {
                            "SourceType": "BLOB Storage (csv)",
                            "SourceServer": "datalake-SasToken",
                            "SourceName": "Qualtrics_Qualtrics",
                            "SourceLocation": "Qualtrics",
                            "AdditionalProperty": "",
                            "Processor": "databricks-token|0925-064956-carps143|Standard_DS5_v2|6.4.x-scala2.11|2:8|interactive",
                            "ProjectName": "Qualtrics1",
                            "TargetType": "SQL Server",
                            "TargetName": "Qualtrics_Qualtrics",
                            "TargetLocation": "Qualtrics",
                            "TargetServer": "AzureSqlDatabase-SQLDB",
                            "DataLoadMode": "0",
                            "DeltaExtract": null,
                            "CDCSource": null,
                            "TruncateTarget": null,
                            "UpsertTarget": null,
                            "TrackChanges": false,
                            "LoadToSqlEDW": true,
                            "TaskName": "Qualtrics_Qualtrics",
                            "ControlStageId": 3,
                            "TaskId": 813,
                            "StageSequence": 300,
                            "StageName": "Trusted to Curated",
                            "SourceId": 851,
                            "TargetId": 830,
                            "ObjectGrain": "Day",
                            "CommandTypeId": 8,
                            "Watermarks": null,
                            "WatermarksDT": null,
                            "WatermarkColumn": "",
                            "BusinessKeyColumn": "",
                            "Command": "/Users/rahul.agrawal1@tafenswtest.edu.au/build/curated/Qualtrics/QualtricsMaster-Test",
                            "LastLoadedFile": null
                        }
                    },
                    "NotebookOutput": {
                        "type": "string",
                        "defaultValue": "year=2020/month=10/day=14/hour=22/minute=58/"
                    }
                },
                "variables": {
                    "ReportFolder": {
                        "type": "String"
                    },
                    "SourceContainer": {
                        "type": "String",
                        "defaultValue": "curated"
                    },
                    "UploadFolder": {
                        "type": "String",
                        "defaultValue": "out/qualtrics"
                    },
                    "FileShareURL": {
                        "type": "String",
                        "defaultValue": "FileServer-URL"
                    },
                    "FileShareUserID": {
                        "type": "String"
                    },
                    "FileSharePassword": {
                        "type": "String",
                        "defaultValue": "FileServer-ServiceAccount-Password"
                    }
                },
                "folder": {
                    "name": "Curated"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/BINARY_ADLS')]",
                "[concat(variables('factoryId'), '/pipelines/util-fileserver-upload-file')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/06-Curated-NAT')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get-Files",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "Set-SourceFolder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-TargetFolder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-FileShareURL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-FileShareUserID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-FileSharePassword",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "BINARY_ADLS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "File": "*.txt",
                                    "Container": {
                                        "value": "@variables('SourceContainer')",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@variables('SourceFolder')",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "Set-SourceFolder",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "SourceFolder",
                            "value": {
                                "value": "@concat(split(pipeline().parameters.TaskDetails.AdditionalProperty,'|')[0], '/', pipeline().parameters.NotebookOutput)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEach-CopyFiles",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get-Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get-Files').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "If-File-Copy",
                                    "type": "IfCondition",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(item().type, 'File')",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "EP-Upload-Folder",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "util-fileserver-upload-folder",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "FileType": "*.txt",
                                                        "SourceContainer": {
                                                            "value": "@variables('SourceContainer')",
                                                            "type": "Expression"
                                                        },
                                                        "SourceFolder": {
                                                            "value": "@concat(variables('SourceFolder'), '/', item().name)",
                                                            "type": "Expression"
                                                        },
                                                        "TargetFolder": {
                                                            "value": "@concat(variables('TargetFolder'), '/', item().name)",
                                                            "type": "Expression"
                                                        },
                                                        "FileShareURL": {
                                                            "value": "@variables('FileShareURL')",
                                                            "type": "Expression"
                                                        },
                                                        "FileShareUserID": {
                                                            "value": "@variables('FileShareUserID')",
                                                            "type": "Expression"
                                                        },
                                                        "FileSharePassword": {
                                                            "value": "@variables('FileSharePassword')",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ],
                                        "ifTrueActivities": [
                                            {
                                                "name": "EP-Upload-File",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "util-fileserver-upload-file",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "SourceContainer": {
                                                            "value": "@variables('SourceContainer')",
                                                            "type": "Expression"
                                                        },
                                                        "SourceFolder": {
                                                            "value": "@variables('SourceFolder')",
                                                            "type": "Expression"
                                                        },
                                                        "FileName": {
                                                            "value": "@item().name",
                                                            "type": "Expression"
                                                        },
                                                        "UploadFolder": {
                                                            "value": "@variables('TargetFolder')",
                                                            "type": "Expression"
                                                        },
                                                        "FileShareURL": {
                                                            "value": "@variables('FileShareURL')",
                                                            "type": "Expression"
                                                        },
                                                        "FileShareUserID": {
                                                            "value": "@variables('FileShareUserID')",
                                                            "type": "Expression"
                                                        },
                                                        "FileSharePassword": {
                                                            "value": "@variables('FileSharePassword')",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set-TargetFolder",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "TargetFolder",
                            "value": {
                                "value": "@concat(split(pipeline().parameters.TaskDetails.AdditionalProperty,'|')[1], '/', pipeline().parameters.NotebookOutput)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-FileShareURL",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileShareURL",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[0]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-FileShareUserID",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileShareUserID",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[1]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-FileSharePassword",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileSharePassword",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[2]",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object",
                        "defaultValue": {
                            "SourceType": "BLOB Storage (csv)",
                            "SourceServer": "datalake-SasToken",
                            "SourceName": "Qualtrics_Qualtrics",
                            "SourceLocation": "Qualtrics",
                            "AdditionalProperty": "nat/e-reporting|out/nat/ereporting",
                            "Processor": "databricks-token|0925-064956-carps143|Standard_DS5_v2|6.4.x-scala2.11|2:8|interactive",
                            "ProjectName": "Qualtrics1",
                            "TargetType": "SQL Server",
                            "TargetName": "Qualtrics_Qualtrics",
                            "TargetLocation": "Qualtrics",
                            "TargetServer": "AzureSqlDatabase-SQLDB",
                            "DataLoadMode": "0",
                            "DeltaExtract": null,
                            "CDCSource": null,
                            "TruncateTarget": null,
                            "UpsertTarget": null,
                            "TrackChanges": false,
                            "LoadToSqlEDW": true,
                            "TaskName": "Qualtrics_Qualtrics",
                            "ControlStageId": 3,
                            "TaskId": 813,
                            "StageSequence": 300,
                            "StageName": "Trusted to Curated",
                            "SourceId": 851,
                            "TargetId": 830,
                            "ObjectGrain": "Day",
                            "CommandTypeId": 8,
                            "Watermarks": null,
                            "WatermarksDT": null,
                            "WatermarkColumn": "",
                            "BusinessKeyColumn": "",
                            "Command": "/Users/rahul.agrawal1@tafenswtest.edu.au/build/curated/Qualtrics/QualtricsMaster-Test",
                            "LastLoadedFile": null
                        }
                    },
                    "NotebookOutput": {
                        "type": "string",
                        "defaultValue": "20210205"
                    }
                },
                "variables": {
                    "SourceFolder": {
                        "type": "String"
                    },
                    "SourceContainer": {
                        "type": "String",
                        "defaultValue": "curated"
                    },
                    "TargetFolder": {
                        "type": "String",
                        "defaultValue": "out/nat/avetmiss"
                    },
                    "FileShareURL": {
                        "type": "String",
                        "defaultValue": "FileServer-URL"
                    },
                    "FileShareUserID": {
                        "type": "String"
                    },
                    "FileSharePassword": {
                        "type": "String",
                        "defaultValue": "FileServer-ServiceAccount-Password"
                    }
                },
                "folder": {
                    "name": "Curated"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/BINARY_ADLS')]",
                "[concat(variables('factoryId'), '/pipelines/util-fileserver-upload-folder')]",
                "[concat(variables('factoryId'), '/pipelines/util-fileserver-upload-file')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/util-fileserver-download-file')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get File Metadata",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "BINARY_FILESERVER",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FileShareUserID": {
                                        "value": "@pipeline().parameters.FileShareUserID",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@pipeline().parameters.SourceFolder",
                                        "type": "Expression"
                                    },
                                    "File": {
                                        "value": "@pipeline().parameters.SourceFile",
                                        "type": "Expression"
                                    },
                                    "FileShareURL": {
                                        "value": "@pipeline().parameters.FileShareURL",
                                        "type": "Expression"
                                    },
                                    "FileSharePassword": {
                                        "value": "@pipeline().parameters.FileSharePassword",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists",
                                "lastModified"
                            ],
                            "storeSettings": {
                                "type": "FileServerReadSettings",
                                "recursive": true
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "If-File-Exists",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get File Metadata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@activity('Get File Metadata').output.exists",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Move File",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "BinarySource",
                                            "storeSettings": {
                                                "type": "FileServerReadSettings",
                                                "recursive": true,
                                                "deleteFilesAfterCompletion": {
                                                    "value": "@pipeline().parameters.DeleteFile",
                                                    "type": "Expression"
                                                }
                                            },
                                            "formatSettings": {
                                                "type": "BinaryReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "BinarySink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "BINARY_FILESERVER",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FileShareUserID": {
                                                    "value": "@pipeline().parameters.FileShareUserID",
                                                    "type": "Expression"
                                                },
                                                "Folder": {
                                                    "value": "@pipeline().parameters.SourceFolder",
                                                    "type": "Expression"
                                                },
                                                "File": {
                                                    "value": "@pipeline().parameters.SourceFile",
                                                    "type": "Expression"
                                                },
                                                "FileShareURL": {
                                                    "value": "@pipeline().parameters.FileShareURL",
                                                    "type": "Expression"
                                                },
                                                "FileSharePassword": {
                                                    "value": "@pipeline().parameters.FileSharePassword",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "BINARY_ADLS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "File": {
                                                    "value": "@pipeline().parameters.TargetFile",
                                                    "type": "Expression"
                                                },
                                                "Container": {
                                                    "value": "@pipeline().parameters.TargetContainer",
                                                    "type": "Expression"
                                                },
                                                "Folder": {
                                                    "value": "@pipeline().parameters.TargetFolder",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "If-DeleteFile",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "If-File-Exists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@and(pipeline().parameters.DeleteFile, activity('Get File Metadata').output.exists)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Delete-File",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "BINARY_FILESERVER",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FileShareUserID": {
                                                    "value": "@pipeline().parameters.FileShareUserID",
                                                    "type": "Expression"
                                                },
                                                "Folder": {
                                                    "value": "@pipeline().parameters.SourceFolder",
                                                    "type": "Expression"
                                                },
                                                "File": {
                                                    "value": "@pipeline().parameters.SourceFile",
                                                    "type": "Expression"
                                                },
                                                "FileShareURL": {
                                                    "value": "@pipeline().parameters.FileShareURL",
                                                    "type": "Expression"
                                                },
                                                "FileSharePassword": {
                                                    "value": "@pipeline().parameters.FileSharePassword",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "FileServerReadSettings",
                                            "recursive": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "TargetFolder": {
                        "type": "string"
                    },
                    "TargetContainer": {
                        "type": "string"
                    },
                    "DeleteFile": {
                        "type": "bool"
                    },
                    "SourceFile": {
                        "type": "string"
                    },
                    "TargetFile": {
                        "type": "string"
                    },
                    "SourceFolder": {
                        "type": "string"
                    },
                    "FileShareURL": {
                        "type": "string"
                    },
                    "FileShareUserID": {
                        "type": "string"
                    },
                    "FileSharePassword": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Utility/fileserver"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/BINARY_FILESERVER')]",
                "[concat(variables('factoryId'), '/datasets/BINARY_ADLS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/06-Curated-Main')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LU-ProcessingPeriod",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set-ClusterType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[CuratedGetProcessingPeriod]",
                                "storedProcedureParameters": {
                                    "Project": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "SubjectArea": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "Log Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP-Log-Curated-End",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": "Curated Load Complete",
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "SP-Log-Curated-Start",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "LU-ProcessingPeriod",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[CuratedLogStart]",
                            "storedProcedureParameters": {
                                "BatchExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "EndPeriod": {
                                    "value": {
                                        "value": "@activity('LU-ProcessingPeriod').output.firstRow.ProcessingEndDate",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "Project": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "StartPeriod": {
                                    "value": {
                                        "value": "@activity('LU-ProcessingPeriod').output.firstRow.ProcessingStartDate",
                                        "type": "Expression"
                                    },
                                    "type": "DateTime"
                                },
                                "SubjectArea": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TaskExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "SP-Log-Curated-End",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SW-Project-Custom",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[CuratedLogComplete]",
                            "storedProcedureParameters": {
                                "BatchExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "TaskExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Log DB Failure LU Processing",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "LU-ProcessingPeriod",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Error Occurred during Curated load on Lookup for Processing Period",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Log DB Failure SP Processing Start",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP-Log-Curated-Start",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Error Occurred during Curated load on SP for Processing Period",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Set-ClusterType",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ClusterType",
                            "value": {
                                "value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "If-Cluster-Interactive",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "SP-Log-Curated-Start",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(variables('ClusterType'), 'interactive')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "DB-Load-Curated-Job",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": {
                                            "value": "@pipeline().parameters.TaskDetails.Command",
                                            "type": "Expression"
                                        },
                                        "baseParameters": {
                                            "start_date": {
                                                "value": "@activity('LU-ProcessingPeriod').output.firstRow.ProcessingStartDate",
                                                "type": "Expression"
                                            },
                                            "end_date": {
                                                "value": "@activity('LU-ProcessingPeriod').output.firstRow.ProcessingEndDate",
                                                "type": "Expression"
                                            }
                                        },
                                        "libraries": [
                                            {
                                                "maven": {
                                                    "coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
                                                }
                                            }
                                        ]
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureDatabricks_JobCluster",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
                                                "type": "Expression"
                                            },
                                            "DataBricksClusterType": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
                                                "type": "Expression"
                                            },
                                            "DataBricksClusterVersion": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
                                                "type": "Expression"
                                            },
                                            "DataBricksWorkerNodes": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SET-ReturnValue-Job",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "DB-Load-Curated-Job",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "NoteBookReturnValue",
                                        "value": {
                                            "value": "@if(contains(activity('DB-Load-Curated-Job').output, 'runOutput'),\nstring(activity('DB-Load-Curated-Job').output.runOutput), '')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "DB-Load-Curated-Interactive",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": {
                                            "value": "@pipeline().parameters.TaskDetails.Command",
                                            "type": "Expression"
                                        },
                                        "baseParameters": {
                                            "start_date": {
                                                "value": "@activity('LU-ProcessingPeriod').output.firstRow.ProcessingStartDate",
                                                "type": "Expression"
                                            },
                                            "end_date": {
                                                "value": "@activity('LU-ProcessingPeriod').output.firstRow.ProcessingEndDate",
                                                "type": "Expression"
                                            }
                                        },
                                        "libraries": [
                                            {
                                                "maven": {
                                                    "coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
                                                }
                                            }
                                        ]
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureDatabricks_DefinedCluster",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
                                                "type": "Expression"
                                            },
                                            "clusterId": {
                                                "value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SET-ReturnValue-Interactive",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "DB-Load-Curated-Interactive",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "NoteBookReturnValue",
                                        "value": {
                                            "value": "@if(contains(activity('DB-Load-Curated-Interactive').output, 'runOutput'),\nstring(activity('DB-Load-Curated-Interactive').output.runOutput), '')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Log DB Failure SP Curated End",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP-Log-Curated-End",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Error Occurred during Curated load on SP End",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Log DB Failure Curated",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "If-Cluster-Interactive",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Error Occurred during Curated load on DataBricks",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "SW-Project-Custom",
                        "type": "Switch",
                        "dependsOn": [
                            {
                                "activity": "If-Cluster-Interactive",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "on": {
                                "value": "@pipeline().parameters.TaskDetails.ProjectName",
                                "type": "Expression"
                            },
                            "cases": [
                                {
                                    "value": "Qualtrics",
                                    "activities": [
                                        {
                                            "name": "EP-Qualtrics",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "06-Curated-Qualtrics",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "TaskDetails": {
                                                        "value": "@pipeline().parameters.TaskDetails",
                                                        "type": "Expression"
                                                    },
                                                    "NotebookOutput": {
                                                        "value": "@variables('NoteBookReturnValue')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "UMD",
                                    "activities": [
                                        {
                                            "name": "EP-UMD",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "06-Curated-UMD",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {}
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "NATAvetmiss",
                                    "activities": [
                                        {
                                            "name": "EP-NAT-Avetmiss",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "06-Curated-NAT",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "TaskDetails": {
                                                        "value": "@pipeline().parameters.TaskDetails",
                                                        "type": "Expression"
                                                    },
                                                    "NotebookOutput": {
                                                        "value": "@variables('NoteBookReturnValue')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "value": "NATEReporting",
                                    "activities": [
                                        {
                                            "name": "EP-NAT-eReporting",
                                            "type": "ExecutePipeline",
                                            "dependsOn": [],
                                            "userProperties": [],
                                            "typeProperties": {
                                                "pipeline": {
                                                    "referenceName": "06-Curated-NAT",
                                                    "type": "PipelineReference"
                                                },
                                                "waitOnCompletion": true,
                                                "parameters": {
                                                    "TaskDetails": {
                                                        "value": "@pipeline().parameters.TaskDetails",
                                                        "type": "Expression"
                                                    },
                                                    "NotebookOutput": {
                                                        "value": "@variables('NoteBookReturnValue')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "Log Custom Action Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SW-Project-Custom",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Error Occurred during Curated Custom Action",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object",
                        "defaultValue": {
                            "SourceType": "BLOB Storage (csv)",
                            "SourceServer": "datalake-SasToken",
                            "SourceName": "Qualtrics_Qualtrics",
                            "SourceLocation": "Qualtrics",
                            "AdditionalProperty": "",
                            "Processor": "databricks-token|0925-064956-carps143|Standard_DS5_v2|6.4.x-scala2.11|2:8|interactive",
                            "ProjectName": "Qualtrics1",
                            "TargetType": "SQL Server",
                            "TargetName": "Qualtrics_Qualtrics",
                            "TargetLocation": "Qualtrics",
                            "TargetServer": "AzureSqlDatabase-SQLDB",
                            "DataLoadMode": "0",
                            "DeltaExtract": null,
                            "CDCSource": null,
                            "TruncateTarget": null,
                            "UpsertTarget": null,
                            "TrackChanges": false,
                            "LoadToSqlEDW": true,
                            "TaskName": "Qualtrics_Qualtrics",
                            "ControlStageId": 3,
                            "TaskId": 813,
                            "StageSequence": 300,
                            "StageName": "Trusted to Curated",
                            "SourceId": 851,
                            "TargetId": 830,
                            "ObjectGrain": "Day",
                            "CommandTypeId": 8,
                            "Watermarks": null,
                            "WatermarksDT": null,
                            "WatermarkColumn": "",
                            "BusinessKeyColumn": "",
                            "Command": "/Users/rahul.agrawal1@tafenswtest.edu.au/build/curated/Qualtrics/QualtricsMaster-Test",
                            "LastLoadedFile": null
                        }
                    },
                    "TaskExecutionLogId": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "BatchLogId": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "ClusterType": {
                        "type": "String"
                    },
                    "NoteBookReturnValue": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Curated"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_JobCluster')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_DefinedCluster')]",
                "[concat(variables('factoryId'), '/pipelines/06-Curated-Qualtrics')]",
                "[concat(variables('factoryId'), '/pipelines/06-Curated-UMD')]",
                "[concat(variables('factoryId'), '/pipelines/06-Curated-NAT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/util-download-schema-file')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "SET-Source-Folder",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "SourceFolder",
                            "value": {
                                "value": "@pipeline().parameters.SourceFolder",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SET-Target-Folder",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "TargetFolder",
                            "value": {
                                "value": "@toLower(concat(\n  split(pipeline().parameters.TaskDetails.TargetLocation,'/')[0],\n  '/schema/'\n))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "EP-Download-File",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "SET-Source-Folder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "SET-Target-Folder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "SET-Source-File",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "SET-Target-File",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "SET-FileShareUserID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "util-fileserver-download-file",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TargetFolder": {
                                    "value": "@variables('TargetFolder')",
                                    "type": "Expression"
                                },
                                "TargetContainer": "raw",
                                "DeleteFile": true,
                                "SourceFile": {
                                    "value": "@variables('SourceFile')",
                                    "type": "Expression"
                                },
                                "TargetFile": {
                                    "value": "@variables('TargetFile')",
                                    "type": "Expression"
                                },
                                "SourceFolder": {
                                    "value": "@variables('SourceFolder')",
                                    "type": "Expression"
                                },
                                "FileShareURL": {
                                    "value": "@pipeline().parameters.FileShareURL",
                                    "type": "Expression"
                                },
                                "FileShareUserID": {
                                    "value": "@pipeline().parameters.FileShareUserID",
                                    "type": "Expression"
                                },
                                "FileSharePassword": {
                                    "value": "@pipeline().parameters.FileSharePassword",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "SET-Source-File",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "SourceFile",
                            "value": {
                                "value": "@toLower(concat(\n  pipeline().parameters.TaskDetails.TaskName,\n  '.schema'\n))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SET-Target-File",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "TargetFile",
                            "value": {
                                "value": "@toLower(concat(\n  pipeline().parameters.TaskDetails.TaskName,\n  '.schema'\n))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SET-FileShareUserID",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileShareUserID",
                            "value": {
                                "value": "/*@if(\n  equals(pipeline().parameters.FileShareUserID,'')\n  ,pipeline().globalParameters.FileServerUserID\n  ,pipeline().parameters.FileShareUserID\n)*/\n123",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object"
                    },
                    "FileShareURL": {
                        "type": "string"
                    },
                    "FileShareUserID": {
                        "type": "string"
                    },
                    "FileSharePassword": {
                        "type": "string"
                    },
                    "SourceFolder": {
                        "type": "string"
                    }
                },
                "variables": {
                    "SourceFolder": {
                        "type": "String"
                    },
                    "TargetFolder": {
                        "type": "String"
                    },
                    "SourceFile": {
                        "type": "String"
                    },
                    "TargetFile": {
                        "type": "String"
                    },
                    "FileShareUserID": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Utility"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/util-fileserver-download-file')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-SQLServer-B-Source-Copy')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy-Source-DataLake",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@pipeline().parameters.SourceSQL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_SQLServer",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": "@pipeline().parameters.TaskDetails.SourceServer"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_JSON",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@pipeline().parameters.TargetBLOBFolder",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@pipeline().parameters.TargetBLOBName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "If-RecordCount",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Copy-Source-DataLake",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('Copy-Source-DataLake').output.rowsCopied, 0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "SP-Record-Manifest",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[CreateManifestRecord]",
                                        "storedProcedureParameters": {
                                            "BatchExecutionLogID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Container": {
                                                "value": "raw",
                                                "type": "String"
                                            },
                                            "EndCounter": {
                                                "value": {
                                                    "value": "@json(string(pipeline().parameters.ValidationDetails)).ReturnValue",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FileName": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TargetBLOBName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FolderName": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TargetBLOBFolder",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "Records": {
                                                "value": {
                                                    "value": "@string(activity('Copy-Source-DataLake').output.rowsCopied)",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "SourceObject": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartCounter": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.Watermarks",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "TaskExecutionLogID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "DeltaColumn": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Execute-DB-Load-Delta-Table",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Record-Manifest",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-DL-Load-Raw-to-Delta-Table",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@pipeline().parameters.TargetBLOBFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@pipeline().parameters.TargetBLOBName",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "EP-Record-Validation",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Execute-DB-Load-Delta-Table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "recon-record-validation",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@pipeline().parameters.ValidationDetails",
                                                "type": "Expression"
                                            },
                                            "SourceID": {
                                                "value": "@pipeline().parameters.TaskDetails.SourceID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "securestring"
                    },
                    "SourceSQL": {
                        "type": "string"
                    },
                    "TargetBLOBFolder": {
                        "type": "string"
                    },
                    "TargetBLOBName": {
                        "type": "string"
                    },
                    "ValidationDetails": {
                        "type": "object"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SQL Server"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-27T00:17:49Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SRC_SQLServer')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_JSON')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/04-DL-Load-Raw-to-Delta-Table')]",
                "[concat(variables('factoryId'), '/pipelines/recon-record-validation')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/util-download-schema-file-from-default')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "EP-Download-Schema",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "util-download-schema-file",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TaskDetails": {
                                    "value": "@pipeline().parameters.TaskDetails",
                                    "type": "Expression"
                                },
                                "FileShareURL": "FileServer-URL",
                                "FileShareUserID": {
                                    "value": "123/*@pipeline().globalParameters.FileServerUserID*/",
                                    "type": "Expression"
                                },
                                "FileSharePassword": "FileServer-ServiceAccount-Password",
                                "SourceFolder": "In"
                            }
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object"
                    }
                },
                "folder": {
                    "name": "Utility"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/util-download-schema-file')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-Excel-Source-Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get File Metadata",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "Set-FileSharePassword",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-FileShareUserID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-FileShareURL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-SourceFolder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "BINARY_FILESERVER",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FileShareUserID": {
                                        "value": "@variables('FileShareUserID')",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@variables('SourceFolder')",
                                        "type": "Expression"
                                    },
                                    "File": {
                                        "value": "@pipeline().parameters.TaskDetails.Command",
                                        "type": "Expression"
                                    },
                                    "FileShareURL": {
                                        "value": "@variables('FileShareURL')",
                                        "type": "Expression"
                                    },
                                    "FileSharePassword": {
                                        "value": "@variables('FileSharePassword')",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "FileServerReadSettings",
                                "recursive": true
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "If File Exists",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get File Metadata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@activity('Get File Metadata').output.exists",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Get Full File Name",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
                                            "storedProcedureParameters": {
                                                "DeltaExtract": {
                                                    "type": "Boolean",
                                                    "value": {
                                                        "value": "@pipeline().parameters.TaskDetails.DeltaExtract",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "FileName": {
                                                    "type": "String",
                                                    "value": {
                                                        "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "FolderName": {
                                                    "type": "String",
                                                    "value": {
                                                        "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "Grain": {
                                                    "type": "String",
                                                    "value": {
                                                        "value": "@pipeline().parameters.TaskDetails.ObjectGrain",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "Compressed": {
                                                    "type": "Boolean",
                                                    "value": {
                                                        "value": "false",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "TargetType": {
                                                    "type": "String",
                                                    "value": {
                                                        "value": "@pipeline().parameters.TaskDetails.TargetType",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSqlDatabase_Ctrldb",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "Copy Excel File",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Full File Name",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "EP-Download-File",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "EP-Download-Schema",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "ExcelSource",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageReadSettings",
                                                "recursive": true
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "SRC_EXCEL",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "FileName": {
                                                    "value": "@pipeline().parameters.TaskDetails.Command",
                                                    "type": "Expression"
                                                },
                                                "SheetName": {
                                                    "value": "@pipeline().parameters.TaskDetails.AdditionalProperty",
                                                    "type": "Expression"
                                                },
                                                "Container": {
                                                    "value": "@variables('StageContainer')",
                                                    "type": "Expression"
                                                },
                                                "Folder": {
                                                    "value": "@variables('StageFolder')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "RAW_ADLS_CSV",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "BlobPath": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                    "type": "Expression"
                                                },
                                                "BlobName": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "Compression": "none"
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Log Notebook Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Execute-DB-Load-Delta-Table",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "Error running Databricks Noebook",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Log Copy Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Excel File",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "File Copy Error",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "SP-Record-Manifest",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Excel File",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[CreateManifestRecord]",
                                        "storedProcedureParameters": {
                                            "BatchExecutionLogID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Container": {
                                                "value": "raw",
                                                "type": "String"
                                            },
                                            "EndCounter": {
                                                "value": {
                                                    "value": "0",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FileName": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FolderName": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "Records": {
                                                "value": {
                                                    "value": "@activity('Copy Excel File').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "SourceObject": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartCounter": {
                                                "value": {
                                                    "value": "0",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "TaskExecutionLogID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "DeltaColumn": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Log Manifest Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Record-Manifest",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "Databricks Error has occured",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Log Archive Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-Archive-ExcelFile",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "File Archive Error has occured",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Execute-DB-Load-Delta-Table",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Record-Manifest",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-DL-Load-Raw-to-Delta-Table",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "EP-Archive-ExcelFile",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Execute-DB-Load-Delta-Table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "util-datalake-move-file",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "SourceFolder": {
                                                "value": "@variables('StageFolder')",
                                                "type": "Expression"
                                            },
                                            "SourceFile": {
                                                "value": "@pipeline().parameters.TaskDetails.Command",
                                                "type": "Expression"
                                            },
                                            "SourceContainer": {
                                                "value": "@variables('StageContainer')",
                                                "type": "Expression"
                                            },
                                            "TargetContainer": "raw",
                                            "DeleteFile": true,
                                            "TargetFolder": {
                                                "value": "@replace(activity('Get Full File Name').output.firstRow.StorageFolder, 'csv', 'archive')",
                                                "type": "Expression"
                                            },
                                            "TargetFile": {
                                                "value": "@replace(activity('Get Full File Name').output.firstRow.StorageFile, 'csv', 'xlsx')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "EP-Download-Schema",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "util-download-schema-file",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "FileShareURL": {
                                                "value": "@variables('FileShareURL')",
                                                "type": "Expression"
                                            },
                                            "FileShareUserID": {
                                                "value": "@variables('FileShareUserID')",
                                                "type": "Expression"
                                            },
                                            "FileSharePassword": {
                                                "value": "@variables('FileSharePassword')",
                                                "type": "Expression"
                                            },
                                            "SourceFolder": {
                                                "value": "@variables('SourceFolder')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "EP-Download-File",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "util-fileserver-download-file",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TargetFolder": {
                                                "value": "@variables('StageFolder')",
                                                "type": "Expression"
                                            },
                                            "TargetContainer": {
                                                "value": "@variables('StageContainer')",
                                                "type": "Expression"
                                            },
                                            "DeleteFile": false,
                                            "SourceFile": {
                                                "value": "@pipeline().parameters.TaskDetails.Command",
                                                "type": "Expression"
                                            },
                                            "TargetFile": {
                                                "value": "@pipeline().parameters.TaskDetails.Command",
                                                "type": "Expression"
                                            },
                                            "SourceFolder": {
                                                "value": "@variables('SourceFolder')",
                                                "type": "Expression"
                                            },
                                            "FileShareURL": {
                                                "value": "@variables('FileShareURL')",
                                                "type": "Expression"
                                            },
                                            "FileShareUserID": {
                                                "value": "@variables('FileShareUserID')",
                                                "type": "Expression"
                                            },
                                            "FileSharePassword": {
                                                "value": "@variables('FileSharePassword')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Log File Download Error",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-Download-Schema",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "Error Downloading File",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Log Schema Download Error",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-Download-File",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "Error Downloading Schema File",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "EP-Delete-Source",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Execute-DB-Load-Delta-Table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "util-fileserver-delete-file",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "SourceFile": {
                                                "value": "@pipeline().parameters.TaskDetails.Command",
                                                "type": "Expression"
                                            },
                                            "SourceFolder": {
                                                "value": "@variables('SourceFolder')",
                                                "type": "Expression"
                                            },
                                            "FileShareURL": {
                                                "value": "@variables('FileShareURL')",
                                                "type": "Expression"
                                            },
                                            "FileShareUserID": {
                                                "value": "@variables('FileShareUserID')",
                                                "type": "Expression"
                                            },
                                            "FileSharePassword": {
                                                "value": "@variables('FileSharePassword')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Log Delete Source Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-Delete-Source",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "Source File Delete Error has occured",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Log Text Load Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "If File Exists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Set-FileShareURL",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileShareURL",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[0]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-FileShareUserID",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileShareUserID",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[1]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-FileSharePassword",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileSharePassword",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[2]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-SourceFolder",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "SourceFolder",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[3]",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "int"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "StageContainer": {
                        "type": "String",
                        "defaultValue": "external"
                    },
                    "StageFolder": {
                        "type": "String",
                        "defaultValue": "stage"
                    },
                    "FileShareURL": {
                        "type": "String"
                    },
                    "FileShareUserID": {
                        "type": "String"
                    },
                    "FileSharePassword": {
                        "type": "String"
                    },
                    "SourceFolder": {
                        "type": "String",
                        "defaultValue": "In"
                    }
                },
                "folder": {
                    "name": "Excel"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/BINARY_FILESERVER')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/datasets/SRC_EXCEL')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_CSV')]",
                "[concat(variables('factoryId'), '/pipelines/04-DL-Load-Raw-to-Delta-Table')]",
                "[concat(variables('factoryId'), '/pipelines/util-datalake-move-file')]",
                "[concat(variables('factoryId'), '/pipelines/util-download-schema-file')]",
                "[concat(variables('factoryId'), '/pipelines/util-fileserver-download-file')]",
                "[concat(variables('factoryId'), '/pipelines/util-fileserver-delete-file')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-Text-Source-Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get File Metadata",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "Set-FileSharePassword",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-FileShareUserID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-FileShareURL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-SourceFolder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "BINARY_FILESERVER",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FileShareUserID": {
                                        "value": "@variables('FileShareUserID')",
                                        "type": "Expression"
                                    },
                                    "Folder": {
                                        "value": "@variables('SourceFolder')",
                                        "type": "Expression"
                                    },
                                    "File": {
                                        "value": "@toLower('')",
                                        "type": "Expression"
                                    },
                                    "FileShareURL": {
                                        "value": "@variables('FileShareURL')",
                                        "type": "Expression"
                                    },
                                    "FileSharePassword": {
                                        "value": "@variables('FileSharePassword')",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "FileServerReadSettings",
                                "recursive": true
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "Log Text Load Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Loop-All-Files",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Loop-All-Files",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get File Metadata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get File Metadata').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "If File Exists",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-FileName",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(\nstartswith(item().name, pipeline().parameters.TaskDetails.Command)\n,equals(item().type,'File')\n)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Get Full File Name",
                                                "type": "Lookup",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "AzureSqlSource",
                                                        "sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
                                                        "storedProcedureParameters": {
                                                            "DeltaExtract": {
                                                                "type": "Boolean",
                                                                "value": {
                                                                    "value": "@pipeline().parameters.TaskDetails.DeltaExtract",
                                                                    "type": "Expression"
                                                                }
                                                            },
                                                            "FileName": {
                                                                "type": "String",
                                                                "value": {
                                                                    "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                                                    "type": "Expression"
                                                                }
                                                            },
                                                            "FolderName": {
                                                                "type": "String",
                                                                "value": {
                                                                    "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                                                    "type": "Expression"
                                                                }
                                                            },
                                                            "Grain": {
                                                                "type": "String",
                                                                "value": {
                                                                    "value": "@pipeline().parameters.TaskDetails.ObjectGrain",
                                                                    "type": "Expression"
                                                                }
                                                            },
                                                            "Compressed": {
                                                                "type": "Boolean",
                                                                "value": {
                                                                    "value": "false",
                                                                    "type": "Expression"
                                                                }
                                                            },
                                                            "TargetType": {
                                                                "type": "String",
                                                                "value": {
                                                                    "value": "@pipeline().parameters.TaskDetails.TargetType",
                                                                    "type": "Expression"
                                                                }
                                                            }
                                                        },
                                                        "partitionOption": "None"
                                                    },
                                                    "dataset": {
                                                        "referenceName": "AzureSqlDatabase_Ctrldb",
                                                        "type": "DatasetReference",
                                                        "parameters": {}
                                                    },
                                                    "firstRowOnly": true
                                                }
                                            },
                                            {
                                                "name": "Copy Text File",
                                                "type": "Copy",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Get Full File Name",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    {
                                                        "activity": "EP-Download-File",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    {
                                                        "activity": "EP-Download-Schema",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    {
                                                        "activity": "Set-FileEncoding",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    {
                                                        "activity": "Set-ColumnDelim",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "source": {
                                                        "type": "DelimitedTextSource",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageReadSettings",
                                                            "recursive": true
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextReadSettings"
                                                        }
                                                    },
                                                    "sink": {
                                                        "type": "DelimitedTextSink",
                                                        "storeSettings": {
                                                            "type": "AzureBlobStorageWriteSettings"
                                                        },
                                                        "formatSettings": {
                                                            "type": "DelimitedTextWriteSettings",
                                                            "quoteAllText": true,
                                                            "fileExtension": ".txt"
                                                        }
                                                    },
                                                    "enableStaging": false
                                                },
                                                "inputs": [
                                                    {
                                                        "referenceName": "SRC_TEXT_FILE",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "FileName": {
                                                                "value": "@variables('FileName')",
                                                                "type": "Expression"
                                                            },
                                                            "FileEncoding": {
                                                                "value": "@variables('FileEncoding')",
                                                                "type": "Expression"
                                                            },
                                                            "Container": {
                                                                "value": "@variables('StageContainer')",
                                                                "type": "Expression"
                                                            },
                                                            "Folder": {
                                                                "value": "@variables('StageFolder')",
                                                                "type": "Expression"
                                                            },
                                                            "ColumnDelim": {
                                                                "value": "@variables('ColumnDelim')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "outputs": [
                                                    {
                                                        "referenceName": "RAW_ADLS_CSV",
                                                        "type": "DatasetReference",
                                                        "parameters": {
                                                            "BlobPath": {
                                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                                "type": "Expression"
                                                            },
                                                            "BlobName": {
                                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                                "type": "Expression"
                                                            },
                                                            "Compression": "none"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "Log Notebook Failure",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Execute-DB-Load-Delta-Table",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                                    "storedProcedureParameters": {
                                                        "BatchLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "ErrorMessage": {
                                                            "value": {
                                                                "value": "Databricks Error has occured",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ExecutionLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "Output": {
                                                            "value": null,
                                                            "type": "String"
                                                        },
                                                        "Status": {
                                                            "value": "Failure",
                                                            "type": "String"
                                                        },
                                                        "TaskId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "kvSecret": "AzureSqlDatabase-ControlDB"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log Copy Failure",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy Text File",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                                    "storedProcedureParameters": {
                                                        "BatchLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "ErrorMessage": {
                                                            "value": {
                                                                "value": "File Copy Error",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ExecutionLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "Output": {
                                                            "value": null,
                                                            "type": "String"
                                                        },
                                                        "Status": {
                                                            "value": "Failure",
                                                            "type": "String"
                                                        },
                                                        "TaskId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "kvSecret": "AzureSqlDatabase-ControlDB"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SP-Record-Manifest",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Copy Text File",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[CTL].[CreateManifestRecord]",
                                                    "storedProcedureParameters": {
                                                        "BatchExecutionLogID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "Container": {
                                                            "value": "raw",
                                                            "type": "String"
                                                        },
                                                        "EndCounter": {
                                                            "value": {
                                                                "value": "0",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "FileName": {
                                                            "value": {
                                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "FolderName": {
                                                            "value": {
                                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "Records": {
                                                            "value": {
                                                                "value": "@activity('Copy Text File').output.rowsCopied",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "SourceObject": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "StartCounter": {
                                                            "value": {
                                                                "value": "@convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time', 's')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "TaskExecutionLogID": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "DeltaColumn": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "PipelineRunID": {
                                                            "value": {
                                                                "value": "@pipeline().RunId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "kvSecret": "AzureSqlDatabase-ControlDB"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log Manifest Failure",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "SP-Record-Manifest",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                                    "storedProcedureParameters": {
                                                        "BatchLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "ErrorMessage": {
                                                            "value": {
                                                                "value": "Databricks Error has occured",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ExecutionLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "Output": {
                                                            "value": null,
                                                            "type": "String"
                                                        },
                                                        "Status": {
                                                            "value": "Failure",
                                                            "type": "String"
                                                        },
                                                        "TaskId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "kvSecret": "AzureSqlDatabase-ControlDB"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log Archive Failure",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "EP-Archive-File",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                                    "storedProcedureParameters": {
                                                        "BatchLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "ErrorMessage": {
                                                            "value": {
                                                                "value": "File Archive Error has occured",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ExecutionLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "Output": {
                                                            "value": null,
                                                            "type": "String"
                                                        },
                                                        "Status": {
                                                            "value": "Failure",
                                                            "type": "String"
                                                        },
                                                        "TaskId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "kvSecret": "AzureSqlDatabase-ControlDB"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Execute-DB-Load-Delta-Table",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [
                                                    {
                                                        "activity": "SP-Record-Manifest",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "04-DL-Load-Raw-to-Delta-Table",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@pipeline().parameters.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@pipeline().parameters.TaskExecutionLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@pipeline().parameters.TaskDetails",
                                                            "type": "Expression"
                                                        },
                                                        "TargetBLOBFolder": {
                                                            "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                            "type": "Expression"
                                                        },
                                                        "TargetBLOBName": {
                                                            "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "EP-Archive-File",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Execute-DB-Load-Delta-Table",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "util-datalake-move-file",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "SourceFolder": {
                                                            "value": "@variables('StageFolder')",
                                                            "type": "Expression"
                                                        },
                                                        "SourceFile": {
                                                            "value": "@variables('FileName')",
                                                            "type": "Expression"
                                                        },
                                                        "SourceContainer": {
                                                            "value": "@variables('StageContainer')",
                                                            "type": "Expression"
                                                        },
                                                        "TargetContainer": "raw",
                                                        "DeleteFile": true,
                                                        "TargetFolder": {
                                                            "value": "@replace(activity('Get Full File Name').output.firstRow.StorageFolder, 'csv', 'archive')",
                                                            "type": "Expression"
                                                        },
                                                        "TargetFile": {
                                                            "value": "@activity('Get Full File Name').output.firstRow.StorageFile",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "EP-Download-Schema",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "util-download-schema-file",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "TaskDetails": {
                                                            "value": "@pipeline().parameters.TaskDetails",
                                                            "type": "Expression"
                                                        },
                                                        "FileShareURL": {
                                                            "value": "@variables('FileShareURL')",
                                                            "type": "Expression"
                                                        },
                                                        "FileShareUserID": {
                                                            "value": "@variables('FileShareUserID')",
                                                            "type": "Expression"
                                                        },
                                                        "FileSharePassword": {
                                                            "value": "@variables('FileSharePassword')",
                                                            "type": "Expression"
                                                        },
                                                        "SourceFolder": {
                                                            "value": "@variables('SourceFolder')",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "EP-Download-File",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "util-fileserver-download-file",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "TargetFolder": {
                                                            "value": "@variables('StageFolder')",
                                                            "type": "Expression"
                                                        },
                                                        "TargetContainer": {
                                                            "value": "@variables('StageContainer')",
                                                            "type": "Expression"
                                                        },
                                                        "DeleteFile": false,
                                                        "SourceFile": {
                                                            "value": "@variables('FileName')",
                                                            "type": "Expression"
                                                        },
                                                        "TargetFile": {
                                                            "value": "@variables('FileName')",
                                                            "type": "Expression"
                                                        },
                                                        "SourceFolder": {
                                                            "value": "@variables('SourceFolder')",
                                                            "type": "Expression"
                                                        },
                                                        "FileShareURL": {
                                                            "value": "@variables('FileShareURL')",
                                                            "type": "Expression"
                                                        },
                                                        "FileShareUserID": {
                                                            "value": "@variables('FileShareUserID')",
                                                            "type": "Expression"
                                                        },
                                                        "FileSharePassword": {
                                                            "value": "@variables('FileSharePassword')",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "EP-Delete-Source",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Execute-DB-Load-Delta-Table",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "util-fileserver-delete-file",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "SourceFile": {
                                                            "value": "@variables('FileName')",
                                                            "type": "Expression"
                                                        },
                                                        "SourceFolder": {
                                                            "value": "@variables('SourceFolder')",
                                                            "type": "Expression"
                                                        },
                                                        "FileShareURL": {
                                                            "value": "@variables('FileShareURL')",
                                                            "type": "Expression"
                                                        },
                                                        "FileShareUserID": {
                                                            "value": "@variables('FileShareUserID')",
                                                            "type": "Expression"
                                                        },
                                                        "FileSharePassword": {
                                                            "value": "@variables('FileSharePassword')",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log Delete Source Failure",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "EP-Delete-Source",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                                    "storedProcedureParameters": {
                                                        "BatchLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "ErrorMessage": {
                                                            "value": {
                                                                "value": "Source File Delete Error has occured",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ExecutionLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "Output": {
                                                            "value": null,
                                                            "type": "String"
                                                        },
                                                        "Status": {
                                                            "value": "Failure",
                                                            "type": "String"
                                                        },
                                                        "TaskId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "kvSecret": "AzureSqlDatabase-ControlDB"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log File Download Error",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "EP-Download-File",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                                    "storedProcedureParameters": {
                                                        "BatchLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "ErrorMessage": {
                                                            "value": {
                                                                "value": "Error Downloading File",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ExecutionLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "Output": {
                                                            "value": null,
                                                            "type": "String"
                                                        },
                                                        "Status": {
                                                            "value": "Failure",
                                                            "type": "String"
                                                        },
                                                        "TaskId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "kvSecret": "AzureSqlDatabase-ControlDB"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log Schema Download Error",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "EP-Download-Schema",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                                    "storedProcedureParameters": {
                                                        "BatchLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.BatchLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "ErrorMessage": {
                                                            "value": {
                                                                "value": "Error Downloading Schema File",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ExecutionLogId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "Output": {
                                                            "value": null,
                                                            "type": "String"
                                                        },
                                                        "Status": {
                                                            "value": "Failure",
                                                            "type": "String"
                                                        },
                                                        "TaskId": {
                                                            "value": {
                                                                "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "kvSecret": "AzureSqlDatabase-ControlDB"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Set-ColumnDelim",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Set-Prop-Length",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "ColumnDelim",
                                                    "value": {
                                                        "value": "@if(\n\tequals(variables('PropArray')[0], '')\n\t,','\n\t,variables('PropArray')[0]\n)\n",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Set-FileEncoding",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Set-Prop-Length",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "FileEncoding",
                                                    "value": {
                                                        "value": "@if(\n\tgreaterOrEquals(int(variables('PropLength')) , 2)\n\t,variables('PropArray')[1]\n\t,'UTF-8'\n)\n",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Set-Properties",
                                                "type": "SetVariable",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "PropArray",
                                                    "value": {
                                                        "value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty,'--')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Set-Prop-Length",
                                                "type": "SetVariable",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Set-Properties",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "PropLength",
                                                    "value": {
                                                        "value": "@string(length(variables('PropArray')))",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "SET-FileName",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "FileName",
                                        "value": {
                                            "value": "@item().name",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set-FileShareURL",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileShareURL",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[0]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-FileShareUserID",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileShareUserID",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[1]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-FileSharePassword",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "FileSharePassword",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[2]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-SourceFolder",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "SourceFolder",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[3]",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "TaskDetails": {
                        "type": "object",
                        "defaultValue": {
                            "Command": "taleo_1_requisition_master",
                            "SourceType": "Flat File",
                            "SourceServer": "",
                            "SourceName": "taleo_requisition_master",
                            "SourceLocation": "requisition_master",
                            "AdditionalProperty": "",
                            "Processor": "databricks-token|1028-231358-piles213|Standard_DS3_v2|6.4.x-scala2.11|2:8|interactive",
                            "IsAuditTable": false,
                            "SoftDeleteSource": "",
                            "ProjectName": "ONDEMAND",
                            "TargetType": "BLOB Storage (csv)",
                            "TargetName": "taleo_requisition_master",
                            "TargetLocation": "taleo/requisition_master",
                            "TargetServer": "datalake-SasToken",
                            "DataLoadMode": "TRUNCATE-LOAD",
                            "DeltaExtract": false,
                            "CDCSource": false,
                            "TruncateTarget": true,
                            "UpsertTarget": false,
                            "TrackChanges": false,
                            "LoadToSqlEDW": true,
                            "TaskName": "taleo_requisition_master",
                            "ControlStageId": 1,
                            "TaskId": 1146,
                            "StageSequence": 100,
                            "StageName": "Source to Raw",
                            "SourceId": 1184,
                            "TargetId": 1163,
                            "ObjectGrain": "Day",
                            "CommandTypeId": 5,
                            "Watermarks": null,
                            "WatermarksDT": null,
                            "WatermarkColumn": "",
                            "BusinessKeyColumn": "",
                            "LastLoadedFile": null
                        }
                    },
                    "TaskExecutionLogId": {
                        "type": "int",
                        "defaultValue": 0
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "FileEncoding": {
                        "type": "String"
                    },
                    "StageContainer": {
                        "type": "String",
                        "defaultValue": "external"
                    },
                    "StageFolder": {
                        "type": "String",
                        "defaultValue": "stage"
                    },
                    "ColumnDelim": {
                        "type": "String"
                    },
                    "PropArray": {
                        "type": "Array"
                    },
                    "PropLength": {
                        "type": "String"
                    },
                    "FileName": {
                        "type": "String"
                    },
                    "FileShareURL": {
                        "type": "String"
                    },
                    "FileShareUserID": {
                        "type": "String"
                    },
                    "FileSharePassword": {
                        "type": "String"
                    },
                    "SourceFolder": {
                        "type": "String",
                        "defaultValue": "In"
                    }
                },
                "folder": {
                    "name": "Text"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/BINARY_FILESERVER')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/datasets/SRC_TEXT_FILE')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_CSV')]",
                "[concat(variables('factoryId'), '/pipelines/04-DL-Load-Raw-to-Delta-Table')]",
                "[concat(variables('factoryId'), '/pipelines/util-datalake-move-file')]",
                "[concat(variables('factoryId'), '/pipelines/util-download-schema-file')]",
                "[concat(variables('factoryId'), '/pipelines/util-fileserver-download-file')]",
                "[concat(variables('factoryId'), '/pipelines/util-fileserver-delete-file')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-MySQL-B-Source-Copy')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy-Source-DataLake",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "MySqlSource",
                                "query": {
                                    "value": "@pipeline().parameters.SourceSQL",
                                    "type": "Expression"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_MySQL",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_JSON",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@pipeline().parameters.TargetBLOBFolder",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@pipeline().parameters.TargetBLOBName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "If-RecordCount",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Copy-Source-DataLake",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('Copy-Source-DataLake').output.rowsCopied, 0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "SP-Record-Manifest",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[CreateManifestRecord]",
                                        "storedProcedureParameters": {
                                            "BatchExecutionLogID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Container": {
                                                "value": "raw",
                                                "type": "String"
                                            },
                                            "EndCounter": {
                                                "value": {
                                                    "value": "@pipeline().parameters.EndCounter",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FileName": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TargetBLOBName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FolderName": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TargetBLOBFolder",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "Records": {
                                                "value": {
                                                    "value": "@string(activity('Copy-Source-DataLake').output.rowsCopied)",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "SourceObject": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartCounter": {
                                                "value": {
                                                    "value": "@pipeline().parameters.StartCounter",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "TaskExecutionLogID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "DeltaColumn": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Execute-DB-Load-Delta-Table",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Record-Manifest",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-DL-Load-Raw-to-Delta-Table",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@pipeline().parameters.TargetBLOBFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@pipeline().parameters.TargetBLOBName",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "EP-Record-Validation",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Execute-DB-Load-Delta-Table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "recon-record-validation",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@pipeline().parameters.ValidationDetails",
                                                "type": "Expression"
                                            },
                                            "SourceID": {
                                                "value": "@pipeline().parameters.TaskDetails.SourceID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "securestring"
                    },
                    "SourceSQL": {
                        "type": "string"
                    },
                    "TargetBLOBFolder": {
                        "type": "string"
                    },
                    "TargetBLOBName": {
                        "type": "string"
                    },
                    "StartCounter": {
                        "type": "string"
                    },
                    "EndCounter": {
                        "type": "string"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    },
                    "ValidationDetails": {
                        "type": "object"
                    }
                },
                "folder": {
                    "name": "MySQL"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SRC_MySQL')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_JSON')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/04-DL-Load-Raw-to-Delta-Table')]",
                "[concat(variables('factoryId'), '/pipelines/recon-record-validation')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-ODataAADSP-Source-Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Log Text Load Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute-DB-Load-Delta-Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Copy OData Source",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ODataSource",
                                "httpRequestTimeout": "00:05:00"
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "RAW_ODATA_AADSP_JSON",
                                "type": "DatasetReference",
                                "parameters": {
                                    "UserName": {
                                        "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[0]",
                                        "type": "Expression"
                                    },
                                    "Password": {
                                        "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[1]",
                                        "type": "Expression"
                                    },
                                    "BaseUrl": {
                                        "value": "@pipeline().parameters.TaskDetails.Command",
                                        "type": "Expression"
                                    },
                                    "Table": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_JSON",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Log Copy Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy OData Source",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "API Copy Error",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "SP-Record-Manifest",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy OData Source",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[CreateManifestRecord]",
                            "storedProcedureParameters": {
                                "BatchExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Container": {
                                    "value": "raw",
                                    "type": "String"
                                },
                                "EndCounter": {
                                    "value": {
                                        "value": "0",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "FileName": {
                                    "value": {
                                        "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "FolderName": {
                                    "value": {
                                        "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Records": {
                                    "value": {
                                        "value": "@activity('Copy OData Source').output.rowsCopied",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "SourceObject": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "StartCounter": {
                                    "value": {
                                        "value": "0",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TaskExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "DeltaColumn": {
                                    "value": null,
                                    "type": "String"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Log Manifest Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP-Record-Manifest",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Databricks Error has occured",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Execute-DB-Load-Delta-Table",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "SP-Record-Manifest",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "EP-Download-Schema-File",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "04-DL-Load-Raw-to-Delta-Table",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "BatchLogId": {
                                    "value": "@pipeline().parameters.BatchLogId",
                                    "type": "Expression"
                                },
                                "TaskExecutionLogId": {
                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                    "type": "Expression"
                                },
                                "TaskDetails": {
                                    "value": "@pipeline().parameters.TaskDetails",
                                    "type": "Expression"
                                },
                                "TargetBLOBFolder": {
                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                    "type": "Expression"
                                },
                                "TargetBLOBName": {
                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                    "type": "Expression"
                                },
                                "ProjectRunID": {
                                    "value": "@pipeline().parameters.ProjectRunID",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get Full File Name",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
                                "storedProcedureParameters": {
                                    "DeltaExtract": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.DeltaExtract",
                                            "type": "Expression"
                                        }
                                    },
                                    "FileName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "FolderName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "Grain": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.ObjectGrain",
                                            "type": "Expression"
                                        }
                                    },
                                    "Compressed": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "true",
                                            "type": "Expression"
                                        }
                                    },
                                    "TargetType": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetType",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Log DataBricks Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute-DB-Load-Delta-Table",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Databricks Error",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "EP-Download-Schema-File",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "util-download-schema-file-from-default",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TaskDetails": {
                                    "value": "@pipeline().parameters.TaskDetails",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Log File Download Error",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "EP-Download-Schema-File",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Error Downloading File",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "int"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "OutputFileName": {
                        "type": "String"
                    },
                    "DeltaSQL": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "API"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:09Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ODATA_AADSP_JSON')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_JSON')]",
                "[concat(variables('factoryId'), '/pipelines/04-DL-Load-Raw-to-Delta-Table')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/util-download-schema-file-from-default')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-REST-IRTAFE-Source-Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Check Delta Load",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.TaskDetails.DeltaExtract,true)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Log Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Full",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Log Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Full",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "Some error occured",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "EP-SQL-Copy-Full",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-SQLServer-B-Source-Copy",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "SourceSQL": {
                                                "value": "@pipeline().parameters.TaskDetails.Command",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                "type": "Expression"
                                            },
                                            "StartCounter": "0",
                                            "EndCounter": "0"
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Task Log Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy-API-Raw",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Watermark Task Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Update-Watermark",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Watermark Task Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Update-Watermark",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "SP-Update-Watermark",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Execute-DB-Load-Delta-Table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[updateWatermarks]",
                                        "storedProcedureParameters": {
                                            "SourceId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Watermark": {
                                                "value": {
                                                    "value": "@variables('CurrentTime')",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Copy-API-Raw",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-RelativeURL",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "LU-API-Params",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:05:00",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "AbsoluteUrl": {
                                                    "value": "@variables('PropNextTag')",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "value": "@json(activity('LU-API-Params').output.firstRow.MappingInfo)",
                                            "type": "Expression"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "RAW_REST_IRTAFE_Basic",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "BaesUrl": {
                                                    "value": "@pipeline().parameters.TaskDetails.Command",
                                                    "type": "Expression"
                                                },
                                                "UserName": {
                                                    "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[0]",
                                                    "type": "Expression"
                                                },
                                                "SecretKey": {
                                                    "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[1]",
                                                    "type": "Expression"
                                                },
                                                "RelativeURL": {
                                                    "value": "@variables('RelativeURL')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "RAW_ADLS_JSON",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "BlobPath": {
                                                    "value": "@activity('Get Full File Name').output.firstRow.StorageFolder",
                                                    "type": "Expression"
                                                },
                                                "BlobName": {
                                                    "value": "@activity('Get Full File Name').output.firstRow.StorageFile",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "SP-Record-Manifest",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy-API-Raw",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[CreateManifestRecord]",
                                        "storedProcedureParameters": {
                                            "BatchExecutionLogID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Container": {
                                                "value": "raw",
                                                "type": "String"
                                            },
                                            "EndCounter": {
                                                "value": {
                                                    "value": "@variables('CurrentTime')",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FileName": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstRow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FolderName": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstRow.StorageFolder",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "Records": {
                                                "value": {
                                                    "value": "@activity('Copy-API-Raw').output.rowsCopied",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "SourceObject": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartCounter": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.Watermarks",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "TaskExecutionLogID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "DeltaColumn": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Execute-DB-Load-Delta-Table",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Record-Manifest",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "EP-Download-Schema-File",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-DL-Load-Raw-to-Delta-Table",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@activity('Get Full File Name').output.firstRow.StorageFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@activity('Get Full File Name').output.firstRow.StorageFile",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SET-RelativeURL",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Prop-NextTag",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "SET-Prop-FieldStart",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "SET-Prop-FieldEnd",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "SET-Prop-QSStatic",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "SET-CurrentTime",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "RelativeURL",
                                        "value": {
                                            "value": "@concat(\n  pipeline().parameters.TaskDetails.SourceLocation,\n  '/',\n  '?',\n  variables('PropQSStatic'), '&',\n  variables('PropQSFieldStart'), '=', formatDateTime(pipeline().parameters.TaskDetails.WaterMarks,variables('PropTSFormat')), '&',\n  variables('PropQSFieldEnd'), '=', variables('CurrentTime'), '&'\n)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "LU-API-Params",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderStoredProcedureName": "[[CTL].[GetAPIParams]",
                                            "storedProcedureParameters": {
                                                "SourceId": {
                                                    "type": "Int64",
                                                    "value": {
                                                        "value": "@pipeline().parameters.TaskDetails.SourceId",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "queryTimeout": "02:00:00",
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSqlDatabase_Ctrldb",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "Log Manifest Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Record-Manifest",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "Databricks Error has occured",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-CurrentTime",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Pro-TSFormat",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "SET-Pro-TimeZone",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "CurrentTime",
                                        "value": {
                                            "value": "@formatDateTime(convertFromUtc(utcNow('o'), variables('PropTimeZone')), variables('PropTSFormat'))",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Prop-NextTag",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "PropNextTag",
                                        "value": {
                                            "value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty, '|')[2]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Prop-FieldStart",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "PropQSFieldStart",
                                        "value": {
                                            "value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty, '|')[4]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Prop-FieldEnd",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "PropQSFieldEnd",
                                        "value": {
                                            "value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty, '|')[5]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Pro-TSFormat",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "PropTSFormat",
                                        "value": {
                                            "value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty, '|')[6]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Prop-QSStatic",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "PropQSStatic",
                                        "value": {
                                            "value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty, '|')[3]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Pro-TimeZone",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "PropTimeZone",
                                        "value": {
                                            "value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty, '|')[7]",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Task Relative URL Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-RelativeURL",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred while setting Relative URL",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Task API Params",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "LU-API-Params",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred while getting API Params",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "EP-Download-Schema-File",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "util-download-schema-file-from-default",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Log File Download Error",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-Download-Schema-File",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "Error Downloading File",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Full File Name",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
                                "storedProcedureParameters": {
                                    "DeltaExtract": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.DeltaExtract",
                                            "type": "Expression"
                                        }
                                    },
                                    "FileName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "FolderName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "Grain": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.ObjectGrain",
                                            "type": "Expression"
                                        }
                                    },
                                    "Compressed": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "true",
                                            "type": "Expression"
                                        }
                                    },
                                    "TargetType": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetType",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int",
                        "defaultValue": 1
                    },
                    "TaskDetails": {
                        "type": "object",
                        "defaultValue": {
                            "SourceType": "API-TAFE",
                            "SourceServer": "API-VCPrexip-UserID|API-VCPrexip-Password",
                            "SourceName": "VCPrexip_participant",
                            "SourceLocation": "participant",
                            "AdditionalProperty": "av_id,bandwidth,call_direction,call_quality,call_uuid,conference,conference_name,conversation_id,disconnect_reason,display_name,duration,encryption,end_time,has_media,id,is_streaming,license_count,license_type,local_alias,media_node,parent_id,presentation_id,protocol,proxy_node,remote_address,remote_alias,remote_port,resource_uri,role,service_tag,service_type,signalling_node,start_time,system_location,vendor|$.objects|$.meta.next|limit=100000|end_time__gte|end_time__lt|yyyy-MM-ddTHH:mm:ss",
                            "Processor": "databricks-token|0708-233111-note225|Standard_DS3_v2|6.4.x-scala2.11|2:8",
                            "ProjectName": "ONDEMAND",
                            "TargetType": "BLOB Storage (json)",
                            "TargetName": "VCPrexip_participant",
                            "TargetLocation": "VCPrexip/participant",
                            "TargetServer": "datalake-SasToken",
                            "TargetDBSchema": null,
                            "DataLoadMode": "INCREMENTAL",
                            "DeltaExtract": true,
                            "CDCSource": false,
                            "TruncateTarget": false,
                            "UpsertTarget": true,
                            "TrackChanges": false,
                            "LoadToSqlEDW": true,
                            "TaskName": "VCPrexip_participant",
                            "ControlStageId": 1,
                            "TaskId": 584,
                            "StageSequence": 100,
                            "StageName": "Source to Raw",
                            "SourceId": 622,
                            "TargetId": 601,
                            "ObjectGrain": "Day",
                            "CommandTypeId": 14,
                            "Watermarks": "2020-09-11T16:28:50Z",
                            "WatermarksDT": "2020-09-11T16:28:50Z",
                            "WatermarkColumn": "end_time",
                            "BusinessKeyColumn": "id",
                            "Command": "https://manage.vc.tafensw.edu.au/api/admin/history/v1",
                            "LastLoadedFile": null
                        }
                    },
                    "TaskExecutionLogId": {
                        "type": "int",
                        "defaultValue": 1
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "RelativeURL": {
                        "type": "String"
                    },
                    "CurrentTime": {
                        "type": "String"
                    },
                    "PropNextTag": {
                        "type": "String"
                    },
                    "PropQSFieldStart": {
                        "type": "String"
                    },
                    "PropQSFieldEnd": {
                        "type": "String"
                    },
                    "PropTSFormat": {
                        "type": "String"
                    },
                    "PropQSStatic": {
                        "type": "String"
                    },
                    "PropTimeZone": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "API"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:09Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/04-SQLServer-B-Source-Copy')]",
                "[concat(variables('factoryId'), '/datasets/RAW_REST_IRTAFE_Basic')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_JSON')]",
                "[concat(variables('factoryId'), '/pipelines/04-DL-Load-Raw-to-Delta-Table')]",
                "[concat(variables('factoryId'), '/pipelines/util-download-schema-file-from-default')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-Oracle-B-Source-Copy')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy-Source-DataLake",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "OracleSource",
                                "oracleReaderQuery": {
                                    "value": "@pipeline().parameters.SourceSQL",
                                    "type": "Expression"
                                },
                                "partitionOption": "None",
                                "queryTimeout": "10:00:00"
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_Oracle",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": "@pipeline().parameters.TaskDetails.SourceServer"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_JSON",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@pipeline().parameters.TargetBLOBFolder",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@pipeline().parameters.TargetBLOBName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "If-RecordCount",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Copy-Source-DataLake",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('Copy-Source-DataLake').output.rowsCopied, 0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "SP-Record-Manifest",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[CreateManifestRecord]",
                                        "storedProcedureParameters": {
                                            "BatchExecutionLogID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Container": {
                                                "value": "raw",
                                                "type": "String"
                                            },
                                            "EndCounter": {
                                                "value": {
                                                    "value": "@json(string(pipeline().parameters.ValidationDetails)).ReturnValue",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FileName": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TargetBLOBName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FolderName": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TargetBLOBFolder",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "Records": {
                                                "value": {
                                                    "value": "@string(activity('Copy-Source-DataLake').output.rowsCopied)",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "SourceObject": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartCounter": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.Watermarks",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "TaskExecutionLogID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "DeltaColumn": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Execute-DB-Load-Delta-Table",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Record-Manifest",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-DL-Load-Raw-to-Delta-Table",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@pipeline().parameters.TargetBLOBFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@pipeline().parameters.TargetBLOBName",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "EP-Record-Validation",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Execute-DB-Load-Delta-Table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "recon-record-validation",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@pipeline().parameters.ValidationDetails",
                                                "type": "Expression"
                                            },
                                            "SourceID": {
                                                "value": "@pipeline().parameters.TaskDetails.SourceID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "securestring"
                    },
                    "SourceSQL": {
                        "type": "string"
                    },
                    "TargetBLOBFolder": {
                        "type": "string"
                    },
                    "TargetBLOBName": {
                        "type": "string"
                    },
                    "ValidationDetails": {
                        "type": "object"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Oracle"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SRC_Oracle')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_JSON')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/04-DL-Load-Raw-to-Delta-Table')]",
                "[concat(variables('factoryId'), '/pipelines/recon-record-validation')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-SharePoint-Source-Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Log Text Load Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute-DB-Load-Delta-Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Copy SharePoint Source",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SharePointOnlineListSource",
                                "httpRequestTimeout": "00:05:00"
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "RAW_SHAREPOINT_JSON",
                                "type": "DatasetReference",
                                "parameters": {
                                    "AppID": {
                                        "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[0]",
                                        "type": "Expression"
                                    },
                                    "AppSecret": {
                                        "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[1]",
                                        "type": "Expression"
                                    },
                                    "SiteURL": {
                                        "value": "@pipeline().parameters.TaskDetails.Command",
                                        "type": "Expression"
                                    },
                                    "ListName": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_JSON",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Log Copy Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy SharePoint Source",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "API Copy Error",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "SP-Record-Manifest",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy SharePoint Source",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[CreateManifestRecord]",
                            "storedProcedureParameters": {
                                "BatchExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Container": {
                                    "value": "raw",
                                    "type": "String"
                                },
                                "EndCounter": {
                                    "value": {
                                        "value": "0",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "FileName": {
                                    "value": {
                                        "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "FolderName": {
                                    "value": {
                                        "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Records": {
                                    "value": {
                                        "value": "@activity('Copy SharePoint Source').output.rowsCopied",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "SourceObject": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "StartCounter": {
                                    "value": {
                                        "value": "0",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TaskExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "DeltaColumn": {
                                    "value": null,
                                    "type": "String"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Log Manifest Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP-Record-Manifest",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Databricks Error has occured",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Execute-DB-Load-Delta-Table",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "SP-Record-Manifest",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "EP-Download-Schema-File",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "04-DL-Load-Raw-to-Delta-Table",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "BatchLogId": {
                                    "value": "@pipeline().parameters.BatchLogId",
                                    "type": "Expression"
                                },
                                "TaskExecutionLogId": {
                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                    "type": "Expression"
                                },
                                "TaskDetails": {
                                    "value": "@pipeline().parameters.TaskDetails",
                                    "type": "Expression"
                                },
                                "TargetBLOBFolder": {
                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                    "type": "Expression"
                                },
                                "TargetBLOBName": {
                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                    "type": "Expression"
                                },
                                "ProjectRunID": {
                                    "value": "@pipeline().parameters.ProjectRunID",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get Full File Name",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
                                "storedProcedureParameters": {
                                    "DeltaExtract": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.DeltaExtract",
                                            "type": "Expression"
                                        }
                                    },
                                    "FileName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "FolderName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "Grain": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.ObjectGrain",
                                            "type": "Expression"
                                        }
                                    },
                                    "Compressed": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "true",
                                            "type": "Expression"
                                        }
                                    },
                                    "TargetType": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetType",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Log DataBricks Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute-DB-Load-Delta-Table",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Databricks Error",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "EP-Download-Schema-File",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "util-download-schema-file-from-default",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TaskDetails": {
                                    "value": "@pipeline().parameters.TaskDetails",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Log File Download Error",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "EP-Download-Schema-File",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Error Downloading File",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "int"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "OutputFileName": {
                        "type": "String"
                    },
                    "DeltaSQL": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "SharePoint"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:09Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/datasets/RAW_SHAREPOINT_JSON')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_JSON')]",
                "[concat(variables('factoryId'), '/pipelines/04-DL-Load-Raw-to-Delta-Table')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/util-download-schema-file-from-default')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-ODataBasic-Source-Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Log Text Load Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute-DB-Load-Delta-Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Success",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Copy OData Source",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ODataSource",
                                "httpRequestTimeout": "00:05:00"
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "RAW_ODATA_BASIC_JSON",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Username": {
                                        "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[0]",
                                        "type": "Expression"
                                    },
                                    "Password": {
                                        "value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[1]",
                                        "type": "Expression"
                                    },
                                    "BaseUrl": {
                                        "value": "@pipeline().parameters.TaskDetails.Command",
                                        "type": "Expression"
                                    },
                                    "Table": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_JSON",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Log Copy Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy OData Source",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "API Copy Error",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "SP-Record-Manifest",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Copy OData Source",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[CreateManifestRecord]",
                            "storedProcedureParameters": {
                                "BatchExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Container": {
                                    "value": "raw",
                                    "type": "String"
                                },
                                "EndCounter": {
                                    "value": {
                                        "value": "0",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "FileName": {
                                    "value": {
                                        "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "FolderName": {
                                    "value": {
                                        "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Records": {
                                    "value": {
                                        "value": "@activity('Copy OData Source').output.rowsCopied",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "SourceObject": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "StartCounter": {
                                    "value": {
                                        "value": "0",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TaskExecutionLogID": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "DeltaColumn": {
                                    "value": null,
                                    "type": "String"
                                },
                                "PipelineRunID": {
                                    "value": {
                                        "value": "@pipeline().RunId",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Log Manifest Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP-Record-Manifest",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Databricks Error has occured",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Execute-DB-Load-Delta-Table",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "SP-Record-Manifest",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "EP-Download-Schema-File",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "04-DL-Load-Raw-to-Delta-Table",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "BatchLogId": {
                                    "value": "@pipeline().parameters.BatchLogId",
                                    "type": "Expression"
                                },
                                "TaskExecutionLogId": {
                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                    "type": "Expression"
                                },
                                "TaskDetails": {
                                    "value": "@pipeline().parameters.TaskDetails",
                                    "type": "Expression"
                                },
                                "TargetBLOBFolder": {
                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                    "type": "Expression"
                                },
                                "TargetBLOBName": {
                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                    "type": "Expression"
                                },
                                "ProjectRunID": {
                                    "value": "@pipeline().parameters.ProjectRunID",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get Full File Name",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
                                "storedProcedureParameters": {
                                    "DeltaExtract": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.DeltaExtract",
                                            "type": "Expression"
                                        }
                                    },
                                    "FileName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "FolderName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "Grain": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.ObjectGrain",
                                            "type": "Expression"
                                        }
                                    },
                                    "Compressed": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "true",
                                            "type": "Expression"
                                        }
                                    },
                                    "TargetType": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetType",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Log DataBricks Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute-DB-Load-Delta-Table",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Databricks Error",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "EP-Download-Schema-File",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "util-download-schema-file-from-default",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TaskDetails": {
                                    "value": "@pipeline().parameters.TaskDetails",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Log File Download Error",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "EP-Download-Schema-File",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "Error Downloading File",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "int"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "OutputFileName": {
                        "type": "String"
                    },
                    "DeltaSQL": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "API"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:09Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ODATA_BASIC_JSON')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_JSON')]",
                "[concat(variables('factoryId'), '/pipelines/04-DL-Load-Raw-to-Delta-Table')]",
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/util-download-schema-file-from-default')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-Oracle-Generate-Source-Schema')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Generate Schema",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Set-Owner",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-File",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-Folder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "OracleSource",
                                "oracleReaderQuery": {
                                    "value": "@replace(replace(variables('SQL'), '<<TABLE>>', variables('Table')), '<<OWNER>>', variables('Owner'))",
                                    "type": "Expression"
                                },
                                "partitionOption": "None",
                                "queryTimeout": "02:00:00"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_Oracle",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_Schema",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@variables('Folder')",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@variables('File')",
                                        "type": "Expression"
                                    },
                                    "Compression": "none",
                                    "ColumnDelim": ",",
                                    "HeaderRow": false
                                }
                            }
                        ]
                    },
                    {
                        "name": "Generate Schema Original",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Generate Schema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "OracleSource",
                                "oracleReaderQuery": {
                                    "value": "@replace(replace(variables('SQL-Original'), '<<TABLE>>', variables('Table')), '<<OWNER>>', variables('Owner'))",
                                    "type": "Expression"
                                },
                                "partitionOption": "None",
                                "queryTimeout": "02:00:00"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_Oracle",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_Schema",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@concat(variables('Folder'), '/original/')",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@concat(variables('File'), '.csv')",
                                        "type": "Expression"
                                    },
                                    "Compression": "none",
                                    "ColumnDelim": ",",
                                    "HeaderRow": true
                                }
                            }
                        ]
                    },
                    {
                        "name": "If-Empty-Delete",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Generate Schema Original",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('Generate Schema').output.rowsCopied, 0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Delete-Empty-File",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "BINARY_ADLS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "File": {
                                                    "value": "@variables('File')",
                                                    "type": "Expression"
                                                },
                                                "Container": "raw",
                                                "Folder": {
                                                    "value": "@variables('Folder')",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "logStorageSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "LS-AzureDataLake",
                                                "type": "LinkedServiceReference"
                                            },
                                            "path": "log"
                                        },
                                        "enableLogging": true,
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set-Folder",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Folder",
                            "value": {
                                "value": "@toLower(concat(pipeline().parameters.TaskDetails.SourceGroup, '//', 'schema'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-File",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "File",
                            "value": {
                                "value": "@toLower(concat(pipeline().parameters.TaskDetails.SourceName, '.', 'schema'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-Table",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Table",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceLocation,'.')[1]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-Owner",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Owner",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceLocation,'.')[0]",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object"
                    }
                },
                "variables": {
                    "Owner": {
                        "type": "String"
                    },
                    "Table": {
                        "type": "String"
                    },
                    "SQL": {
                        "type": "String",
                        "defaultValue": "SELECT column_name,         CASE           WHEN data_type = 'NUMBER' AND data_scale = 0 THEN 'double'           WHEN data_type = 'NUMBER' AND data_scale > 0 THEN 'double'           WHEN data_type = 'DATE' THEN 'timestamp'           ELSE 'string'         END                              AS fieldtype,         CASE           WHEN data_type = 'DATE' THEN 'DATETIME2'           ELSE data_type         END                              AS data_type,         Nvl(data_precision, data_length) PRECISION,         data_scale                       scale,         table_name                       table_name,         owner                            table_schema  FROM   all_tab_cols  WHERE  table_name = '<<TABLE>>'         AND owner = '<<OWNER>>'         AND hidden_column = 'NO'  \t   "
                    },
                    "SQL-Original": {
                        "type": "String",
                        "defaultValue": "SELECT * FROM all_tab_cols WHERE table_name = '<<TABLE>>' \tAND owner = '<<OWNER>>'"
                    },
                    "Folder": {
                        "type": "String"
                    },
                    "File": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Oracle"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SRC_Oracle')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_Schema')]",
                "[concat(variables('factoryId'), '/datasets/BINARY_ADLS')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDataLake')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-MySQL-Generate-Source-Schema')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Generate Schema",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Set-Folder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-File",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-Schema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "MySqlSource",
                                "query": {
                                    "value": "@replace(replace(variables('SQL'), '<<TABLE>>', variables('Table')), '<<SCHEMA>>', variables('Schema'))",
                                    "type": "Expression"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_MySQL",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_Schema",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@variables('Folder')",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@variables('File')",
                                        "type": "Expression"
                                    },
                                    "Compression": "none",
                                    "ColumnDelim": ",",
                                    "HeaderRow": false
                                }
                            }
                        ]
                    },
                    {
                        "name": "Generate Schema Original",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Generate Schema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "MySqlSource",
                                "query": {
                                    "value": "@replace(replace(variables('SQL-Original'), '<<TABLE>>', variables('Table')), '<<SCHEMA>>', variables('Schema'))",
                                    "type": "Expression"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_MySQL",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_Schema",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@concat(variables('Folder'), '/original/')",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@concat(variables('File'), '.csv')",
                                        "type": "Expression"
                                    },
                                    "Compression": "none",
                                    "ColumnDelim": ",",
                                    "HeaderRow": true
                                }
                            }
                        ]
                    },
                    {
                        "name": "Set-Folder",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Folder",
                            "value": {
                                "value": "@toLower(concat(pipeline().parameters.TaskDetails.SourceGroup, '//', 'schema'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-File",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "File",
                            "value": {
                                "value": "@toLower(concat(pipeline().parameters.TaskDetails.SourceName, '.', 'schema'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "If-Empty-Delete",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Generate Schema Original",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('Generate Schema').output.rowsCopied, 0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Delete-Empty-File",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "BINARY_ADLS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "File": {
                                                    "value": "@variables('File')",
                                                    "type": "Expression"
                                                },
                                                "Container": "raw",
                                                "Folder": {
                                                    "value": "@variables('Folder')",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "logStorageSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "LS-AzureDataLake",
                                                "type": "LinkedServiceReference"
                                            },
                                            "path": "log"
                                        },
                                        "enableLogging": true,
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set-Table",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Table",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceLocation,'.')[1]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-Schema",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Schema",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceLocation,'.')[0]",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object"
                    }
                },
                "variables": {
                    "Schema": {
                        "type": "String"
                    },
                    "Table": {
                        "type": "String"
                    },
                    "SQL": {
                        "type": "String",
                        "defaultValue": "SELECT column_name,     CASE \t\tWHEN data_type = 'bit' THEN 'boolean' \t\tWHEN data_type = 'bigint' THEN 'long' \t\tWHEN data_type IN ( 'int', 'smallint', 'tinyint', 'mediumint' ) THEN 'integer' \t\tWHEN data_type IN ( 'float', 'double', 'money', 'smallmoney' ) THEN 'double' \t\tWHEN data_type IN ( 'numeric', 'decimal' ) THEN 'decimal'  \t\tWHEN data_type IN ( 'nvarchar', 'varchar', 'char', 'nchar' ) THEN 'string' \t\tWHEN data_type IN ( 'date', 'datetime', 'datetime2', 'smalldatetime') THEN 'timestamp' \t\tELSE 'string'          \tEND AS fieldtype,     convert(case when data_type = 'mediumint' then 'int' else data_type end, char(100)) as data_type,     COALESCE(datetime_precision, numeric_precision, character_maximum_length) 'precision',     numeric_scale scale, \ttable_name, \ttable_schema FROM information_schema.columns   WHERE table_name = '<<TABLE>>'          AND table_schema = '<<SCHEMA>>'  ORDER BY ORDINAL_POSITION"
                    },
                    "SQL-Original": {
                        "type": "String",
                        "defaultValue": "SELECT * FROM information_schema.columns   WHERE table_name = '<<TABLE>>'          AND table_schema = '<<SCHEMA>>'  ORDER BY ORDINAL_POSITION"
                    },
                    "Folder": {
                        "type": "String"
                    },
                    "File": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "MySQL"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SRC_MySQL')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_Schema')]",
                "[concat(variables('factoryId'), '/datasets/BINARY_ADLS')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDataLake')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-MySQL-A-Source Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Check Delta Load",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get-Table-Values",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Execute-Generate-Schema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.TaskDetails.DeltaExtract,true)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Log Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Full",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Log Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Full",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "Some error occured",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "EP-SQL-Copy-Full",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-MySQL-B-Source-Copy",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "SourceSQL": {
                                                "value": "@pipeline().parameters.TaskDetails.Command",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                "type": "Expression"
                                            },
                                            "StartCounter": "0",
                                            "EndCounter": "0",
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@activity('Get-Table-Values').output.firstRow",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Task Log Failure Copy",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Delta",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Watermark Task Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Update-Watermark",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Watermark Task Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Update-Watermark",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "EP-SQL-Copy-Delta",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Delta-SQL",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-MySQL-B-Source-Copy",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "SourceSQL": {
                                                "value": "@variables('DeltaSQL')",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                "type": "Expression"
                                            },
                                            "StartCounter": {
                                                "value": "@pipeline().parameters.TaskDetails.Watermarks",
                                                "type": "Expression"
                                            },
                                            "EndCounter": {
                                                "value": "@activity('Get-Table-Values').output.firstRow.ReturnValue",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@activity('Get-Table-Values').output.firstRow",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Delta-SQL",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Watermark-Value",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "DeltaSQL",
                                        "value": {
                                            "value": "@replace(pipeline().parameters.TaskDetails.Command, '<<ENDDATE>>', variables('WatermarkValue'))",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SP-Update-Watermark",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Delta",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[updateWatermarks]",
                                        "storedProcedureParameters": {
                                            "SourceId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Watermark": {
                                                "value": {
                                                    "value": "@variables('WatermarkValue')",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Watermark-Value",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "WatermarkValue",
                                        "value": {
                                            "value": "@if(\n equals(coalesce(activity('Get-Table-Values').output.firstRow.ReturnValue, 0), 0)\n ,'1970-01-01 00:00:00'\n ,replace(activity('Get-Table-Values').output.firstRow.ReturnValue, '\\', ' ')\n)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Task Log Failure-Watermark Value SET",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Watermark-Value",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Full File Name",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
                                "storedProcedureParameters": {
                                    "DeltaExtract": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.DeltaExtract",
                                            "type": "Expression"
                                        }
                                    },
                                    "FileName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "FolderName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "Grain": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.ObjectGrain",
                                            "type": "Expression"
                                        }
                                    },
                                    "Compressed": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "true",
                                            "type": "Expression"
                                        }
                                    },
                                    "TargetType": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetType",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Execute-Generate-Schema",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "04-MySQL-Generate-Source-Schema",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TaskDetails": {
                                    "value": "@pipeline().parameters.TaskDetails",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Task Log Failure Schema",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute-Generate-Schema",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred while generating schema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Task Log Failure FileName",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred while getting file name",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Get-Table-SQL",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetTableDetails]",
                                "storedProcedureParameters": {
                                    "SourceId": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceId",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "Get-Table-Values",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get-Table-SQL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "MySqlSource",
                                "query": {
                                    "value": "@activity('Get-Table-SQL').output.firstrow.SQLStatement",
                                    "type": "Expression"
                                }
                            },
                            "dataset": {
                                "referenceName": "SRC_MySQL",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Task Log Failure-Watermark Values",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get-Table-Values",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int",
                        "defaultValue": 1
                    },
                    "TaskDetails": {
                        "type": "object",
                        "defaultValue": {
                            "SourceType": "MySQL",
                            "SourceServer": "LMS-clms",
                            "SourceName": "LMS_lmsuu_mdl_assign_grades",
                            "SourceLocation": "lmsuu.mdl_assign_grades",
                            "AdditionalProperty": "",
                            "Processor": "databricks-token|0708-233111-note225|Standard_DS3_v2|6.4.x-scala2.11|2:8",
                            "IsAuditTable": false,
                            "SoftDeleteSource": "",
                            "ProjectName": "LMS",
                            "ProjectId": 37,
                            "TargetType": "BLOB Storage (json)",
                            "TargetName": "LMS_lmsuu_mdl_assign_grades",
                            "TargetLocation": "LMS/lmsuu_mdl_assign_grades",
                            "TargetServer": "datalake-SasToken",
                            "DataLoadMode": "INCREMENTAL",
                            "DeltaExtract": true,
                            "CDCSource": false,
                            "TruncateTarget": false,
                            "UpsertTarget": true,
                            "TrackChanges": true,
                            "LoadToSqlEDW": true,
                            "TaskName": "LMS_lmsuu_mdl_assign_grades",
                            "ControlStageId": 1,
                            "TaskId": 1218,
                            "StageSequence": 100,
                            "StageName": "Source to Raw",
                            "SourceId": 1256,
                            "TargetId": 1235,
                            "ObjectGrain": "Day",
                            "CommandTypeId": 16,
                            "Watermarks": "2000-01-01 00:00:00",
                            "WatermarksDT": "2000-01-01T00:00:00Z",
                            "WatermarkColumn": "TIMEMODIFIED, TIMECREATED",
                            "BusinessKeyColumn": "ID",
                            "UpdateMetaData": false,
                            "Command": "SELECT * FROM lmsuu.mdl_assign_grades",
                            "LastLoadedFile": null
                        }
                    },
                    "TaskExecutionLogId": {
                        "type": "int",
                        "defaultValue": 1
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "OutputFileName": {
                        "type": "String"
                    },
                    "DeltaSQL": {
                        "type": "String"
                    },
                    "WatermarkValue": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "MySQL"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/04-MySQL-Generate-Source-Schema')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/datasets/SRC_MySQL')]",
                "[concat(variables('factoryId'), '/pipelines/04-MySQL-B-Source-Copy')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-Oracle-A-Source Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Check Delta Load",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Execute-Generate-Schema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get-Table-Values",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.TaskDetails.DeltaExtract,true)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Log Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-Oracle-Copy-Full",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Log Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-Oracle-Copy-Full",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "Some error occured",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "EP-Oracle-Copy-Full",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-Oracle-B-Source-Copy",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "SourceSQL": {
                                                "value": "@pipeline().parameters.TaskDetails.Command",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@activity('Get-Table-Values').output.firstRow",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Task Log Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-Oracle-Copy-Delta",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Watermark Task Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Update-Watermark",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred while updating Watermark",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Task Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Update-Watermark",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "EP-Oracle-Copy-Delta",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Delta-SQL",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-Oracle-B-Source-Copy",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "SourceSQL": {
                                                "value": "@variables('DeltaSQL')",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@activity('Get-Table-Values').output.firstRow",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Delta-SQL",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Watermark-Value",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "DeltaSQL",
                                        "value": {
                                            "value": "@replace(pipeline().parameters.TaskDetails.Command, '<<ENDDATE>>', variables('WatermarkValue'))",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SP-Update-Watermark",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-Oracle-Copy-Delta",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[updateWatermarks]",
                                        "storedProcedureParameters": {
                                            "SourceId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Watermark": {
                                                "value": {
                                                    "value": "@variables('WatermarkValue')",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Watermark-Value",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "WatermarkValue",
                                        "value": {
                                            "value": "@replace(activity('Get-Table-Values').output.firstRow.ReturnValue, '\\', ' ')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Task Log Failure-Watermark Value SET",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Watermark-Value",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Full File Name",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
                                "storedProcedureParameters": {
                                    "DeltaExtract": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.DeltaExtract",
                                            "type": "Expression"
                                        }
                                    },
                                    "FileName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "FolderName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "Grain": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.ObjectGrain",
                                            "type": "Expression"
                                        }
                                    },
                                    "Compressed": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "true",
                                            "type": "Expression"
                                        }
                                    },
                                    "TargetType": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetType",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Execute-Generate-Schema",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "04-Oracle-Generate-Source-Schema",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TaskDetails": {
                                    "value": "@pipeline().parameters.TaskDetails",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Task Log Failure Schema",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute-Generate-Schema",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred while generating schema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Task Log Failure FileName",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred while getting file name",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Get-Table-SQL",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetTableDetails]",
                                "storedProcedureParameters": {
                                    "SourceId": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceId",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "Get-Table-Values",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get-Table-SQL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "OracleSource",
                                "oracleReaderQuery": {
                                    "value": "@activity('Get-Table-SQL').output.firstrow.SQLStatement",
                                    "type": "Expression"
                                },
                                "partitionOption": "None",
                                "queryTimeout": "02:00:00"
                            },
                            "dataset": {
                                "referenceName": "SRC_Oracle",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": "@pipeline().parameters.TaskDetails.SourceServer"
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Task Log Failure-Watermark Values",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get-Table-Values",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "int"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "OutputFileName": {
                        "type": "String"
                    },
                    "DeltaSQL": {
                        "type": "String"
                    },
                    "WatermarkValue": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Oracle"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/04-Oracle-Generate-Source-Schema')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/datasets/SRC_Oracle')]",
                "[concat(variables('factoryId'), '/pipelines/04-Oracle-B-Source-Copy')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-Oracle-XX-Source-Copy')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LU-DataToLoad",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Generate Batch Log",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT ', variables('Columns') , ' FROM CTL.CustomDataLoad WHERE TableName = ', '''', pipeline().parameters.SourceObject, '''', 'AND ExtractionComplete IS NULL ORDER BY StartDate')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Loop Periods",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LU-DataToLoad",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LU-DataToLoad').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy-Source-DataLake",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-LU-SQL-Main",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "OracleSource",
                                            "oracleReaderQuery": {
                                                "value": "@variables('SQLQuery')",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None",
                                            "queryTimeout": "10:00:00"
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "SRC_Oracle",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "kvSecret": {
                                                    "value": "@item().ServiceName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "RAW_ADLS_JSON",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "BlobPath": {
                                                    "value": "@variables('Folder')",
                                                    "type": "Expression"
                                                },
                                                "BlobName": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "SP-Record-Manifest",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Source-RecordCount",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[CreateManifestRecord]",
                                        "storedProcedureParameters": {
                                            "BatchExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Container": {
                                                "value": "raw",
                                                "type": "String"
                                            },
                                            "EndCounter": {
                                                "value": {
                                                    "value": "@item().EndDate",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FileName": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FolderName": {
                                                "value": {
                                                    "value": "@variables('Folder')",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "Records": {
                                                "value": {
                                                    "value": "@variables('RecordCount')",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "SourceObject": {
                                                "value": {
                                                    "value": "@toLower(concat(pipeline().parameters.ProjectName, '_', replace(pipeline().parameters.SourceObject, '.', '_')))",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartCounter": {
                                                "value": {
                                                    "value": "@item().StartDate",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "TaskExecutionLogID": {
                                                "value": {
                                                    "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "DeltaColumn": {
                                                "value": {
                                                    "value": "@variables('DeltaColumn')",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Source-RecordCount",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy-Source-DataLake",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "RecordCount",
                                        "value": {
                                            "value": "@string(activity('Copy-Source-DataLake').output.rowsCopied)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-LU-SQL-Main",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Set-EndDate",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "SQLQuery",
                                        "value": {
                                            "value": "@concat('SELECT * FROM ', item().TableName, ' WHERE CREATED_DATE BETWEEN TO_DATE(', '''', item().StartDate, '''', ',', variables('OracleDateFormat') , ') AND ', 'TO_DATE(', '''', item().EndDate, '''', ',', variables('OracleDateFormat'),  ')')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Get Full File Name",
                                    "type": "Lookup",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
                                            "storedProcedureParameters": {
                                                "DeltaExtract": {
                                                    "type": "Boolean",
                                                    "value": {
                                                        "value": "true",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "FileName": {
                                                    "type": "String",
                                                    "value": {
                                                        "value": "@pipeline().parameters.SourceObject",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "FolderName": {
                                                    "type": "String",
                                                    "value": {
                                                        "value": "@concat('OneEBS/', toUpper(replace(pipeline().parameters.SourceObject, '.', '_')))",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "Grain": {
                                                    "type": "String",
                                                    "value": {
                                                        "value": "day",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "Compressed": {
                                                    "type": "Boolean",
                                                    "value": {
                                                        "value": "true",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "TargetType": {
                                                    "type": "String",
                                                    "value": {
                                                        "value": "BLOB Storage (json)",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSqlDatabase_Ctrldb",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "firstRowOnly": true
                                    }
                                },
                                {
                                    "name": "Generate Task Log",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderStoredProcedureName": "[[CTL].[CreateTaskLog]",
                                            "storedProcedureParameters": {
                                                "BatchLogId": {
                                                    "type": "Int64",
                                                    "value": {
                                                        "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "TaskId": {
                                                    "type": "Int64",
                                                    "value": {
                                                        "value": "@variables('TaskID')",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSqlDatabase_Ctrldb",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "Log Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Update Data Load Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@variables('TaskID')",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": "Success",
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Update Data Load Log",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Record-Manifest",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateCustomDataLoad]",
                                        "storedProcedureParameters": {
                                            "StartDate": {
                                                "value": {
                                                    "value": "@item().StartDate",
                                                    "type": "Expression"
                                                },
                                                "type": "DateTime"
                                            },
                                            "TableName": {
                                                "value": {
                                                    "value": "@item().TableName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Set Folder",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Get Full File Name",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "Folder",
                                        "value": {
                                            "value": "@concat(toLower(pipeline().parameters.ProjectName), '/', toLower(replace(pipeline().parameters.SourceObject, '.', '_')), '/json/', 'year=', formatDateTime(item().StartDate, 'yyyy'), '/month=', formatDateTime(item().StartDate, 'MM'), '/day=', formatDateTime(item().StartDate, 'dd'), '/')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Set-EndDate",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Folder",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "EndDate",
                                        "value": {
                                            "value": "@item().EndDate",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Generate Batch Log",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Execute-Generate-Schema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[CreateBatchLog]",
                                "storedProcedureParameters": {
                                    "ProjectID": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@variables('ProjectID')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "Batch Log Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "SP-Update-Watermark",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateBatchLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "@activity('Notebook-Delta-Table').output.runOutput",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Complete",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Batch Log Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Loop Periods",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateBatchLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": "Check Task Execution Log for errors",
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Execute-Generate-Schema",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Set ProjectID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "04-Oracle-Generate-Source-Schema",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "SourceObject": {
                                    "value": "@pipeline().parameters.SourceObject",
                                    "type": "Expression"
                                },
                                "Project": {
                                    "value": "OneEBS",
                                    "type": "Expression"
                                },
                                "SourceServer": {
                                    "value": "@activity('Lookup-TaskID').output.firstRow.SourceServer",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Lookup-TaskID",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "@concat('SELECT SourceID, SourceServer FROM CTL.ControlSource WHERE SourceTypeID = 6 and SourceLocation = ', '''', pipeline().parameters.SourceObject, '''')",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "Set TaskID",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Lookup-TaskID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "TaskID",
                            "value": {
                                "value": "@string(activity('Lookup-TaskID').output.firstRow.SourceID)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set ProjectID",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set TaskID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ProjectID",
                            "value": {
                                "value": "@concat(variables('TaskID'), '0')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Notebook-Delta-Table",
                        "type": "DatabricksNotebook",
                        "dependsOn": [
                            {
                                "activity": "Loop Periods",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/build/raw/load-raw-deltatable",
                            "baseParameters": {
                                "file_object": {
                                    "value": "@toLower(concat(pipeline().parameters.ProjectName, '/', replace(pipeline().parameters.SourceObject, '.', '_'), '/*/*/*/*/*.json.gz'))",
                                    "type": "Expression"
                                },
                                "delta_extract": {
                                    "value": "true",
                                    "type": "Expression"
                                },
                                "cdc_mode": {
                                    "value": "false",
                                    "type": "Expression"
                                },
                                "delta_column": {
                                    "value": "@variables('DeltaColumn')",
                                    "type": "Expression"
                                }
                            },
                            "libraries": [
                                {
                                    "maven": {
                                        "coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
                                    }
                                }
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureDatabricks_JobCluster",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": {
                                    "value": "databricks-token",
                                    "type": "Expression"
                                },
                                "DataBricksClusterType": "Standard_DS5_v2",
                                "DataBricksClusterVersion": "6.4.x-scala2.11",
                                "DataBricksWorkerNodes": "2:8"
                            }
                        }
                    },
                    {
                        "name": "Batch Log Failure-Notebook",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Notebook-Delta-Table",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateBatchLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": "Check Task Execution Log for errors",
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "SP-Update-Watermark",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Notebook-Delta-Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[updateWatermarks]",
                            "storedProcedureParameters": {
                                "SourceId": {
                                    "value": {
                                        "value": "@string(activity('Lookup-TaskID').output.firstRow.SourceID)",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Watermark": {
                                    "value": {
                                        "value": "@variables('EndDate')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    }
                ],
                "parameters": {
                    "SourceObject": {
                        "type": "string",
                        "defaultValue": "EBS_0165.REGISTER_EVENTS"
                    },
                    "ProjectName": {
                        "type": "string",
                        "defaultValue": "OneEBS"
                    }
                },
                "variables": {
                    "SQLQuery": {
                        "type": "String"
                    },
                    "RecordCount": {
                        "type": "String"
                    },
                    "DeltaColumn": {
                        "type": "String",
                        "defaultValue": "UPDATED_DATE, CREATED_DATE"
                    },
                    "Folder": {
                        "type": "String"
                    },
                    "Columns": {
                        "type": "String",
                        "defaultValue": "TableName, ServiceName, format(StartDate, 'yyyy-MM-dd hh:mm:ss') StartDate, format(EndDate, 'yyyy-MM-dd hh:mm:ss') EndDate"
                    },
                    "OracleDateFormat": {
                        "type": "String",
                        "defaultValue": "'YYYY-MM-DD HH24:MI:SS'"
                    },
                    "TaskID": {
                        "type": "String"
                    },
                    "ProjectID": {
                        "type": "String"
                    },
                    "EndDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Oracle/OneTimeLoad"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/04-Oracle-Generate-Source-Schema')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDatabricks_JobCluster')]",
                "[concat(variables('factoryId'), '/datasets/SRC_Oracle')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_JSON')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-SQLServer-Generate-Source-Schema')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Generate Schema",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Set-Schema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-File",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-Folder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@replace(replace(variables('SQL'), '<<TABLE>>', variables('Table')), '<<SCHEMA>>', variables('Schema'))",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_SQLServer",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_Schema",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@variables('Folder')",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@variables('File')",
                                        "type": "Expression"
                                    },
                                    "Compression": "none",
                                    "ColumnDelim": ",",
                                    "HeaderRow": false
                                }
                            }
                        ]
                    },
                    {
                        "name": "Generate Schema Original",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Generate Schema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@replace(replace(variables('SQL-Original'), '<<TABLE>>', variables('Table')), '<<SCHEMA>>', variables('Schema'))",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_SQLServer",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_Schema",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@concat(variables('Folder'), '/original/')",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@concat(variables('File'), '.csv')",
                                        "type": "Expression"
                                    },
                                    "Compression": "none",
                                    "ColumnDelim": ",",
                                    "HeaderRow": true
                                }
                            }
                        ]
                    },
                    {
                        "name": "If-Empty-Delete",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Generate Schema Original",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('Generate Schema').output.rowsCopied, 0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Delete-Empty-File",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "BINARY_ADLS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "File": {
                                                    "value": "@variables('File')",
                                                    "type": "Expression"
                                                },
                                                "Container": "raw",
                                                "Folder": {
                                                    "value": "@variables('Folder')",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "logStorageSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "LS-AzureDataLake",
                                                "type": "LinkedServiceReference"
                                            },
                                            "path": "log"
                                        },
                                        "enableLogging": true,
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set-Folder",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Folder",
                            "value": {
                                "value": "@toLower(concat(pipeline().parameters.TaskDetails.SourceGroup, '//', 'schema'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-File",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "File",
                            "value": {
                                "value": "@toLower(concat(pipeline().parameters.TaskDetails.SourceName, '.', 'schema'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-Table",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Table",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceLocation,'.')[1]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-Schema",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Schema",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceLocation,'.')[0]",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object"
                    }
                },
                "variables": {
                    "Schema": {
                        "type": "String"
                    },
                    "Table": {
                        "type": "String"
                    },
                    "SQL": {
                        "type": "String",
                        "defaultValue": "SELECT column_name,     CASE \t\tWHEN data_type = 'bit' THEN 'boolean' \t\tWHEN data_type = 'bigint' THEN 'long' \t\tWHEN data_type IN ( 'int', 'smallint' ) THEN 'integer' \t\tWHEN data_type IN ( 'float', 'double', 'money', 'smallmoney' ) THEN 'double' \t\tWHEN data_type IN ( 'numeric' ) THEN 'decimal'  \t\tWHEN data_type IN ( 'nvarchar', 'varchar', 'char', 'nchar' ) THEN 'string' \t\tWHEN data_type IN ( 'date', 'datetime', 'datetime2', 'smalldatetime') THEN 'timestamp' \t\tELSE 'string'          \tEND AS fieldtype,     data_type,     COALESCE(datetime_precision, numeric_precision, character_maximum_length) precision,     numeric_scale scale, \ttable_name, \ttable_schema FROM information_schema.columns   WHERE table_name = '<<TABLE>>'          AND table_schema = '<<SCHEMA>>'  ORDER BY ORDINAL_POSITION"
                    },
                    "SQL-Original": {
                        "type": "String",
                        "defaultValue": "SELECT * FROM information_schema.columns WHERE table_name = '<<TABLE>>' AND table_schema = '<<SCHEMA>>'"
                    },
                    "Folder": {
                        "type": "String"
                    },
                    "File": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "SQL Server"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:07Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SRC_SQLServer')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_Schema')]",
                "[concat(variables('factoryId'), '/datasets/BINARY_ADLS')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDataLake')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-SQLServer-A-Source Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Check Delta Load",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get-Table-Values",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Execute-Generate-Schema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.TaskDetails.DeltaExtract,true)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Log Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Full",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Log Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Full",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "Some error occured",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "EP-SQL-Copy-Full",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-SQLServer-B-Source-Copy",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "SourceSQL": {
                                                "value": "@pipeline().parameters.TaskDetails.Command",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@activity('Get-Table-Values').output.firstRow",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Task Log Failure Copy",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Delta",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Watermark Task Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Update-Watermark",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred while updating Watermark",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Task Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Update-Watermark",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "EP-SQL-Copy-Delta",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Delta-SQL",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-SQLServer-B-Source-Copy",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "SourceSQL": {
                                                "value": "@variables('DeltaSQL')",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@activity('Get-Table-Values').output.firstRow",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Delta-SQL",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Watermark-Value",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "DeltaSQL",
                                        "value": {
                                            "value": "@replace(pipeline().parameters.TaskDetails.Command, '<<ENDDATE>>', variables('WatermarkValue'))",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SP-Update-Watermark",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Delta",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[updateWatermarks]",
                                        "storedProcedureParameters": {
                                            "SourceId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Watermark": {
                                                "value": {
                                                    "value": "@variables('WatermarkValue')",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Watermark-Value",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "WatermarkValue",
                                        "value": {
                                            "value": "@replace(activity('Get-Table-Values').output.firstRow.ReturnValue, '\\', ' ')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Task Log Failure-Watermark Value SET",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Watermark-Value",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Full File Name",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
                                "storedProcedureParameters": {
                                    "DeltaExtract": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.DeltaExtract",
                                            "type": "Expression"
                                        }
                                    },
                                    "FileName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "FolderName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "Grain": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.ObjectGrain",
                                            "type": "Expression"
                                        }
                                    },
                                    "Compressed": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "true",
                                            "type": "Expression"
                                        }
                                    },
                                    "TargetType": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetType",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Execute-Generate-Schema",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "04-SQLServer-Generate-Source-Schema",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TaskDetails": {
                                    "value": "@pipeline().parameters.TaskDetails",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Task Log Failure Schema",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute-Generate-Schema",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred while generating schema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Task Log Failure FileName",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred while getting file name",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Get-Table-SQL",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetTableDetails]",
                                "storedProcedureParameters": {
                                    "SourceId": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceId",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "Get-Table-Values",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get-Table-SQL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@activity('Get-Table-SQL').output.firstrow.SQLStatement",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SRC_SQLServer",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": "@pipeline().parameters.TaskDetails.SourceServer"
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Task Log Failure-Watermark Values",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get-Table-Values",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "int"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "OutputFileName": {
                        "type": "String"
                    },
                    "DeltaSQL": {
                        "type": "String"
                    },
                    "WatermarkValue": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "SQL Server"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/04-SQLServer-Generate-Source-Schema')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/datasets/SRC_SQLServer')]",
                "[concat(variables('factoryId'), '/pipelines/04-SQLServer-B-Source-Copy')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/03-Execute-Project-Tasks')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Load Tasks",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[getExecutionTasks]",
                                "storedProcedureParameters": {
                                    "ProjectId": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@pipeline().parameters.ProjectId",
                                            "type": "Expression"
                                        }
                                    },
                                    "StageId": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@pipeline().parameters.StageId",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Execute Each Task",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Generate Batch Log",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Load Tasks').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "Oracle Source Load",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(item().SourceType,'Oracle'), equals(item().ControlStageId,1))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Load Oracle Source Data",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "04-Oracle-A-Source Load",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Generate Task Log",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderStoredProcedureName": "[[CTL].[CreateTaskLog]",
                                            "storedProcedureParameters": {
                                                "BatchLogId": {
                                                    "type": "Int64",
                                                    "value": {
                                                        "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "TaskId": {
                                                    "type": "Int64",
                                                    "value": {
                                                        "value": "@item().TaskId",
                                                        "type": "Expression"
                                                    }
                                                }
                                            },
                                            "partitionOption": "None"
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSqlDatabase_Ctrldb",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "ProcessNotebooks-Trusted",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(item().ControlStageId,2)",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "EP-Trusted Databricks",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "05-DL-A-Load-Raw-to-Trusted-Zone",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Load Data Warehouse",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(item().SourceType,'SQL Server'),equals(item().ControlStageId,4))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute Load Data Warehouse Pipeline",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "Load Data Warehouse",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {}
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "SQL Source Load",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(item().SourceType,'SQL Server'), equals(item().ControlStageId,1))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute SQL Source Load",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "04-SQLServer-A-Source Load",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Flat File Load",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(item().SourceType,'Flat File'), equals(item().ControlStageId,1))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute Flat File Load",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "04-Text-Source-Load",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ProcessNotebooks-Curated",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(item().StageName,'Trusted to Curated')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute Databricks-Curated",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "06-Curated-Main",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Excel File Load",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(item().SourceType,'Excel'), equals(item().ControlStageId,1))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute Excel File Load",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "04-Excel-Source-Load",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODataBasic API Load",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(item().SourceType,'OData-Basic'), equals(item().ControlStageId,1))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute ODataBasic API Load",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "04-ODataBasic-Source-Load",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ODataAADSP API Load",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(item().SourceType,'OData-AADServicePrincipal'), equals(item().ControlStageId,1))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute OData AADSP API Load",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "04-ODataAADSP-Source-Load",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "SharePoint Load",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(item().SourceType,'SharePoint'), equals(item().ControlStageId,1))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute SharePoint API Load",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "04-SharePoint-Source-Load",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "SQLEDW Export",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(item().TargetType,'SQL Server'), equals(item().ControlStageId,5))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Load SQLEDW Export SQLServer",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "08-EXPORT-SQLServer",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "ProcessCubes",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(item().StageName,'Cubes')\n",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute Process AAS Cubes",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "07-AAS-Main",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "MySQL Source Load",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(item().SourceType,'MySQL'), equals(item().ControlStageId,1))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute MySQL Source Load",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "04-MySQL-A-Source Load",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Validation",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(item().StageName,'Validation')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute Validation",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "recon-target-main",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "ProjectID": {
                                                            "value": "@pipeline().parameters.ProjectId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Task Log Failure-Validation",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Execute Validation",
                                                        "dependencyConditions": [
                                                            "Failed"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                                    "storedProcedureParameters": {
                                                        "BatchLogId": {
                                                            "value": {
                                                                "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "ErrorMessage": {
                                                            "value": {
                                                                "value": "An Error Occurred",
                                                                "type": "Expression"
                                                            },
                                                            "type": "String"
                                                        },
                                                        "ExecutionLogId": {
                                                            "value": {
                                                                "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "Status": {
                                                            "value": "Failure",
                                                            "type": "String"
                                                        },
                                                        "TaskId": {
                                                            "value": {
                                                                "value": "@item().TaskId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "Output": {
                                                            "value": null,
                                                            "type": "String"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "kvSecret": "AzureSqlDatabase-ControlDB"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "Log Success",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [
                                                    {
                                                        "activity": "Execute Validation",
                                                        "dependencyConditions": [
                                                            "Succeeded"
                                                        ]
                                                    }
                                                ],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                                    "storedProcedureParameters": {
                                                        "BatchLogId": {
                                                            "value": {
                                                                "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "ErrorMessage": {
                                                            "value": null,
                                                            "type": "String"
                                                        },
                                                        "ExecutionLogId": {
                                                            "value": {
                                                                "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        },
                                                        "Output": {
                                                            "value": "Validation Complete",
                                                            "type": "String"
                                                        },
                                                        "Status": {
                                                            "value": "Success",
                                                            "type": "String"
                                                        },
                                                        "TaskId": {
                                                            "value": {
                                                                "value": "@item().TaskId",
                                                                "type": "Expression"
                                                            },
                                                            "type": "Int64"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "kvSecret": "AzureSqlDatabase-ControlDB"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "EDW-SP",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(item().StageName,'EDW-SP')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "EP-EDW-SP",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "06-Curated-EDWSP",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "SQL Azure Source Load",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(item().SourceType,'SQL Azure'), equals(item().ControlStageId,1))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute SQL Azure Source Load",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "04-SQLAzure-A-Source Load",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        },
                                                        "ProjectRunID": {
                                                            "value": "@pipeline().parameters.ProjectRunID",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Batch Log Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute Each Task",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateBatchLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Complete",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Batch Log Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute Each Task",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateBatchLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": "Check Task Execution Log for errors",
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Generate Batch Log",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get Load Tasks",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[CreateBatchLog]",
                                "storedProcedureParameters": {
                                    "ProjectID": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@pipeline().parameters.ProjectId",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "parameters": {
                    "StageId": {
                        "type": "int"
                    },
                    "ProjectId": {
                        "type": "int"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-06-28T03:06:51Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/04-Oracle-A-Source Load')]",
                "[concat(variables('factoryId'), '/pipelines/05-DL-A-Load-Raw-to-Trusted-Zone')]",
                "[concat(variables('factoryId'), '/pipelines/Load Data Warehouse')]",
                "[concat(variables('factoryId'), '/pipelines/04-SQLServer-A-Source Load')]",
                "[concat(variables('factoryId'), '/pipelines/04-Text-Source-Load')]",
                "[concat(variables('factoryId'), '/pipelines/06-Curated-Main')]",
                "[concat(variables('factoryId'), '/pipelines/04-Excel-Source-Load')]",
                "[concat(variables('factoryId'), '/pipelines/04-ODataBasic-Source-Load')]",
                "[concat(variables('factoryId'), '/pipelines/04-ODataAADSP-Source-Load')]",
                "[concat(variables('factoryId'), '/pipelines/04-SharePoint-Source-Load')]",
                "[concat(variables('factoryId'), '/pipelines/08-EXPORT-SQLServer')]",
                "[concat(variables('factoryId'), '/pipelines/07-AAS-Main')]",
                "[concat(variables('factoryId'), '/pipelines/04-MySQL-A-Source Load')]",
                "[concat(variables('factoryId'), '/pipelines/recon-target-main')]",
                "[concat(variables('factoryId'), '/pipelines/06-Curated-EDWSP')]",
                "[concat(variables('factoryId'), '/pipelines/04-SQLAzure-A-Source Load')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/02-Execute-Project-Stages')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Stages",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetExecutionStages]",
                                "storedProcedureParameters": {
                                    "ProjectId": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@pipeline().parameters.ProjectId",
                                            "type": "Expression"
                                        }
                                    },
                                    "TriggerName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TriggerName",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Execute Stages",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Stages",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Stages').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Execute Task Load Pipeline",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "03-Execute-Project-Tasks",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "StageId": {
                                                "value": "@item().ControlStageId",
                                                "type": "Expression"
                                            },
                                            "ProjectId": {
                                                "value": "@pipeline().parameters.ProjectId",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "ProjectId": {
                        "type": "int"
                    },
                    "TriggerName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-06-24T12:03:10Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/03-Execute-Project-Tasks')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/01-Main')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "This is the main pipeline",
                "activities": [
                    {
                        "name": "Get Projects to Execute",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[getProjects]",
                                "storedProcedureParameters": {
                                    "TriggerName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TriggerName",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Loop Projects",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Projects to Execute",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Projects to Execute').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "Execute Projects",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "02-Execute-Project-Stages",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "ProjectId": {
                                                "value": "@item().ProjectId",
                                                "type": "Expression"
                                            },
                                            "TriggerName": {
                                                "value": "@pipeline().parameters.TriggerName",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "TriggerName": {
                        "type": "string",
                        "defaultValue": "iBodyShop"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-06-25T10:40:48Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/02-Execute-Project-Stages')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-SQLAzure-A-Source Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Check Delta Load",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get-Table-Values",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Execute-Generate-Schema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.TaskDetails.DeltaExtract,true)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Log Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Full",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Log Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Full",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "Some error occured",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "EP-SQL-Copy-Full",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-SQLAzure-B-Source-Copy",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "SourceSQL": {
                                                "value": "@pipeline().parameters.TaskDetails.Command",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@activity('Get-Table-Values').output.firstRow",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Task Log Failure Copy",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Delta",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Watermark Task Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Update-Watermark",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred while updating Watermark",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Task Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Update-Watermark",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "EP-SQL-Copy-Delta",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Delta-SQL",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-SQLAzure-B-Source-Copy",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "SourceSQL": {
                                                "value": "@variables('DeltaSQL')",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@activity('Get Full File Name').output.firstrow.StorageFile",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@activity('Get-Table-Values').output.firstRow",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Delta-SQL",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Watermark-Value",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "DeltaSQL",
                                        "value": {
                                            "value": "@replace(pipeline().parameters.TaskDetails.Command, '<<ENDDATE>>', variables('WatermarkValue'))",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SP-Update-Watermark",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "EP-SQL-Copy-Delta",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[updateWatermarks]",
                                        "storedProcedureParameters": {
                                            "SourceId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Watermark": {
                                                "value": {
                                                    "value": "@variables('WatermarkValue')",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "SET-Watermark-Value",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "WatermarkValue",
                                        "value": {
                                            "value": "@replace(activity('Get-Table-Values').output.firstRow.ReturnValue, '\\', ' ')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Task Log Failure-Watermark Value SET",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "SET-Watermark-Value",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Full File Name",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetStorageFileName]",
                                "storedProcedureParameters": {
                                    "DeltaExtract": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.DeltaExtract",
                                            "type": "Expression"
                                        }
                                    },
                                    "FileName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "FolderName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                            "type": "Expression"
                                        }
                                    },
                                    "Grain": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.ObjectGrain",
                                            "type": "Expression"
                                        }
                                    },
                                    "Compressed": {
                                        "type": "Boolean",
                                        "value": {
                                            "value": "true",
                                            "type": "Expression"
                                        }
                                    },
                                    "TargetType": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetType",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Execute-Generate-Schema",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "04-SQLAzure-Generate-Source-Schema",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TaskDetails": {
                                    "value": "@pipeline().parameters.TaskDetails",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Task Log Failure Schema",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute-Generate-Schema",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred while generating schema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Task Log Failure FileName",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred while getting file name",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    },
                    {
                        "name": "Get-Table-SQL",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[GetTableDetails]",
                                "storedProcedureParameters": {
                                    "SourceId": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.SourceId",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "Get-Table-Values",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get-Table-SQL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@activity('Get-Table-SQL').output.firstrow.SQLStatement",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "SRC_SQLAzure",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "firstRowOnly": true
                        }
                    },
                    {
                        "name": "Task Log Failure-Watermark Values",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Get-Table-Values",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": {
                                        "value": "An Error Occurred",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "ExecutionLogId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskExecutionLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                },
                                "TaskId": {
                                    "value": {
                                        "value": "@pipeline().parameters.TaskDetails.TaskId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "Output": {
                                    "value": null,
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "kvSecret": "AzureSqlDatabase-ControlDB"
                            }
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "int"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "variables": {
                    "OutputFileName": {
                        "type": "String"
                    },
                    "DeltaSQL": {
                        "type": "String"
                    },
                    "WatermarkValue": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "SQL Azure"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-28T02:30:08Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/04-SQLAzure-Generate-Source-Schema')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/datasets/SRC_SQLAzure')]",
                "[concat(variables('factoryId'), '/pipelines/04-SQLAzure-B-Source-Copy')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-SQLAzure-Generate-Source-Schema')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Generate Schema",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Set-Schema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-Table",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-File",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set-Folder",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@replace(replace(variables('SQL'), '<<TABLE>>', variables('Table')), '<<SCHEMA>>', variables('Schema'))",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_SQLAzure",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_Schema",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@variables('Folder')",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@variables('File')",
                                        "type": "Expression"
                                    },
                                    "Compression": "none",
                                    "ColumnDelim": ",",
                                    "HeaderRow": false
                                }
                            }
                        ]
                    },
                    {
                        "name": "Generate Schema Original",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Generate Schema",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@replace(replace(variables('SQL-Original'), '<<TABLE>>', variables('Table')), '<<SCHEMA>>', variables('Schema'))",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_SQLAzure",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_Schema",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@concat(variables('Folder'), '/original/')",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@concat(variables('File'), '.csv')",
                                        "type": "Expression"
                                    },
                                    "Compression": "none",
                                    "ColumnDelim": ",",
                                    "HeaderRow": true
                                }
                            }
                        ]
                    },
                    {
                        "name": "If-Empty-Delete",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Generate Schema Original",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('Generate Schema').output.rowsCopied, 0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Delete-Empty-File",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "BINARY_ADLS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "File": {
                                                    "value": "@variables('File')",
                                                    "type": "Expression"
                                                },
                                                "Container": "raw",
                                                "Folder": {
                                                    "value": "@variables('Folder')",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "logStorageSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "LS-AzureDataLake",
                                                "type": "LinkedServiceReference"
                                            },
                                            "path": "log"
                                        },
                                        "enableLogging": true,
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set-Folder",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Folder",
                            "value": {
                                "value": "@toLower(concat(pipeline().parameters.TaskDetails.SourceGroup, '//', 'schema'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-File",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "File",
                            "value": {
                                "value": "@toLower(concat(pipeline().parameters.TaskDetails.SourceName, '.', 'schema'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-Table",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Table",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceLocation,'.')[1]",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set-Schema",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "Schema",
                            "value": {
                                "value": "@split(pipeline().parameters.TaskDetails.SourceLocation,'.')[0]",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "TaskDetails": {
                        "type": "object"
                    }
                },
                "variables": {
                    "Schema": {
                        "type": "String"
                    },
                    "Table": {
                        "type": "String"
                    },
                    "SQL": {
                        "type": "String",
                        "defaultValue": "SELECT column_name,     CASE \t\tWHEN data_type = 'bit' THEN 'boolean' \t\tWHEN data_type = 'bigint' THEN 'long' \t\tWHEN data_type IN ( 'int', 'smallint' ) THEN 'integer' \t\tWHEN data_type IN ( 'float', 'double', 'money', 'smallmoney' ) THEN 'double' \t\tWHEN data_type IN ( 'numeric' ) THEN 'decimal'  \t\tWHEN data_type IN ( 'nvarchar', 'varchar', 'char', 'nchar' ) THEN 'string' \t\tWHEN data_type IN ( 'date', 'datetime', 'datetime2', 'smalldatetime') THEN 'timestamp' \t\tELSE 'string'          \tEND AS fieldtype,     data_type,     COALESCE(datetime_precision, numeric_precision, character_maximum_length) precision,     numeric_scale scale, \ttable_name, \ttable_schema FROM information_schema.columns   WHERE table_name = '<<TABLE>>'          AND table_schema = '<<SCHEMA>>'  ORDER BY ORDINAL_POSITION"
                    },
                    "SQL-Original": {
                        "type": "String",
                        "defaultValue": "SELECT * FROM information_schema.columns WHERE table_name = '<<TABLE>>' AND table_schema = '<<SCHEMA>>'"
                    },
                    "Folder": {
                        "type": "String"
                    },
                    "File": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "SQL Azure"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-28T02:27:16Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SRC_SQLAzure')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_Schema')]",
                "[concat(variables('factoryId'), '/datasets/BINARY_ADLS')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureDataLake')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/04-SQLAzure-B-Source-Copy')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy-Source-DataLake",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "sqlReaderQuery": {
                                    "value": "@pipeline().parameters.SourceSQL",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "SRC_SQLAzure",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": {
                                        "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "RAW_ADLS_JSON",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": {
                                        "value": "@pipeline().parameters.TargetBLOBFolder",
                                        "type": "Expression"
                                    },
                                    "BlobName": {
                                        "value": "@pipeline().parameters.TargetBLOBName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "If-RecordCount",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Copy-Source-DataLake",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(activity('Copy-Source-DataLake').output.rowsCopied, 0)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "SP-Record-Manifest",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[CreateManifestRecord]",
                                        "storedProcedureParameters": {
                                            "BatchExecutionLogID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Container": {
                                                "value": "raw",
                                                "type": "String"
                                            },
                                            "EndCounter": {
                                                "value": {
                                                    "value": "@json(string(pipeline().parameters.ValidationDetails)).ReturnValue",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FileName": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TargetBLOBName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "FolderName": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TargetBLOBFolder",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "Records": {
                                                "value": {
                                                    "value": "@string(activity('Copy-Source-DataLake').output.rowsCopied)",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "SourceObject": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "StartCounter": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.Watermarks",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "TaskExecutionLogID": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "DeltaColumn": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "PipelineRunID": {
                                                "value": {
                                                    "value": "@pipeline().RunId",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS-AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "kvSecret": "AzureSqlDatabase-ControlDB"
                                        }
                                    }
                                },
                                {
                                    "name": "Execute-DB-Load-Delta-Table",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "SP-Record-Manifest",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "04-DL-Load-Raw-to-Delta-Table",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "BatchLogId": {
                                                "value": "@pipeline().parameters.BatchLogId",
                                                "type": "Expression"
                                            },
                                            "TaskExecutionLogId": {
                                                "value": "@pipeline().parameters.TaskExecutionLogId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBFolder": {
                                                "value": "@pipeline().parameters.TargetBLOBFolder",
                                                "type": "Expression"
                                            },
                                            "TargetBLOBName": {
                                                "value": "@pipeline().parameters.TargetBLOBName",
                                                "type": "Expression"
                                            },
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "EP-Record-Validation",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Execute-DB-Load-Delta-Table",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "recon-record-validation",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "ProjectRunID": {
                                                "value": "@pipeline().parameters.ProjectRunID",
                                                "type": "Expression"
                                            },
                                            "ValidationDetails": {
                                                "value": "@pipeline().parameters.ValidationDetails",
                                                "type": "Expression"
                                            },
                                            "SourceID": {
                                                "value": "@pipeline().parameters.TaskDetails.SourceID",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "securestring"
                    },
                    "SourceSQL": {
                        "type": "string"
                    },
                    "TargetBLOBFolder": {
                        "type": "string"
                    },
                    "TargetBLOBName": {
                        "type": "string"
                    },
                    "ValidationDetails": {
                        "type": "object"
                    },
                    "ProjectRunID": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "SQL Azure"
                },
                "annotations": [],
                "lastPublishTime": "2021-06-28T03:15:46Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SRC_SQLAzure')]",
                "[concat(variables('factoryId'), '/datasets/RAW_ADLS_JSON')]",
                "[concat(variables('factoryId'), '/linkedServices/LS-AzureSqlDatabase_Ctrldb')]",
                "[concat(variables('factoryId'), '/pipelines/04-DL-Load-Raw-to-Delta-Table')]",
                "[concat(variables('factoryId'), '/pipelines/recon-record-validation')]"
            ]
        }
    ]
}