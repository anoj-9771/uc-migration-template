{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "LS_AzureDatalake",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_AzureDatalake",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          dimMeterSK as long,",
				"          sourceSystemCode as string,",
				"          meterId as string,",
				"          meterSize as string,",
				"          waterMeterType as string,",
				"          {_DLCuratedZoneTimeStamp} as timestamp,",
				"          {_RecordStart} as timestamp,",
				"          {_RecordEnd} as timestamp,",
				"          {_RecordDeleted} as integer,",
				"          {_RecordCurrent} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: true,",
				"     format: 'delta',",
				"     fileSystem: 'curated',",
				"     folderPath: 'dimmeter/delta') ~> source1",
				"source1 aggregate(meterId = count(1)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'curated',",
				"     folderPath: 'test1',",
				"     overwrite:true,",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          MeterCount = meterId",
				"     )) ~> sink1"
			]
		}
	}
}