{
	"name": "06-Curated-Main",
	"properties": {
		"activities": [
			{
				"name": "LU-ProcessingPeriod",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set-ClusterType",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[CTL].[CuratedGetProcessingPeriod]",
						"storedProcedureParameters": {
							"Project": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.TargetLocation",
									"type": "Expression"
								}
							},
							"SubjectArea": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.SourceLocation",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlDatabase_Ctrldb",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Log Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SP-Log-Curated-End",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateTaskLog]",
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": null,
							"type": "String"
						},
						"ExecutionLogId": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Output": {
							"value": "Curated Load Complete",
							"type": "String"
						},
						"Status": {
							"value": "Success",
							"type": "String"
						},
						"TaskId": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.TaskId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			},
			{
				"name": "SP-Log-Curated-Start",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-ProcessingPeriod",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[CuratedLogStart]",
					"storedProcedureParameters": {
						"BatchExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"EndPeriod": {
							"value": {
								"value": "@activity('LU-ProcessingPeriod').output.firstRow.ProcessingEndDate",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"Project": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.TargetLocation",
								"type": "Expression"
							},
							"type": "String"
						},
						"StartPeriod": {
							"value": {
								"value": "@activity('LU-ProcessingPeriod').output.firstRow.ProcessingStartDate",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"SubjectArea": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.SourceLocation",
								"type": "Expression"
							},
							"type": "String"
						},
						"TaskExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			},
			{
				"name": "SP-Log-Curated-End",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SW-Project-Custom",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[CuratedLogComplete]",
					"storedProcedureParameters": {
						"BatchExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"TaskExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			},
			{
				"name": "Log DB Failure LU Processing",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-ProcessingPeriod",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateTaskLog]",
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": {
								"value": "Error Occurred during Curated load on Lookup for Processing Period",
								"type": "Expression"
							},
							"type": "String"
						},
						"ExecutionLogId": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Output": {
							"value": null,
							"type": "String"
						},
						"Status": {
							"value": "Failure",
							"type": "String"
						},
						"TaskId": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.TaskId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			},
			{
				"name": "Log DB Failure SP Processing Start",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SP-Log-Curated-Start",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateTaskLog]",
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": {
								"value": "Error Occurred during Curated load on SP for Processing Period",
								"type": "Expression"
							},
							"type": "String"
						},
						"ExecutionLogId": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Output": {
							"value": null,
							"type": "String"
						},
						"Status": {
							"value": "Failure",
							"type": "String"
						},
						"TaskId": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.TaskId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			},
			{
				"name": "Set-ClusterType",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ClusterType",
					"value": {
						"value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If-Cluster-Interactive",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "SP-Log-Curated-Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('ClusterType'), 'interactive')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "DB-Load-Curated-Job",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": {
									"value": "@pipeline().parameters.TaskDetails.Command",
									"type": "Expression"
								},
								"baseParameters": {
									"start_date": {
										"value": "@activity('LU-ProcessingPeriod').output.firstRow.ProcessingStartDate",
										"type": "Expression"
									},
									"end_date": {
										"value": "@activity('LU-ProcessingPeriod').output.firstRow.ProcessingEndDate",
										"type": "Expression"
									}
								},
								"libraries": [
									{
										"maven": {
											"coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
										}
									}
								]
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureDatabricks_JobCluster",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
										"type": "Expression"
									},
									"DataBricksClusterType": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
										"type": "Expression"
									},
									"DataBricksClusterVersion": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
										"type": "Expression"
									},
									"DataBricksWorkerNodes": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SET-ReturnValue-Job",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "DB-Load-Curated-Job",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "NoteBookReturnValue",
								"value": {
									"value": "@if(contains(activity('DB-Load-Curated-Job').output, 'runOutput'),\nstring(activity('DB-Load-Curated-Job').output.runOutput), '')",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "DB-Load-Curated-Interactive",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": {
									"value": "@pipeline().parameters.TaskDetails.Command",
									"type": "Expression"
								},
								"baseParameters": {
									"start_date": {
										"value": "@activity('LU-ProcessingPeriod').output.firstRow.ProcessingStartDate",
										"type": "Expression"
									},
									"end_date": {
										"value": "@activity('LU-ProcessingPeriod').output.firstRow.ProcessingEndDate",
										"type": "Expression"
									}
								},
								"libraries": [
									{
										"maven": {
											"coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
										}
									}
								]
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureDatabricks_DefinedCluster",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
										"type": "Expression"
									},
									"clusterId": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SET-ReturnValue-Interactive",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "DB-Load-Curated-Interactive",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "NoteBookReturnValue",
								"value": {
									"value": "@if(contains(activity('DB-Load-Curated-Interactive').output, 'runOutput'),\nstring(activity('DB-Load-Curated-Interactive').output.runOutput), '')",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Log DB Failure SP Curated End",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SP-Log-Curated-End",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateTaskLog]",
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": {
								"value": "Error Occurred during Curated load on SP End",
								"type": "Expression"
							},
							"type": "String"
						},
						"ExecutionLogId": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Output": {
							"value": null,
							"type": "String"
						},
						"Status": {
							"value": "Failure",
							"type": "String"
						},
						"TaskId": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.TaskId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			},
			{
				"name": "Log DB Failure Curated",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "If-Cluster-Interactive",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateTaskLog]",
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": {
								"value": "Error Occurred during Curated load on DataBricks",
								"type": "Expression"
							},
							"type": "String"
						},
						"ExecutionLogId": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Output": {
							"value": null,
							"type": "String"
						},
						"Status": {
							"value": "Failure",
							"type": "String"
						},
						"TaskId": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.TaskId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			},
			{
				"name": "SW-Project-Custom",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "If-Cluster-Interactive",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.TaskDetails.ProjectName",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "Qualtrics",
							"activities": [
								{
									"name": "EP-Qualtrics",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "06-Curated-Qualtrics",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TaskDetails": {
												"value": "@pipeline().parameters.TaskDetails",
												"type": "Expression"
											},
											"NotebookOutput": {
												"value": "@variables('NoteBookReturnValue')",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "UMD",
							"activities": [
								{
									"name": "EP-UMD",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "06-Curated-UMD",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								}
							]
						},
						{
							"value": "NATAvetmiss",
							"activities": [
								{
									"name": "EP-NAT-Avetmiss",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "06-Curated-NAT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TaskDetails": {
												"value": "@pipeline().parameters.TaskDetails",
												"type": "Expression"
											},
											"NotebookOutput": {
												"value": "@variables('NoteBookReturnValue')",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "NATEReporting",
							"activities": [
								{
									"name": "EP-NAT-eReporting",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "06-Curated-NAT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TaskDetails": {
												"value": "@pipeline().parameters.TaskDetails",
												"type": "Expression"
											},
											"NotebookOutput": {
												"value": "@variables('NoteBookReturnValue')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Log Custom Action Failure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SW-Project-Custom",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateTaskLog]",
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": {
								"value": "Error Occurred during Curated Custom Action",
								"type": "Expression"
							},
							"type": "String"
						},
						"ExecutionLogId": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Output": {
							"value": null,
							"type": "String"
						},
						"Status": {
							"value": "Failure",
							"type": "String"
						},
						"TaskId": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.TaskId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			}
		],
		"parameters": {
			"TaskDetails": {
				"type": "object",
				"defaultValue": {
					"SourceType": "BLOB Storage (csv)",
					"SourceServer": "datalake-SasToken",
					"SourceName": "Qualtrics_Qualtrics",
					"SourceLocation": "Qualtrics",
					"AdditionalProperty": "",
					"Processor": "databricks-token|0925-064956-carps143|Standard_DS5_v2|6.4.x-scala2.11|2:8|interactive",
					"ProjectName": "Qualtrics1",
					"TargetType": "SQL Server",
					"TargetName": "Qualtrics_Qualtrics",
					"TargetLocation": "Qualtrics",
					"TargetServer": "AzureSqlDatabase-SQLDB",
					"DataLoadMode": "0",
					"DeltaExtract": null,
					"CDCSource": null,
					"TruncateTarget": null,
					"UpsertTarget": null,
					"TrackChanges": false,
					"LoadToSqlEDW": true,
					"TaskName": "Qualtrics_Qualtrics",
					"ControlStageId": 3,
					"TaskId": 813,
					"StageSequence": 300,
					"StageName": "Trusted to Curated",
					"SourceId": 851,
					"TargetId": 830,
					"ObjectGrain": "Day",
					"CommandTypeId": 8,
					"Watermarks": null,
					"WatermarksDT": null,
					"WatermarkColumn": "",
					"BusinessKeyColumn": "",
					"Command": "/Users/rahul.agrawal1@tafenswtest.edu.au/build/curated/Qualtrics/QualtricsMaster-Test",
					"LastLoadedFile": null
				}
			},
			"TaskExecutionLogId": {
				"type": "int",
				"defaultValue": 0
			},
			"BatchLogId": {
				"type": "int",
				"defaultValue": 0
			},
			"ProjectRunID": {
				"type": "string"
			}
		},
		"variables": {
			"ClusterType": {
				"type": "String"
			},
			"NoteBookReturnValue": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Curated"
		},
		"annotations": []
	}
}