{
	"name": "qualtrics-load",
	"properties": {
		"activities": [
			{
				"name": "get-keyvault-clientId",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "https://@{pipeline().globalParameters.keyVaultName}.vault.azure.net/secrets/qualtrics-auth-clientId?api-version=7.0",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "set-keyvault-clientId",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get-keyvault-clientId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "auth-client-id",
					"value": {
						"value": "@activity('get-keyvault-clientId').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "create-bearer-token",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "set-keyvault-clientId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 2,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://syd1.qualtrics.com/oauth2/token",
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"body": {
						"value": "grant_type=client_credentials&scope=read:surveys",
						"type": "Expression"
					},
					"authentication": {
						"type": "Basic",
						"username": {
							"value": "@variables('auth-client-id')",
							"type": "Expression"
						},
						"password": {
							"type": "AzureKeyVaultSecret",
							"store": {
								"referenceName": "LS-AzureKeyVault",
								"type": "LinkedServiceReference"
							},
							"secretName": "qualtrics-auth-clientSecret"
						}
					}
				}
			},
			{
				"name": "var-bearer-token",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "create-bearer-token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "bearer-token",
					"value": {
						"value": "@activity('create-bearer-token').output.access_token",
						"type": "Expression"
					}
				}
			},
			{
				"name": "copy-entity-list",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "var-bearer-token",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-root-folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 2,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"additionalHeaders": {
							"authorization": {
								"value": "bearer @{variables('bearer-token')}",
								"type": "Expression"
							}
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "REST_Binary",
						"type": "DatasetReference",
						"parameters": {
							"url": {
								"value": "@pipeline().parameters.task.SourceQuery",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DLS_Json",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@variables('OutputFullPath')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "set-root-folder",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "OutputFullPath",
					"value": {
						"value": "@replace(replace(replace(replace(replace(replace(\npipeline().parameters.task.RawPath\n,'$yyyy$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'yyyy'))\n,'$MM$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'MM'))\n,'$dd$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'dd'))\n,'$HH$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'HH'))\n,'$mm$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'mm'))\n,'$guid$', guid())",
						"type": "Expression"
					}
				}
			},
			{
				"name": "log-copy",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "copy-entity-list",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-message",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"ActivityType": "copy-data",
						"Message": {
							"value": "@{activity('copy-entity-list')}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "task-raw-path",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "copy-entity-list",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawPath",
						"Value": {
							"value": "@variables('OutputFullPath')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "qualtrics-failed",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "copy-entity-list",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": {
						"value": "@activity('copy-entity-list').output.errors[0].Message",
						"type": "Expression"
					},
					"errorCode": {
						"value": "@activity('copy-entity-list').output.errors[0].Code",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"task": {
				"type": "object"
			}
		},
		"variables": {
			"auth-client-id": {
				"type": "String"
			},
			"survey-list": {
				"type": "String"
			},
			"bearer-token": {
				"type": "String"
			},
			"export-status": {
				"type": "String"
			},
			"progress-id": {
				"type": "String"
			},
			"OutputFullPath": {
				"type": "String"
			}
		},
		"folder": {
			"name": "MDP-Framework/SourceHandler/Qualtrics"
		},
		"annotations": []
	}
}