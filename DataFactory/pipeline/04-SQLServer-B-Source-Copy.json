{
	"name": "04-SQLServer-B-Source-Copy",
	"properties": {
		"activities": [
			{
				"name": "SP-Record-Manifest_copy1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Set-ExtractDateTime",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-TargetDatalakePath",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[CreateManifestRecord]",
					"storedProcedureParameters": {
						"BatchExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.BatchExecutionLogID",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Container": {
							"value": "raw",
							"type": "String"
						},
						"EndCounter": {
							"value": {
								"value": "@json(string(pipeline().parameters.ValidationDetails)).ReturnValue",
								"type": "Expression"
							},
							"type": "String"
						},
						"FileName": {
							"value": {
								"value": "@pipeline().parameters.TargetBLOBName",
								"type": "Expression"
							},
							"type": "String"
						},
						"FolderName": {
							"value": {
								"value": "@pipeline().parameters.TargetBLOBFolder",
								"type": "Expression"
							},
							"type": "String"
						},
						"Records": {
							"value": {
								"value": "@pipeline().parameters.ValidationDetails.RecordCount",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"SourceObject": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"StartCounter": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.Watermarks",
								"type": "Expression"
							},
							"type": "String"
						},
						"TaskExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"DeltaColumn": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceFileName": {
							"value": "SQL",
							"type": "String"
						},
						"SourceFileDateStamp": {
							"value": {
								"value": "@variables('ExtractDateTime')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-Update-Manifest-Delta-Records",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "run-databricks-notebook-cluster",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateManifestDeltaRecords]",
					"storedProcedureParameters": {
						"BatchExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.BatchExecutionLogID",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"TaskExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"RecordsDeltaTable": {
							"value": {
								"value": "@variables('RowCount')",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"SourceFileDateStamp": {
							"value": {
								"value": "@variables('ExtractDateTime')",
								"type": "Expression"
							},
							"type": "String"
						},
						"RecordsTargetTable": {
							"value": {
								"value": "@activity('run-databricks-notebook-cluster').output.runOutput",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "EP-Record-Validation",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "SP-Update-Manifest-Delta-Records",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "recon-record-validation",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ProjectRunID": {
							"value": "@pipeline().parameters.ProjectRunID",
							"type": "Expression"
						},
						"ValidationDetails": {
							"value": "@pipeline().parameters.ValidationDetails",
							"type": "Expression"
						},
						"SourceID": {
							"value": "@pipeline().parameters.TaskDetails.SourceID",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Copy-TriggerFile-DataLake",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SP-Record-Manifest_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"additionalColumns": [
							{
								"name": "BatchExecutionId",
								"value": {
									"value": "@string(pipeline().parameters.BatchExecutionLogID)",
									"type": "Expression"
								}
							},
							{
								"name": "TaskExecutionLogId",
								"value": {
									"value": "@string(pipeline().parameters.TaskExecutionLogID)",
									"type": "Expression"
								}
							},
							{
								"name": "RawZonePipelineRunID",
								"value": {
									"value": "@pipeline().parameters.ProjectRunID",
									"type": "Expression"
								}
							},
							{
								"name": "WatermarkValue",
								"value": {
									"value": "@pipeline().parameters.WatermarkColumn",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['BatchExecutionId']"
								},
								"sink": {
									"path": "BatchExecutionId"
								}
							},
							{
								"source": {
									"path": "$['TaskExecutionLogId']"
								},
								"sink": {
									"path": "TaskExecutionLogId"
								}
							},
							{
								"source": {
									"path": "$['RawZonePipelineRunID']"
								},
								"sink": {
									"path": "RawZonePipelineRunID"
								}
							},
							{
								"source": {
									"path": "$['WatermarkValue']"
								},
								"sink": {
									"path": "WatermarkValue"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "RAW_ADLS_JSON_v2_NOCOMP",
						"type": "DatasetReference",
						"parameters": {
							"BlobPath": "triggers",
							"BlobName": "template.json"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "RAW_ADLS_JSON_v2_NOCOMP",
						"type": "DatasetReference",
						"parameters": {
							"BlobPath": "triggers",
							"BlobName": "trigger_batch_daily_sapslt.json"
						}
					}
				]
			},
			{
				"name": "SP-Update-Manifest-Value",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "run-databricks-notebook-cluster",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateManifestValue]",
					"storedProcedureParameters": {
						"BatchExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.BatchExecutionLogID",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"M_DeltaRecordCount": {
							"value": {
								"value": "@variables('RowCount')",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"SourceFileDateStamp": {
							"value": {
								"value": "@variables('ExtractDateTime')",
								"type": "Expression"
							},
							"type": "String"
						},
						"TaskExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogID",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"M_TotalNoRows": {
							"value": {
								"value": "@pipeline().parameters.ValidationDetails.RecordCount",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"M_Message": {
							"value": null,
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Switch-SLT-Tables",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "SP-Record-Manifest_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.TaskDetails.SourceName",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "isu_AUSP",
							"activities": [
								{
									"name": "Copy-Source-DataLake-AUSP",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"additionalColumns": [
												{
													"name": "_DLRawZoneTimeStamp",
													"value": {
														"value": "@formatDateTime(convertFromUtc(utcnow(),'AUS Eastern Standard Time'),'yyyy-MM-dd HH:mm:ss')",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@pipeline().parameters.SQLCommand",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "DynamicRange",
											"partitionSettings": {
												"partitionColumnName": {
													"value": "@{pipeline().parameters.TaskDetails.PartitionColumn}",
													"type": "Expression"
												},
												"partitionUpperBound": "",
												"partitionLowerBound": ""
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"parallelCopies": 32,
										"dataIntegrationUnits": 8,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "MANDT",
														"type": "String"
													},
													"sink": {
														"name": "MANDT",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "OBJEK",
														"type": "String"
													},
													"sink": {
														"name": "OBJEK",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATINN",
														"type": "String"
													},
													"sink": {
														"name": "ATINN",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATZHL",
														"type": "String"
													},
													"sink": {
														"name": "ATZHL",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "MAFID",
														"type": "String"
													},
													"sink": {
														"name": "MAFID",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "KLART",
														"type": "String"
													},
													"sink": {
														"name": "KLART",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ADZHL",
														"type": "String"
													},
													"sink": {
														"name": "ADZHL",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATWRT",
														"type": "String"
													},
													"sink": {
														"name": "ATWRT",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATFLV",
														"type": "Double"
													},
													"sink": {
														"name": "ATFLV",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "ATAWE",
														"type": "String"
													},
													"sink": {
														"name": "ATAWE",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATFLB",
														"type": "Double"
													},
													"sink": {
														"name": "ATFLB",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "ATAW1",
														"type": "String"
													},
													"sink": {
														"name": "ATAW1",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATCOD",
														"type": "String"
													},
													"sink": {
														"name": "ATCOD",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATTLV",
														"type": "Double"
													},
													"sink": {
														"name": "ATTLV",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "ATTLB",
														"type": "Double"
													},
													"sink": {
														"name": "ATTLB",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "ATPRZ",
														"type": "String"
													},
													"sink": {
														"name": "ATPRZ",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATINC",
														"type": "Double"
													},
													"sink": {
														"name": "ATINC",
														"type": "Double"
													}
												},
												{
													"source": {
														"name": "ATAUT",
														"type": "String"
													},
													"sink": {
														"name": "ATAUT",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "AENNR",
														"type": "String"
													},
													"sink": {
														"name": "AENNR",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "DATUV",
														"type": "String"
													},
													"sink": {
														"name": "DATUV",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "LKENZ",
														"type": "String"
													},
													"sink": {
														"name": "LKENZ",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATIMB",
														"type": "String"
													},
													"sink": {
														"name": "ATIMB",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATZIS",
														"type": "String"
													},
													"sink": {
														"name": "ATZIS",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATSRT",
														"type": "String"
													},
													"sink": {
														"name": "ATSRT",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATVGLART",
														"type": "String"
													},
													"sink": {
														"name": "ATVGLART",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "DATUB",
														"type": "String"
													},
													"sink": {
														"name": "DATUB",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "DEC_VALUE_FROM",
														"type": "Decimal"
													},
													"sink": {
														"name": "DEC_VALUE_FROM"
													}
												},
												{
													"source": {
														"name": "DEC_VALUE_TO",
														"type": "Decimal"
													},
													"sink": {
														"name": "DEC_VALUE_TO"
													}
												},
												{
													"source": {
														"name": "CURR_VALUE_FROM",
														"type": "Decimal"
													},
													"sink": {
														"name": "CURR_VALUE_FROM"
													}
												},
												{
													"source": {
														"name": "CURR_VALUE_TO",
														"type": "Decimal"
													},
													"sink": {
														"name": "CURR_VALUE_TO"
													}
												},
												{
													"source": {
														"name": "CURRENCY",
														"type": "String"
													},
													"sink": {
														"name": "CURRENCY",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "DATE_FROM",
														"type": "String"
													},
													"sink": {
														"name": "DATE_FROM",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "DATE_TO",
														"type": "String"
													},
													"sink": {
														"name": "DATE_TO",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "TIME_FROM",
														"type": "String"
													},
													"sink": {
														"name": "TIME_FROM",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "TIME_TO",
														"type": "String"
													},
													"sink": {
														"name": "TIME_TO",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ATINN_INT",
														"type": "Int16"
													},
													"sink": {
														"name": "ATINN_INT",
														"type": "Int"
													}
												},
												{
													"source": {
														"name": "IS_DELETED",
														"type": "String"
													},
													"sink": {
														"name": "IS_DELETED",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "DELTA_TS",
														"type": "Decimal"
													},
													"sink": {
														"name": "DELTA_TS"
													}
												},
												{
													"source": {
														"name": "_DLRawZoneTimeStamp"
													},
													"sink": {
														"name": "_DLRawZoneTimeStamp",
														"type": "DateTime"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SRC_SQLSERVER",
											"type": "DatasetReference",
											"parameters": {
												"kvSecret": {
													"value": "@pipeline().parameters.TaskDetails.SourceServer",
													"type": "Expression"
												},
												"tableName": "AUSP",
												"schemaName": "dbo"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DLS_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"BlobPath": {
													"value": "@variables('TargetDatalakePath')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set-RowCount-AUSP",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy-Source-DataLake-AUSP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RowCount",
										"value": {
											"value": "@string(activity('Copy-Source-DataLake-AUSP').output.rowsCopied)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set-DeltaRowsReadCount-AUSP",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy-Source-DataLake-AUSP",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RowsRead",
										"value": {
											"value": "@string(activity('Copy-Source-DataLake-AUSP').output.rowsRead)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set-ErrorMesage-AUSP",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set-DeltaRowsReadCount-AUSP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ErrorMessage",
										"value": {
											"value": "@string(activity('Copy-Source-DataLake-AUSP').output.errors[0].Message)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set-ErrorCode-AUSP",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set-ErrorMesage-AUSP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "ErrorCode",
										"value": {
											"value": "@string(activity('Copy-Source-DataLake-AUSP').output.errors[0].Code)",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "Copy-Source-DataLake",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 2,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"additionalColumns": [
										{
											"name": "_DLRawZoneTimeStamp",
											"value": {
												"value": "@formatDateTime(convertFromUtc(utcnow(),'AUS Eastern Standard Time'),'yyyy-MM-dd HH:mm:ss')",
												"type": "Expression"
											}
										}
									],
									"sqlReaderQuery": {
										"value": "@pipeline().parameters.SQLCommand",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "DynamicRange",
									"partitionSettings": {
										"partitionColumnName": {
											"value": "@{pipeline().parameters.TaskDetails.PartitionColumn}",
											"type": "Expression"
										},
										"partitionUpperBound": "",
										"partitionLowerBound": ""
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"parallelCopies": 32,
								"dataIntegrationUnits": 8,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SRC_SQLSERVER",
									"type": "DatasetReference",
									"parameters": {
										"kvSecret": {
											"value": "@pipeline().parameters.TaskDetails.SourceServer",
											"type": "Expression"
										},
										"tableName": "erch",
										"schemaName": "eq1"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DLS_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"BlobPath": {
											"value": "@variables('TargetDatalakePath')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Set-RowCount",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy-Source-DataLake",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "RowCount",
								"value": {
									"value": "@string(activity('Copy-Source-DataLake').output.rowsCopied)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set-DeltaRowsReadCount",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy-Source-DataLake",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "RowsRead",
								"value": {
									"value": "@string(activity('Copy-Source-DataLake').output.rowsRead)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set-ErrorMesage",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set-DeltaRowsReadCount",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "ErrorMessage",
								"value": {
									"value": "@string(activity('Copy-Source-DataLake').output.errors[0].Message)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set-ErrorCode",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set-ErrorMesage",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "ErrorCode",
								"value": {
									"value": "@string(activity('Copy-Source-DataLake').output.errors[0].Code)",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Check-if-Zero-Delta-Records",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Switch-SLT-Tables",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('RowsRead'),'0')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Fail-SLT-Raw-Load",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@variables('ErrorMessage')",
									"type": "Expression"
								},
								"errorCode": {
									"value": "@variables('ErrorCode')",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "SP-Update-Manifest-Value-ZeroRecords",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateManifestValue]",
								"storedProcedureParameters": {
									"BatchExecutionLogID": {
										"value": {
											"value": "@pipeline().parameters.BatchExecutionLogID",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"M_DeltaRecordCount": {
										"value": {
											"value": "@variables('RowsRead')",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"SourceFileDateStamp": {
										"value": {
											"value": "@variables('ExtractDateTime')",
											"type": "Expression"
										},
										"type": "String"
									},
									"TaskExecutionLogID": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogID",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"M_TotalNoRows": {
										"value": {
											"value": "@pipeline().parameters.ValidationDetails.RecordCount",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"M_Message": {
										"value": null,
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP-Update-Manifest-Delta-Zero-Records",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateManifestDeltaRecords]",
								"storedProcedureParameters": {
									"BatchExecutionLogID": {
										"value": {
											"value": "@pipeline().parameters.BatchExecutionLogID",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"TaskExecutionLogID": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"RecordsDeltaTable": {
										"value": {
											"value": "@variables('RowsRead')",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"SourceFileDateStamp": {
										"value": {
											"value": "@variables('ExtractDateTime')",
											"type": "Expression"
										},
										"type": "String"
									},
									"RecordsTargetTable": {
										"value": {
											"value": "@variables('RowsRead')",
											"type": "Expression"
										},
										"type": "Int64"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "EP-Record-Validation-Zero-Delta",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "SP-Update-Manifest-Delta-Zero-Records",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "recon-record-validation",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"ProjectRunID": {
										"value": "@pipeline().parameters.ProjectRunID",
										"type": "Expression"
									},
									"ValidationDetails": {
										"value": "@pipeline().parameters.ValidationDetails",
										"type": "Expression"
									},
									"SourceID": {
										"value": "@pipeline().parameters.TaskDetails.SourceID",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Dummy1UponSkip",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "EP-Record-Validation",
						"dependencyConditions": [
							"Skipped"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			},
			{
				"name": "Dummy2UponSkip",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "SP-Update-Manifest-Value",
						"dependencyConditions": [
							"Skipped"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			},
			{
				"name": "Set-ExtractDateTime",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ExtractDateTime",
					"value": {
						"value": "@formatDateTime(convertFromUtc(utcnow(),'AUS Eastern Standard Time'), 'yyyyMMddHHmmss')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set-TargetDatalakePath",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "TargetDatalakePath",
					"value": {
						"value": "@toLower(concat('raw', '//', \npipeline().parameters.TaskDetails.TargetLocation, '//', \nformatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'yyyy'), '//',\nformatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'MM'), '//',\nformatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'dd'), '//',\nformatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'HH'), \nformatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'mm'), '//', pipeline().parameters.TaskDetails.SourceName, '_', \nguid(), '.parquet'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "run-databricks-notebook-cluster",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Switch-SLT-Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": {
						"value": "/build/raw/raw-load-delta-slt",
						"type": "Expression"
					},
					"baseParameters": {
						"taskDetails": {
							"value": "@{pipeline().parameters.TaskDetails}",
							"type": "Expression"
						},
						"rawPath": {
							"value": "@variables('TargetDatalakePath')",
							"type": "Expression"
						},
						"extractDateTimestamp": {
							"value": "@variables('ExtractDateTime')",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureDatabricks_DefinedCluster",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "databricks-token",
						"clusterId": {
							"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"SQLCommand": {
				"type": "string"
			},
			"BatchExecutionLogID": {
				"type": "int"
			},
			"TaskExecutionLogID": {
				"type": "int"
			},
			"WatermarkColumn": {
				"type": "string"
			},
			"TargetBLOBName": {
				"type": "string"
			},
			"TargetBLOBFolder": {
				"type": "string"
			},
			"TaskDetails": {
				"type": "object"
			},
			"ValidationDetails": {
				"type": "object"
			},
			"ProjectRunID": {
				"type": "string"
			},
			"SourceFileDateStamp": {
				"type": "string"
			}
		},
		"variables": {
			"RecordsWritten": {
				"type": "String"
			},
			"RecordsRead": {
				"type": "String"
			},
			"sltTimestamp": {
				"type": "String"
			},
			"RowCount": {
				"type": "String"
			},
			"ErrorMessage": {
				"type": "String"
			},
			"ErrorCode": {
				"type": "String"
			},
			"RowsRead": {
				"type": "String"
			},
			"ExtractDateTime": {
				"type": "String"
			},
			"TargetDatalakePath": {
				"type": "String"
			}
		},
		"folder": {
			"name": "SQL Server"
		},
		"annotations": [],
		"lastPublishTime": "2022-08-10T01:21:15Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}