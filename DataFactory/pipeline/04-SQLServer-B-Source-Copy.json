{
	"name": "04-SQLServer-B-Source-Copy",
	"properties": {
		"activities": [
			{
				"name": "Copy-Source-DataLake",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SP-Record-Manifest_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"additionalColumns": [
							{
								"name": "_DLRawZoneTimestamp",
								"value": {
									"value": "@formatDateTime(convertFromUtc(utcnow(),'AUS Eastern Standard Time'),'yyyy-MM-dd HH:mm:ss')",
									"type": "Expression"
								}
							}
						],
						"sqlReaderQuery": {
							"value": "@pipeline().parameters.SQLCommand",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "DynamicRange",
						"partitionSettings": {
							"partitionColumnName": {
								"value": "@{pipeline().parameters.TaskDetails.PartitionColumn}",
								"type": "Expression"
							},
							"partitionUpperBound": "",
							"partitionLowerBound": ""
						}
					},
					"sink": {
						"type": "AzureDatabricksDeltaLakeSink",
						"importSettings": {
							"type": "AzureDatabricksDeltaLakeImportCommand"
						}
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "LS_AzureDatalake",
							"type": "LinkedServiceReference"
						},
						"path": {
							"value": "@concat('raw/landing/isu_data/', pipeline().parameters.TaskDetails.TargetName)",
							"type": "Expression"
						},
						"enableCompression": false
					},
					"parallelCopies": 32,
					"dataIntegrationUnits": 8
				},
				"inputs": [
					{
						"referenceName": "SRC_SQLSERVER",
						"type": "DatasetReference",
						"parameters": {
							"kvSecret": {
								"value": "@pipeline().parameters.TaskDetails.SourceServer",
								"type": "Expression"
							},
							"tableName": "erch",
							"schemaName": "eq1"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_RAW_ADLS_DELTALAKE",
						"type": "DatasetReference",
						"parameters": {
							"TableName": {
								"value": "@pipeline().parameters.TaskDetails.TargetName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "SP-Record-Manifest_copy1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[CreateManifestRecord]",
					"storedProcedureParameters": {
						"BatchExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.BatchExecutionLogID",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Container": {
							"value": "raw",
							"type": "String"
						},
						"EndCounter": {
							"value": {
								"value": "@json(string(pipeline().parameters.ValidationDetails)).ReturnValue",
								"type": "Expression"
							},
							"type": "String"
						},
						"FileName": {
							"value": {
								"value": "@pipeline().parameters.TargetBLOBName",
								"type": "Expression"
							},
							"type": "String"
						},
						"FolderName": {
							"value": {
								"value": "@pipeline().parameters.TargetBLOBFolder",
								"type": "Expression"
							},
							"type": "String"
						},
						"Records": {
							"value": {
								"value": "@pipeline().parameters.ValidationDetails.RecordCount",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"SourceObject": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.SourceName",
								"type": "Expression"
							},
							"type": "String"
						},
						"StartCounter": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.Watermarks",
								"type": "Expression"
							},
							"type": "String"
						},
						"TaskExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"DeltaColumn": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"SourceFileName": {
							"value": "SQL",
							"type": "String"
						},
						"SourceFileDateStamp": {
							"value": "1",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-Update-Manifest-Delta-Records",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy-Source-DataLake",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateManifestDeltaRecords]",
					"storedProcedureParameters": {
						"BatchExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.BatchExecutionLogID",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"TaskExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"RecordsDeltaTable": {
							"value": {
								"value": "@activity('Copy-Source-DataLake').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"SourceFileDateStamp": {
							"value": {
								"value": "@pipeline().parameters.SourceFileDateStamp",
								"type": "Expression"
							},
							"type": "String"
						},
						"RecordsTargetTable": {
							"value": {
								"value": "@activity('Copy-Source-DataLake').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "EP-Record-Validation",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "SP-Update-Manifest-Delta-Records",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "recon-record-validation",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ProjectRunID": {
							"value": "@pipeline().parameters.ProjectRunID",
							"type": "Expression"
						},
						"ValidationDetails": {
							"value": "@pipeline().parameters.ValidationDetails",
							"type": "Expression"
						},
						"SourceID": {
							"value": "@pipeline().parameters.TaskDetails.SourceID",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Copy-TriggerFile-DataLake",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SP-Record-Manifest_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"additionalColumns": [
							{
								"name": "BatchExecutionId",
								"value": {
									"value": "@string(pipeline().parameters.BatchExecutionLogID)",
									"type": "Expression"
								}
							},
							{
								"name": "TaskExecutionLogId",
								"value": {
									"value": "@string(pipeline().parameters.TaskExecutionLogID)",
									"type": "Expression"
								}
							},
							{
								"name": "RawZonePipelineRunID",
								"value": {
									"value": "@pipeline().parameters.ProjectRunID",
									"type": "Expression"
								}
							},
							{
								"name": "WatermarkValue",
								"value": {
									"value": "@pipeline().parameters.WatermarkColumn",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['BatchExecutionId']"
								},
								"sink": {
									"path": "BatchExecutionId"
								}
							},
							{
								"source": {
									"path": "$['TaskExecutionLogId']"
								},
								"sink": {
									"path": "TaskExecutionLogId"
								}
							},
							{
								"source": {
									"path": "$['RawZonePipelineRunID']"
								},
								"sink": {
									"path": "RawZonePipelineRunID"
								}
							},
							{
								"source": {
									"path": "$['WatermarkValue']"
								},
								"sink": {
									"path": "WatermarkValue"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "RAW_ADLS_JSON_v2_NOCOMP",
						"type": "DatasetReference",
						"parameters": {
							"BlobPath": "triggers",
							"BlobName": "template.json"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "RAW_ADLS_JSON_v2_NOCOMP",
						"type": "DatasetReference",
						"parameters": {
							"BlobPath": "triggers",
							"BlobName": "trigger_batch_daily_sapslt.json"
						}
					}
				]
			},
			{
				"name": "SP-Update-Manifest-Value",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy-Source-DataLake",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateManifestValue]",
					"storedProcedureParameters": {
						"BatchExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.BatchExecutionLogID",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"M_DeltaRecordCount": {
							"value": {
								"value": "@variables('RecordsWritten')",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"SourceFileDateStamp": {
							"value": {
								"value": "Null",
								"type": "Expression"
							},
							"type": "String"
						},
						"TaskExecutionLogID": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogID",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"M_TotalNoRows": {
							"value": {
								"value": "@pipeline().parameters.ValidationDetails.RecordCount",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"M_Message": {
							"value": {
								"value": "Null",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"SQLCommand": {
				"type": "string"
			},
			"BatchExecutionLogID": {
				"type": "int"
			},
			"TaskExecutionLogID": {
				"type": "int"
			},
			"WatermarkColumn": {
				"type": "string"
			},
			"TargetBLOBName": {
				"type": "string"
			},
			"TargetBLOBFolder": {
				"type": "string"
			},
			"TaskDetails": {
				"type": "object"
			},
			"ValidationDetails": {
				"type": "object"
			},
			"ProjectRunID": {
				"type": "string"
			},
			"SourceFileDateStamp": {
				"type": "string"
			}
		},
		"variables": {
			"RecordsWritten": {
				"type": "String"
			},
			"RecordsRead": {
				"type": "String"
			}
		},
		"folder": {
			"name": "SQL Server"
		},
		"annotations": []
	}
}