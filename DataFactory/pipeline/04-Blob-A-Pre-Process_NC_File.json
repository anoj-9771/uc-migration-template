{
	"name": "04-Blob-A-Pre-Process_NC_File",
	"properties": {
		"activities": [
			{
				"name": "Set-ClusterType",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ClusterType",
					"value": {
						"value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If-ClusterType",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set-ClusterType",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('ClusterType'), 'interactive')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Notebook-preprocess-iot-bom-nc",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.02:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": {
									"value": "@variables('NoteBookURL')",
									"type": "Expression"
								},
								"baseParameters": {
									"file_object": {
										"value": "@pipeline().parameters.SourceFileName",
										"type": "Expression"
									},
									"source_param": {
										"value": "@string(pipeline().parameters.TaskDetails)",
										"type": "Expression"
									},
									"source_container": {
										"value": "@pipeline().parameters.SourceContainer",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureDatabricks_JobCluster",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
										"type": "Expression"
									},
									"DataBricksClusterType": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
										"type": "Expression"
									},
									"DataBricksClusterVersion": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
										"type": "Expression"
									},
									"DataBricksWorkerNodes": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
										"type": "Expression"
									}
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Notebook-preprocess-iot-bom-nc Interactive",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.02:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": {
									"value": "@variables('NoteBookURL')",
									"type": "Expression"
								},
								"baseParameters": {
									"file_object": {
										"value": "@pipeline().parameters.SourceFileName",
										"type": "Expression"
									},
									"source_param": {
										"value": "@string(pipeline().parameters.TaskDetails)",
										"type": "Expression"
									},
									"source_container": {
										"value": "@pipeline().parameters.SourceContainer",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureDatabricks_DefinedCluster",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
										"type": "Expression"
									},
									"clusterId": {
										"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Copy Blob File to ArchiveContainer",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "If-ClusterType",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "SRC_BLOB_BINARY",
						"type": "DatasetReference",
						"parameters": {
							"BlobContainer": {
								"value": "@pipeline().parameters.SourceContainer",
								"type": "Expression"
							},
							"BlobName": {
								"value": "@pipeline().parameters.SourceFileName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ARCHIVE_BLOB_BINARY",
						"type": "DatasetReference",
						"parameters": {
							"BlobContainer": {
								"value": "@concat(pipeline().parameters.ProjectName,'/',pipeline().parameters.RunDate,'/',pipeline().parameters.RunTime)",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Delete File from LandingBlob",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Copy Blob File to ArchiveContainer",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "SRC_BLOB_BINARY",
						"type": "DatasetReference",
						"parameters": {
							"BlobContainer": {
								"value": "@pipeline().parameters.SourceContainer",
								"type": "Expression"
							},
							"BlobName": {
								"value": "@pipeline().parameters.SourceFileName",
								"type": "Expression"
							}
						}
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "LS_AzureDatalake",
							"type": "LinkedServiceReference"
						},
						"path": "assurance"
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			}
		],
		"parameters": {
			"BatchLogID": {
				"type": "int",
				"defaultValue": 1
			},
			"TaskExecutionLogId": {
				"type": "int",
				"defaultValue": 1
			},
			"TaskDetails": {
				"type": "object"
			},
			"SourceContainer": {
				"type": "string",
				"defaultValue": "test"
			},
			"ProjectRunID": {
				"type": "string"
			},
			"SourceFileName": {
				"type": "string",
				"defaultValue": "0UC_DEVICEH_ATTR_20211025142337.json"
			},
			"ProjectName": {
				"type": "string"
			},
			"RunDate": {
				"type": "string"
			},
			"RunTime": {
				"type": "string"
			}
		},
		"variables": {
			"TargetTableRecordCount": {
				"type": "String"
			},
			"ClusterType": {
				"type": "String",
				"defaultValue": "interactive"
			},
			"NoteBookURL": {
				"type": "String",
				"defaultValue": "/build/raw/preprocess-iot-bom-nc"
			},
			"DataFileRecordCount": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Pre-Process"
		},
		"annotations": [],
		"lastPublishTime": "2021-06-30T03:14:35Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}