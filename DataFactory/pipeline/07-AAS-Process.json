{
	"name": "07-AAS-Process",
	"properties": {
		"activities": [
			{
				"name": "get-key-vault-client_id",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@replace('https://$KEYVAULTNAME$.vault.azure.net/secrets/appzebi01id?api-version=7.0', '$KEYVAULTNAME$', pipeline().parameters.keyVaultName)",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "get-key-vault-client_secret",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@replace('https://$KEYVAULTNAME$.vault.azure.net/secrets/appzebi01secret?api-version=7.0', '$KEYVAULTNAME$', pipeline().parameters.keyVaultName)",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "get-token",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "set-oauth-url",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-oauth-body",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@variables('oauthUrl')",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"body": {
						"value": "@variables('oauthBody')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "aas-process",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "set-token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@replace(replace(\n'https://australiaeast.asazure.windows.net/servers/$AASSERVER$/models/$MODELNAME$/refreshes'\n,'$AASSERVER$', pipeline().parameters.aasName)\n,'$MODELNAME$', pipeline().parameters.modelName)",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Authorization": {
							"value": "@concat('Bearer ', variables('token'))",
							"type": "Expression"
						},
						"Content-Type": "application/json",
						"Accept-Encoding": "gzip, deflate, br",
						"Connection": "keep-alive",
						"User-Agent": "PostmanRuntime/7.26.1"
					},
					"body": {
						"value": "@pipeline().parameters.processCommand",
						"type": "Expression"
					}
				}
			},
			{
				"name": "get-key-vault-directory-id",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@replace('https://$KEYVAULTNAME$.vault.azure.net/secrets/directoryid?api-version=7.0', '$KEYVAULTNAME$', pipeline().parameters.keyVaultName)",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "get-key-vault-subscription-id",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@replace('https://$KEYVAULTNAME$.vault.azure.net/secrets/subscription-id?api-version=7.0', '$KEYVAULTNAME$', pipeline().parameters.keyVaultName)",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "set-token",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get-token",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-token-timestamp",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "token",
					"value": {
						"value": "@activity('get-token').output.access_token",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set-oauth-url",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get-key-vault-directory-id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "oauthUrl",
					"value": {
						"value": "@replace('https://login.microsoftonline.com/$DIRECTORYID$/oauth2/token', '$DIRECTORYID$', activity('get-key-vault-directory-id').output.value)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set-oauth-body",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get-key-vault-client_id",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "get-key-vault-client_secret",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "get-key-vault-subscription-id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "oauthBody",
					"value": {
						"value": "@replace(replace(replace(\n'grant_type=client_credentials&client_id=$CLIENTID$&client_secret=$CLIENTSECRET$&resource=$AUDIENCE$'\n,'$CLIENTID$', activity('get-key-vault-client_id').output.value)\n,'$CLIENTSECRET$', activity('get-key-vault-client_secret').output.value)\n,'$AUDIENCE$', variables('audience'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set-token-timestamp",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "set-oauth-url",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "tokenTimestamp",
					"value": {
						"value": "@string(div(ticks(utcnow()), 6000000))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "loop-until-succeeded",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "check-error",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('inProgressCount'), '0')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "loop-pause",
							"type": "Wait",
							"dependsOn": [
								{
									"activity": "loop-set-inProgressCount",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": {
									"value": "@if(equals(variables('inProgressCount'), '0'), 1, pipeline().parameters.waitSeconds)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "loop-set-inProgressCount",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "loop-filter-inprogress",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "inProgressCount",
								"value": {
									"value": "@string(length(activity('loop-filter-inprogress').output.Value))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "loop-set-refreshId",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "loop-filter-inprogress",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "refreshId",
								"value": {
									"value": "@if(equals(length(activity('loop-filter-inprogress').output.Value), 0), '', activity('loop-filter-inprogress').output.Value[0].refreshId)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "loop-aas-get-refreshes",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "if-token-expired",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@replace(replace(\n'https://australiaeast.asazure.windows.net/servers/$AASSERVER$/models/$MODELNAME$/refreshes'\n,'$AASSERVER$', pipeline().parameters.aasName)\n,'$MODELNAME$', pipeline().parameters.modelName)",
									"type": "Expression"
								},
								"method": "GET",
								"headers": {
									"Authorization": {
										"value": "@concat('Bearer ', variables('token'))",
										"type": "Expression"
									}
								},
								"body": {
									"value": "@pipeline().parameters.processCommand",
									"type": "Expression"
								}
							}
						},
						{
							"name": "loop-filter-inprogress",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "loop-aas-get-refreshes",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@json(activity('loop-aas-get-refreshes').output.Response)",
									"type": "Expression"
								},
								"condition": {
									"value": "@equals(item().status, 'inProgress')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "if-token-expired",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(sub(int(div(ticks(utcnow()), 6000000)), int(variables('tokenTimestamp'))), int(variables('tokenExpiry')))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "loop-get-token",
										"type": "WebActivity",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": true,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"url": {
												"value": "@variables('oauthUrl')",
												"type": "Expression"
											},
											"method": "POST",
											"headers": {
												"Content-Type": "application/x-www-form-urlencoded"
											},
											"body": {
												"value": "@variables('oauthBody')",
												"type": "Expression"
											}
										}
									},
									{
										"name": "loop-set-token",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "loop-get-token",
												"dependencyConditions": [
													"Succeeded"
												]
											},
											{
												"activity": "loop-set-token-timestamp",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "token",
											"value": {
												"value": "@activity('loop-get-token').output.access_token",
												"type": "Expression"
											}
										}
									},
									{
										"name": "loop-set-token-timestamp",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "tokenTimestamp",
											"value": {
												"value": "@string(div(ticks(utcnow()), 6000000))",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "check-error",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "aas-process",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "errorMessage",
					"value": {
						"value": "@string(if(equals(activity('aas-process').output.status, 'failed'), div(1, 0), 0))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set-error-message",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "check-error",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "errorMessage",
					"value": {
						"value": "@activity('aas-process').output.messages[0].message",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"resourceGroupName": {
				"type": "string",
				"defaultValue": "ZERGBI01T"
			},
			"keyVaultName": {
				"type": "string",
				"defaultValue": "ZEKVBI01T"
			},
			"aasName": {
				"type": "string",
				"defaultValue": "ZEASBI01T"
			},
			"modelName": {
				"type": "string",
				"defaultValue": "CourseEnrolment"
			},
			"processCommand": {
				"type": "string",
				"defaultValue": {
					"Type": "Full",
					"Objects": [
						{
							"database": "CourseEnrolment",
							"table": "Report Date"
						}
					]
				}
			},
			"waitSeconds": {
				"type": "int",
				"defaultValue": 60
			}
		},
		"variables": {
			"audience": {
				"type": "String",
				"defaultValue": "https://*.asazure.windows.net/"
			},
			"token": {
				"type": "String"
			},
			"tokenExpiry": {
				"type": "String",
				"defaultValue": "3600"
			},
			"tokenTimestamp": {
				"type": "String"
			},
			"oauthUrl": {
				"type": "String"
			},
			"oauthBody": {
				"type": "String"
			},
			"inProgressCount": {
				"type": "String"
			},
			"refreshId": {
				"type": "String"
			},
			"errorMessage": {
				"type": "String"
			}
		},
		"folder": {
			"name": "AAS"
		},
		"annotations": []
	}
}