{
	"name": "scctv-main-daily-orchestration",
	"properties": {
		"activities": [
			{
				"name": "run-deployment-pipeline",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "scctv-deployment-pipeline",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "run-high-priority-pipeline",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "check-high-priority-que-videos-exist",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('check-high-priority-que-videos-exist').output.exists, true)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "download-high-queue-videos",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "scctv-download-high-queue-videos",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"processStartTime": {
										"value": "@pipeline().parameters.processStartTime",
										"type": "Expression"
									},
									"processEndTime": {
										"value": "@pipeline().parameters.processEndTime",
										"type": "Expression"
									},
									"kalturaId": {
										"value": "@pipeline().parameters.kalturaId",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "execute-AI-pipeline-high-priority",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "download-high-queue-videos",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "scctv-AI-pipeline-high",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DatabricksJobName": "sewer-cctv-pipeline"
								}
							}
						}
					]
				}
			},
			{
				"name": "check-high-priority-que-videos-exist",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "run-deployment-pipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "kaltura_video_que_high_inbound_blob",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "run-low-priority-pipeline",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "check-low-priority-que-videos-exist",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('check-low-priority-que-videos-exist').output.exists, true)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "download-low-queue-videos",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "scctv-download-low-queue-videos",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"processStartTime": {
										"value": "@pipeline().parameters.processStartTime",
										"type": "Expression"
									},
									"processEndTime": {
										"value": "@pipeline().parameters.processEndTime",
										"type": "Expression"
									},
									"kalturaId": {
										"value": "@pipeline().parameters.kalturaId",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "execute-AI-pipeline-low-priority",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "download-low-queue-videos",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "scctv-AI-pipeline-low",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DatabricksJobName": "sewer-cctv-pipeline"
								}
							}
						}
					]
				}
			},
			{
				"name": "check-low-priority-que-videos-exist",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "if-inbound-videos-exist",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "kaltura_video_que_low_inbound_blob",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "set-secret-variable",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get-bearer-token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "DatabricksSecret",
					"value": {
						"value": "@activity('get-bearer-token').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "get-bearer-token",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://', pipeline().globalParameters.keyVaultName, '.vault.azure.net/secrets/databricks-token?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "check-kaltura-inbound-exists",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "set-job-pool-id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "kaltura_metadata_inbound_blob",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "if-kaltura-inbound-exists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "check-kaltura-inbound-exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('check-kaltura-inbound-exists').output.exists, true)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "process-kaltura-json",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "scctv-process-kaltura-json",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"JobPoolId": {
										"value": "@variables('JobPoolId')",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "get-databricks-job-pools",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "set-secret-variable",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "run-deployment-pipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://australiaeast.azuredatabricks.net/api/2.0/instance-pools/list",
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "Bearer @{variables('DatabricksSecret')}",
							"type": "Expression"
						}
					},
					"body": {
						"autoscale": {
							"min_workers": 2,
							"max_workers": 10
						},
						"cluster_name": "sewer-cctv",
						"spark_version": "10.4.x-cpu-ml-scala2.12",
						"spark_conf": {
							"spark.databricks.delta.preview.enabled": "true"
						},
						"ssh_public_keys": [],
						"autotermination_minutes": 60,
						"init_scripts": [],
						"instance_pool_id": "1024-005500-twain3-pool-jk2lh0go",
						"driver_instance_pool_id": "1024-005500-twain3-pool-jk2lh0go",
						"runtime_engine": "STANDARD"
					}
				}
			},
			{
				"name": "filter-job-pool-batch-exists",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "get-databricks-job-pools",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get-databricks-job-pools').output.instance_pools",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().instance_pool_name, 'SCCTV_POOL')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set-job-pool-id",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "filter-job-pool-batch-exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "JobPoolId",
					"value": {
						"value": "@string(activity('filter-job-pool-batch-exists').output.Value[0].instance_pool_id)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "check-high-inbound-videos-exist",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "run-high-priority-pipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "scctv_videos_inbound_blob_high",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "if-inbound-videos-exist",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "check-high-inbound-videos-exist",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('check-high-inbound-videos-exist').output.exists, true)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "execute-AI-pipeline-high-priority_2",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "scctv-AI-pipeline-high",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DatabricksJobName": "sewer-cctv-pipeline"
								}
							}
						}
					]
				}
			},
			{
				"name": "check-low-inbound-videos-exist",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "run-low-priority-pipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "scctv_videos_inbound_blob_low",
						"type": "DatasetReference"
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "if-low-inbound-videos-exist",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "check-low-inbound-videos-exist",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('check-low-inbound-videos-exist').output.exists, true)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "execute-AI-pipeline-low-priority-2",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "scctv-AI-pipeline-low",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DatabricksJobName": "sewer-cctv-pipeline"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"processStartTime": {
				"type": "int",
				"defaultValue": 18
			},
			"processEndTime": {
				"type": "int",
				"defaultValue": 6
			},
			"kalturaId": {
				"type": "string",
				"defaultValue": "107"
			}
		},
		"variables": {
			"video_filename": {
				"type": "String"
			},
			"complete": {
				"type": "String",
				"defaultValue": "false"
			},
			"fail": {
				"type": "String",
				"defaultValue": "false"
			},
			"ClusterId": {
				"type": "String"
			},
			"ClusterExists": {
				"type": "Boolean",
				"defaultValue": false
			},
			"DatabricksSecret": {
				"type": "String"
			},
			"test": {
				"type": "Boolean"
			},
			"JobPoolId": {
				"type": "String"
			}
		},
		"folder": {
			"name": "AI-ML/Sewer CCTV"
		},
		"annotations": []
	}
}