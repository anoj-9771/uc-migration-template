{
	"name": "util-job-pool-deployment",
	"properties": {
		"activities": [
			{
				"name": "get-databricks-job-pools",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://australiaeast.azuredatabricks.net/api/2.0/instance-pools/list",
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "Bearer @{pipeline().parameters.DatabricksSecret}",
							"type": "Expression"
						}
					},
					"body": {
						"autoscale": {
							"min_workers": 2,
							"max_workers": 10
						},
						"cluster_name": "sewer-cctv",
						"spark_version": "10.4.x-cpu-ml-scala2.12",
						"spark_conf": {
							"spark.databricks.delta.preview.enabled": "true"
						},
						"ssh_public_keys": [],
						"autotermination_minutes": 60,
						"init_scripts": [],
						"instance_pool_id": "1024-005500-twain3-pool-jk2lh0go",
						"driver_instance_pool_id": "1024-005500-twain3-pool-jk2lh0go",
						"runtime_engine": "STANDARD"
					}
				}
			},
			{
				"name": "check-job-pool-exists",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get-databricks-job-pools",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get-databricks-job-pools').output.instance_pools",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "check-pool-name-is-SCCTV-BATCHPOOL-DS4",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().instance_pool_name, pipeline().parameters.JobPoolName)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "set-job-pool-id-1",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "JobPoolId",
											"value": {
												"value": "@item().instance_pool_id",
												"type": "Expression"
											}
										}
									},
									{
										"name": "set-job-pool-exists",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "set-job-pool-id-1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "JobPoolExists",
											"value": true
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "if-job-pool-exists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "check-job-pool-exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('JobPoolExists'), true)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "create-job-pool",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://australiaeast.azuredatabricks.net/api/2.0/instance-pools/create",
								"method": "POST",
								"headers": {
									"Authorization": {
										"value": "Bearer @{pipeline().parameters.DatabricksSecret}",
										"type": "Expression"
									}
								},
								"body": {
									"value": "{\n    \"instance_pool_name\": \"@{pipeline().parameters.JobPoolName}\",\n    \"node_type_id\": \"@{pipeline().parameters.NodeTypeId}\",\n    \"min_idle_instances\": 0,\n    \"max_capacity\": @{pipeline().parameters.MaxCapacity},\n    \"idle_instance_autotermination_minutes\": @{pipeline().parameters.IdleTerminationTime},\n    \"custom_tags\": [\n        {\n            \"key\": \"Product\",\n            \"value\": \"@{pipeline().parameters.ApplicationTag}\"\n        }\n    ]\n}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "set-job-pool-exists-1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "set-job-pool-id",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "JobPoolExists",
								"value": true
							}
						},
						{
							"name": "set-job-pool-id",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "create-job-pool",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "JobPoolId",
								"value": {
									"value": "@activity('create-job-pool').output.instance_pool_id",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"DatabricksSecret": {
				"type": "string"
			},
			"JobPoolName": {
				"type": "string"
			},
			"NodeTypeId": {
				"type": "string",
				"defaultValue": "Standard_DS4_v2"
			},
			"ApplicationTag": {
				"type": "string"
			},
			"MaxCapacity": {
				"type": "string",
				"defaultValue": "10"
			},
			"IdleTerminationTime": {
				"type": "string",
				"defaultValue": "10"
			}
		},
		"variables": {
			"JobPoolExists": {
				"type": "Boolean",
				"defaultValue": false
			},
			"JobPoolId": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Utility"
		},
		"annotations": []
	}
}