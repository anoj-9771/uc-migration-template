{
	"name": "05-DL-Load-Raw-to-Cleansed",
	"properties": {
		"activities": [
			{
				"name": "LU-Manifest",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[CTL].[GetManifestCleansed]",
						"storedProcedureParameters": {
							"SourceObject": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.SourceName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlDatabase_Ctrldb",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Loop Manifest",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LU-Manifest",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU-Manifest').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "SP-UpdateManifest",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "If-ClusterType",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateManifestDLCleansed]",
								"storedProcedureParameters": {
									"BatchExecutionLogID": {
										"value": {
											"value": "@item().BatchExecutionLogID",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"SourceObject": {
										"value": {
											"value": "@item().SourceObject",
											"type": "Expression"
										},
										"type": "String"
									},
									"StartCounter": {
										"value": {
											"value": "@item().StartCounter",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "daf-sql-controldb-connectionstring"
								}
							}
						},
						{
							"name": "Set-ClusterType",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "ClusterType",
								"value": {
									"value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If-ClusterType",
							"description": "",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set-ClusterType",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(variables('ClusterType'), 'interactive')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Set-ReturnValue-Job",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Load-To-Cleansed-Zone-Job",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "ReturnValue",
											"value": {
												"value": "@string(activity('Load-To-Cleansed-Zone-Job').output.runOutput)",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Load-To-Cleansed-Zone-Job",
										"type": "DatabricksNotebook",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"notebookPath": {
												"value": "@pipeline().parameters.TaskDetails.Command",
												"type": "Expression"
											},
											"baseParameters": {
												"source_object": {
													"value": "@pipeline().parameters.TaskDetails.SourceName",
													"type": "Expression"
												},
												"start_counter": {
													"value": "@item().StartCounter",
													"type": "Expression"
												},
												"end_counter": {
													"value": "@item().EndCounter",
													"type": "Expression"
												},
												"delta_column": {
													"value": "@item().DeltaColumn",
													"type": "Expression"
												},
												"source_param": {
													"value": "@string(pipeline().parameters.TaskDetails)",
													"type": "Expression"
												}
											},
											"libraries": [
												{
													"maven": {
														"coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
													}
												}
											]
										},
										"linkedServiceName": {
											"referenceName": "LS-AzureDatabricks_JobCluster",
											"type": "LinkedServiceReference",
											"parameters": {
												"kvSecret": {
													"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
													"type": "Expression"
												},
												"DataBricksClusterType": {
													"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
													"type": "Expression"
												},
												"DataBricksClusterVersion": {
													"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
													"type": "Expression"
												},
												"DataBricksWorkerNodes": {
													"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
													"type": "Expression"
												}
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Set-Return-Interactive",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Load-To-Cleansed-Zone-Interactive",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "ReturnValue",
											"value": {
												"value": "@string(activity('Load-To-Cleansed-Zone-Interactive').output.runOutput)",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Load-To-Cleansed-Zone-Interactive",
										"type": "DatabricksNotebook",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"notebookPath": {
												"value": "@pipeline().parameters.TaskDetails.Command",
												"type": "Expression"
											},
											"baseParameters": {
												"source_object": {
													"value": "@pipeline().parameters.TaskDetails.SourceName",
													"type": "Expression"
												},
												"start_counter": {
													"value": "@item().StartCounter",
													"type": "Expression"
												},
												"end_counter": {
													"value": "@item().EndCounter",
													"type": "Expression"
												},
												"delta_column": {
													"value": "@item().DeltaColumn",
													"type": "Expression"
												},
												"source_param": {
													"value": "@string(pipeline().parameters.TaskDetails)",
													"type": "Expression"
												}
											},
											"libraries": [
												{
													"maven": {
														"coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
													}
												}
											]
										},
										"linkedServiceName": {
											"referenceName": "LS-AzureDatabricks_DefinedCluster",
											"type": "LinkedServiceReference",
											"parameters": {
												"kvSecret": {
													"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
													"type": "Expression"
												},
												"clusterId": {
													"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Log Failure DL Cleansed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Loop Manifest",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "[CTL].[UpdateTaskLog]",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": "Error Occurred during Trusted Zone load",
							"type": "String"
						},
						"ExecutionLogId": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Output": {
							"value": null
						},
						"Status": {
							"value": "Failure",
							"type": "String"
						},
						"TaskId": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.TaskId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "daf-sql-controldb-connectionstring"
					}
				}
			},
			{
				"name": "Log Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Loop Manifest",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "[CTL].[UpdateTaskLog]",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": null,
							"type": "String"
						},
						"ExecutionLogId": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Output": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
								"type": "Expression"
							},
							"type": "String"
						},
						"Status": {
							"value": "Success",
							"type": "String"
						},
						"TaskId": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.TaskId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "daf-sql-controldb-connectionstring"
					}
				}
			}
		],
		"parameters": {
			"TaskDetails": {
				"type": "object"
			},
			"BatchLogId": {
				"type": "int"
			},
			"TaskExecutionLogId": {
				"type": "int"
			},
			"ProjectRunID": {
				"type": "string"
			}
		},
		"variables": {
			"ReturnValue": {
				"type": "String"
			},
			"ClusterType": {
				"type": "String"
			},
			"SourceContainer": {
				"type": "String",
				"defaultValue": "raw"
			},
			"SourceDirectory": {
				"type": "String"
			},
			"SourceFileName": {
				"type": "String"
			},
			"TargetContainer": {
				"type": "String",
				"defaultValue": "cleansed"
			},
			"TargetDirectory": {
				"type": "String"
			},
			"TargetFileName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Data Lake"
		},
		"annotations": [],
		"lastPublishTime": "2021-06-21T11:04:49Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}