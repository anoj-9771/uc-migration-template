{
	"name": "wait-until-databricks-job-complete",
	"properties": {
		"activities": [
			{
				"name": "wait_for_job_status_complete",
				"type": "Until",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@or(equals(activity('check-job-status-register-model').output.metadata.state.life_cycle_state, 'TERMINATED'), or(equals(activity('check-job-status-register-model').output.metadata.state.life_cycle_state, 'SKIPPED'),equals(activity('check-job-status-register-model').output.metadata.state.life_cycle_state, 'INTERNAL_ERROR')))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "check-job-status-register-model",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "set-url-variable",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat(variables('PoolUrl'),'/api/2.1/jobs/runs/get-output?run_id=', pipeline().parameters.RunID)",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "IntegrationRuntime-Azure-ManagedVnet-01",
									"type": "IntegrationRuntimeReference"
								},
								"method": "GET",
								"headers": {
									"Authorization": {
										"value": "Bearer @{pipeline().parameters.DatabricksSecret}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "wait",
							"type": "Wait",
							"dependsOn": [
								{
									"activity": "check-job-status-register-model",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 15
							}
						},
						{
							"name": "get-url",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat('https://', pipeline().globalParameters.keyVaultName, '.vault.azure.net/secrets/edp-databricks-02-url?api-version=7.0')",
									"type": "Expression"
								},
								"method": "GET",
								"authentication": {
									"type": "MSI",
									"resource": "https://vault.azure.net"
								}
							}
						},
						{
							"name": "set-url-variable",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "get-url",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "PoolUrl",
								"value": {
									"value": "@activity('get-url').output.value",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			}
		],
		"parameters": {
			"RunID": {
				"type": "string"
			},
			"DatabricksSecret": {
				"type": "string"
			}
		},
		"variables": {
			"RegisterModelState": {
				"type": "String"
			},
			"Save_Data_To_Azure_SQLRunID": {
				"type": "String"
			},
			"sewer-cctv-pipeline-run-id": {
				"type": "String"
			},
			"PoolUrl": {
				"type": "String"
			}
		},
		"folder": {
			"name": "AI-ML/Riverwatch"
		},
		"annotations": [],
		"lastPublishTime": "2022-09-19T01:00:40Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}