{
	"name": "05-DL-Copy-Raw-to-Trustedddddd",
	"properties": {
		"description": "04-Blob-A-Source-Copy",
		"activities": [
			{
				"name": "Log Failure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy-Raw-to-Trusted",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "[CTL].[UpdateTaskLog]",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": "Error Occurred during Copy to Trusted",
							"type": "String"
						},
						"ExecutionLogId": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Output": {
							"value": null
						},
						"Status": {
							"value": "Failure",
							"type": "String"
						},
						"TaskId": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.TaskId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			},
			{
				"name": "Log Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy-Raw-to-Trusted",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": {
						"value": "[CTL].[UpdateTaskLog]",
						"type": "Expression"
					},
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@pipeline().parameters.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": null,
							"type": "String"
						},
						"ExecutionLogId": {
							"value": {
								"value": "@pipeline().parameters.TaskExecutionLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Output": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
								"type": "Expression"
							},
							"type": "String"
						},
						"Status": {
							"value": "Success",
							"type": "String"
						},
						"TaskId": {
							"value": {
								"value": "@pipeline().parameters.TaskDetails.TaskId",
								"type": "Expression"
							},
							"type": "Int64"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			},
			{
				"name": "Set-ClusterType",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ClusterType",
					"value": {
						"value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set-Source-Container",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "SourceContainer",
					"value": "raw"
				}
			},
			{
				"name": "Set-Source-Filename",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "SourceFileName",
					"value": {
						"value": "@last(split(pipeline().parameters.TaskDetails.SourceLocation,'/'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set-Target-Directory",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "TargetDirectory",
					"value": {
						"value": "@toLower(first(split(pipeline().parameters.TaskDetails.TargetLocation,'/')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set-Target-Filename",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "TargetFileName",
					"value": {
						"value": "@last(split(pipeline().parameters.TaskDetails.TargetLocation,'/'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set-Target-Container",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "TargetContainer",
					"value": "trusted"
				}
			},
			{
				"name": "Copy-Raw-to-Trusted",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set-Source-Container",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-Source-Filename",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-Target-Directory",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-Target-Filename",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-Target-Container",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-ClusterType",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-Source-Directory",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_ADLS_JSON",
						"type": "DatasetReference",
						"parameters": {
							"LakeContainer": {
								"value": "@variables('SourceContainer')",
								"type": "Expression"
							},
							"LakeDirectory": {
								"value": "@variables('SourceDirectory')",
								"type": "Expression"
							},
							"LakeFileName": {
								"value": "@variables('SourceFileName')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_ADLS_JSON",
						"type": "DatasetReference",
						"parameters": {
							"LakeContainer": {
								"value": "@variables('TargetContainer')",
								"type": "Expression"
							},
							"LakeDirectory": {
								"value": "@variables('TargetDirectory')",
								"type": "Expression"
							},
							"LakeFileName": {
								"value": "@variables('TargetFileName')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Set-Source-Directory",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "SourceDirectory",
					"value": {
						"value": "@toLower(first(split(pipeline().parameters.TaskDetails.SourceLocation,'/')))",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"TaskDetails": {
				"type": "object"
			},
			"BatchLogId": {
				"type": "int"
			},
			"TaskExecutionLogId": {
				"type": "int"
			},
			"ProjectRunID": {
				"type": "string"
			}
		},
		"variables": {
			"ReturnValue": {
				"type": "String"
			},
			"ClusterType": {
				"type": "String"
			},
			"SourceContainer": {
				"type": "String",
				"defaultValue": "raw"
			},
			"SourceDirectory": {
				"type": "String"
			},
			"SourceFileName": {
				"type": "String"
			},
			"TargetContainer": {
				"type": "String",
				"defaultValue": "trusted"
			},
			"TargetDirectory": {
				"type": "String"
			},
			"TargetFileName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "z_Archive"
		},
		"annotations": [],
		"lastPublishTime": "2021-06-24T00:16:57Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}