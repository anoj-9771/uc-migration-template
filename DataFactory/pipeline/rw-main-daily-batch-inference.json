{
	"name": "rw-main-daily-batch-inference",
	"properties": {
		"activities": [
			{
				"name": "get-bearer-token",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "run-deployment-pipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://', pipeline().globalParameters.keyVaultName, '.vault.azure.net/secrets/databricks-token?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "set-secret-variable",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get-bearer-token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "DatabricksSecret",
					"value": {
						"value": "@activity('get-bearer-token').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "get-databricks-jobs",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "set-secret-variable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://australiaeast.azuredatabricks.net/api/2.1/jobs/list",
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "Bearer @{variables('DatabricksSecret')}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "get-riverwatch-pipeline-job-id",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get-databricks-jobs",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get-databricks-jobs').output.jobs",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "check-job-name-is-sewer-cctv-pipeline",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().settings.name, pipeline().parameters.DatabricksJobName)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "set-job-exists-variable",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "PipelineJobExists",
											"value": true
										}
									},
									{
										"name": "set-job-id-variable",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "set-job-exists-variable",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "PipelineJobID",
											"value": {
												"value": "@string(item().job_id)",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "run-databricks-job",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "get-riverwatch-pipeline-job-id",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-current-model-run-time",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-last-model-run-time",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://australiaeast.azuredatabricks.net/api/2.1/jobs/run-now",
					"method": "POST",
					"headers": {
						"Authorization": {
							"value": "Bearer @{variables('DatabricksSecret')}",
							"type": "Expression"
						}
					},
					"body": {
						"value": "{ \"job_id\": @{variables('PipelineJobID')}, \"notebook_params\": { \"current_model_runtime\" : \"@{variables('CurrentModelRuntime')}\", \"last_model_runtime\": \"@{variables('LastModelRuntime')}\" }}}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "wait_for_job_to_complete",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "get-run-task-id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "wait-until-databricks-job-complete",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"RunID": {
							"value": "@activity('get-run-task-id').output.tasks[0].run_id",
							"type": "Expression"
						},
						"DatabricksSecret": {
							"value": "@variables('DatabricksSecret')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "check-job-status-register-model",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "wait_for_job_to_complete",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://australiaeast.azuredatabricks.net/api/2.1/jobs/runs/get-output?run_id=', activity('get-run-task-id').output.tasks[1].run_id)",
						"type": "Expression"
					},
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "Bearer @{variables('DatabricksSecret')}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "set-current-model-run-time",
				"description": "",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Execute Create Views",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "CurrentModelRuntime",
					"value": {
						"value": "@startOfHour(convertTimeZone(utcNow(),'UTC','AUS Eastern Standard Time'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set-last-model-run-time",
				"description": "",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Execute Create Views",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "LastModelRuntime",
					"value": {
						"value": "@startOfHour(convertTimeZone(addDays(utcNow(), -1),'UTC','AUS Eastern Standard Time'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "get-run-task-id",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "run-databricks-job",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://australiaeast.azuredatabricks.net/api/2.1/jobs/runs/get?run_id=', activity('run-databricks-job').output.run_id,'&active_only=true&expand_tasks=true')",
						"type": "Expression"
					},
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "Bearer @{variables('DatabricksSecret')}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "run-deployment-pipeline",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "rw-deployment-pipeline",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Fetch Model Output JSON",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Execute 04_JSON_RW_output",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "BLOB_Json",
						"type": "DatasetReference",
						"parameters": {
							"filePath": "/urbanplunge/RW_output.json"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Get AEM CSRF Token",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set AEM Subscription Key",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set Base AEM Url",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(variables('BaseAemUrl'),'libs/granite/csrf/token.json')",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "IntegrationRuntime-SelfHosted",
						"type": "IntegrationRuntimeReference"
					},
					"method": "GET",
					"headers": {
						"Cache-control": "no-cache",
						"Ocp-Apim-Subscription-Key": {
							"value": "@variables('AemSubscriptionKey')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Set AEM CSRF Token",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get AEM CSRF Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "CSRFToken",
					"value": {
						"value": "@activity('Get AEM CSRF Token').output.token",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Put Model Ouput JSON into AEM",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Fetch Model Output JSON",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set AEM CSRF Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(variables('BaseAemUrl'),'api/assets/sydneywater-applications-mpg/RW_output.json')",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "IntegrationRuntime-SelfHosted",
						"type": "IntegrationRuntimeReference"
					},
					"method": "PUT",
					"headers": {
						"CSRF-Token": {
							"value": "@variables('CSRFToken')",
							"type": "Expression"
						},
						"Content-Type": "application/octet-stream",
						"Cache-Control": "no-cache",
						"Ocp-Apim-Subscription-Key": {
							"value": "@variables('AemSubscriptionKey')",
							"type": "Expression"
						}
					},
					"body": {
						"value": "@activity('Fetch Model Output JSON').output.firstRow",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Ingest Beachwatch BoM and IICATS Data",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "run-deployment-pipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Main",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"SystemCodes": "beachwatch,bom,iicats"
					}
				}
			},
			{
				"name": "Execute 04_JSON_RW_output",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "check-job-status-register-model",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/AI-ML/Riverwatch/03_JSON_RW_output"
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureDatabricks_DefinedCluster",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "databricks-token",
						"clusterId": {
							"value": "@variables('ClusterId')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Get AEM Subscription Key",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Execute 04_JSON_RW_output",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://', pipeline().globalParameters.keyVaultName, '.vault.azure.net/secrets/AEM-Subscription-Key?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Set AEM Subscription Key",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get AEM Subscription Key",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "AemSubscriptionKey",
					"value": {
						"value": "@activity('Get AEM Subscription Key').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "get-databricks-clusters",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "run-deployment-pipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "get-bearer-token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://australiaeast.azuredatabricks.net/api/2.0/clusters/list",
					"method": "GET",
					"headers": {
						"Authorization": {
							"value": "Bearer @{variables('DatabricksSecret')}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "get-cluster-id",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get-databricks-clusters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get-databricks-clusters').output.clusters",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "check-cluster-name-is-riverwatch",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().cluster_name, 'riverwatch')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "set-cluster-id",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "ClusterId",
											"value": {
												"value": "@item().cluster_id",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Execute Create Views",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Ingest Beachwatch BoM and IICATS Data",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "get-cluster-id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/AI-ML/Riverwatch/Create_Views"
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureDatabricks_DefinedCluster",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "databricks-token",
						"clusterId": {
							"value": "@variables('ClusterId')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Get Base AEM Url",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Execute 04_JSON_RW_output",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://', pipeline().globalParameters.keyVaultName, '.vault.azure.net/secrets/AEM-Base-URL?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Set Base AEM Url",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Base AEM Url",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "BaseAemUrl",
					"value": {
						"value": "@activity('Get Base AEM Url').output.value",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"DatabricksJobName": {
				"type": "string",
				"defaultValue": "riverwatch-pipeline"
			},
			"currentModelRuntimeOverride": {
				"type": "string"
			},
			"lastModelRuntimeOverride": {
				"type": "string"
			}
		},
		"variables": {
			"DatabricksSecret": {
				"type": "String"
			},
			"PipelineJobExists": {
				"type": "Boolean"
			},
			"PipelineJobID": {
				"type": "String"
			},
			"CurrentModelRuntime": {
				"type": "String"
			},
			"LastModelRuntime": {
				"type": "String"
			},
			"CSRFToken": {
				"type": "String"
			},
			"AemSubscriptionKey": {
				"type": "String"
			},
			"ClusterId": {
				"type": "String"
			},
			"BaseAemUrl": {
				"type": "String"
			}
		},
		"folder": {
			"name": "AI-ML/Riverwatch"
		},
		"annotations": []
	}
}