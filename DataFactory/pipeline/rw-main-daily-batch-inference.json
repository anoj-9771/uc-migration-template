{
    "name": "rw-main-daily-batch-inference",
    "properties": {
        "activities": [
            {
                "name": "get-bearer-token",
                "type": "WebActivity",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat('https://', pipeline().globalParameters.keyVaultName, '.vault.azure.net/secrets/databricks-token?api-version=7.0')",
                        "type": "Expression"
                    },
                    "method": "GET",
                    "authentication": {
                        "type": "MSI",
                        "resource": "https://vault.azure.net"
                    }
                }
            },
            {
                "name": "set-secret-variable",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "get-bearer-token",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "DatabricksSecret",
                    "value": {
                        "value": "@activity('get-bearer-token').output.value",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "run-databricks-job",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "set-job-pool-id",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "if-jobs-exist",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "set-last-model-run-time",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "set-current-model-run-time",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": "https://australiaeast.azuredatabricks.net/api/2.1/jobs/run-now",
                    "method": "POST",
                    "headers": {
                        "Authorization": {
                            "value": "Bearer @{variables('DatabricksSecret')}",
                            "type": "Expression"
                        }
                    },
                    "body": {
                        "value": "{ \"job_id\": @{variables('PipelineJobID')}, \"notebook_params\": { \"current_model_runtime\" : \"@{variables('CurrentModelRuntime')}\", \"last_model_runtime\": \"@{variables('LastModelRuntime')}\" }}}",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "wait_for_job_to_complete",
                "type": "ExecutePipeline",
                "dependsOn": [
                    {
                        "activity": "get-job-id-last-task",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "pipeline": {
                        "referenceName": "wait-until-databricks-job-complete",
                        "type": "PipelineReference"
                    },
                    "waitOnCompletion": true,
                    "parameters": {
                        "RunID": {
                            "value": "@activity('get-job-id-last-task').output.Value[0].run_id",
                            "type": "Expression"
                        },
                        "DatabricksSecret": {
                            "value": "@variables('DatabricksSecret')",
                            "type": "Expression"
                        }
                    }
                }
            },
            {
                "name": "check-job-status-riverwatch-pipeline",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "wait_for_job_to_complete",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat('https://australiaeast.azuredatabricks.net/api/2.1/jobs/runs/get-output?run_id=', activity('get-job-id-last-task').output.Value[0].run_id)",
                        "type": "Expression"
                    },
                    "method": "GET",
                    "headers": {
                        "Authorization": {
                            "value": "Bearer @{variables('DatabricksSecret')}",
                            "type": "Expression"
                        }
                    }
                }
            },
            {
                "name": "get-run-task-id",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "run-databricks-job",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat('https://australiaeast.azuredatabricks.net/api/2.1/jobs/runs/get?run_id=', activity('run-databricks-job').output.run_id,'&active_only=true&expand_tasks=true')",
                        "type": "Expression"
                    },
                    "method": "GET",
                    "headers": {
                        "Authorization": {
                            "value": "Bearer @{variables('DatabricksSecret')}",
                            "type": "Expression"
                        }
                    }
                }
            },
            {
                "name": "Fetch Model Output JSON",
                "type": "Lookup",
                "dependsOn": [
                    {
                        "activity": "Execute 03_JSON_RW_output",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 2,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "JsonSource",
                        "storeSettings": {
                            "type": "AzureBlobStorageReadSettings",
                            "recursive": true,
                            "enablePartitionDiscovery": false
                        },
                        "formatSettings": {
                            "type": "JsonReadSettings"
                        }
                    },
                    "dataset": {
                        "referenceName": "BLOB_Json",
                        "type": "DatasetReference",
                        "parameters": {
                            "filePath": "/urbanplunge/RW_output.json"
                        }
                    },
                    "firstRowOnly": true
                }
            },
            {
                "name": "Get AEM CSRF Token",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "Set AEM Subscription Key",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "Set Base AEM Url",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat(variables('BaseAemUrl'),'libs/granite/csrf/token.json')",
                        "type": "Expression"
                    },
                    "connectVia": {
                        "referenceName": "IntegrationRuntime-SelfHosted",
                        "type": "IntegrationRuntimeReference"
                    },
                    "method": "GET",
                    "headers": {
                        "Cache-control": "no-cache",
                        "Ocp-Apim-Subscription-Key": {
                            "value": "@variables('AemSubscriptionKey')",
                            "type": "Expression"
                        }
                    }
                }
            },
            {
                "name": "Set AEM CSRF Token",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Get AEM CSRF Token",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "CSRFToken",
                    "value": {
                        "value": "@activity('Get AEM CSRF Token').output.token",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Put Model Ouput JSON into AEM",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "Fetch Model Output JSON",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "Set AEM CSRF Token",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat(variables('BaseAemUrl'),'api/assets/sydneywater-applications-mpg/RW_output.json')",
                        "type": "Expression"
                    },
                    "connectVia": {
                        "referenceName": "IntegrationRuntime-SelfHosted",
                        "type": "IntegrationRuntimeReference"
                    },
                    "method": "PUT",
                    "headers": {
                        "CSRF-Token": {
                            "value": "@variables('CSRFToken')",
                            "type": "Expression"
                        },
                        "Content-Type": "application/octet-stream",
                        "Cache-Control": "no-cache",
                        "Ocp-Apim-Subscription-Key": {
                            "value": "@variables('AemSubscriptionKey')",
                            "type": "Expression"
                        }
                    },
                    "body": {
                        "value": "@activity('Fetch Model Output JSON').output.firstRow",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Execute 03_JSON_RW_output",
                "type": "DatabricksNotebook",
                "dependsOn": [
                    {
                        "activity": "check-job-status-riverwatch-pipeline",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 2,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "notebookPath": "/AI-ML/Riverwatch/03_JSON_RW_output",
                    "baseParameters": {
                        "process_timestamp": {
                            "value": "@variables('CurrentModelRuntime')",
                            "type": "Expression"
                        }
                    }
                },
                "linkedServiceName": {
                    "referenceName": "LS_AzureDatabricks_InstancePool",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "kvSecret": "databricks-token",
                        "PoolId": {
                            "value": "@variables('JobPoolId')",
                            "type": "Expression"
                        },
                        "DatabricksVersion": "10.4.x-cpu-ml-scala2.12"
                    }
                }
            },
            {
                "name": "Get AEM Subscription Key",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "Execute 03_JSON_RW_output",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat('https://', pipeline().globalParameters.keyVaultName, '.vault.azure.net/secrets/AEM-Subscription-Key?api-version=7.0')",
                        "type": "Expression"
                    },
                    "method": "GET",
                    "authentication": {
                        "type": "MSI",
                        "resource": "https://vault.azure.net"
                    }
                }
            },
            {
                "name": "Set AEM Subscription Key",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Get AEM Subscription Key",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "AemSubscriptionKey",
                    "value": {
                        "value": "@activity('Get AEM Subscription Key').output.value",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Get Base AEM Url",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "Execute 03_JSON_RW_output",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat('https://', pipeline().globalParameters.keyVaultName, '.vault.azure.net/secrets/AEM-Base-URL?api-version=7.0')",
                        "type": "Expression"
                    },
                    "method": "GET",
                    "authentication": {
                        "type": "MSI",
                        "resource": "https://vault.azure.net"
                    }
                }
            },
            {
                "name": "Set Base AEM Url",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Get Base AEM Url",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "BaseAemUrl",
                    "value": {
                        "value": "@activity('Get Base AEM Url').output.value",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "get-databricks-job-pools",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "set-secret-variable",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": "https://australiaeast.azuredatabricks.net/api/2.0/instance-pools/list",
                    "method": "GET",
                    "headers": {
                        "Authorization": {
                            "value": "Bearer @{variables('DatabricksSecret')}",
                            "type": "Expression"
                        }
                    },
                    "body": {
                        "autoscale": {
                            "min_workers": 2,
                            "max_workers": 10
                        },
                        "cluster_name": "sewer-cctv",
                        "spark_version": "10.4.x-cpu-ml-scala2.12",
                        "spark_conf": {
                            "spark.databricks.delta.preview.enabled": "true"
                        },
                        "ssh_public_keys": [],
                        "autotermination_minutes": 60,
                        "init_scripts": [],
                        "instance_pool_id": "1024-005500-twain3-pool-jk2lh0go",
                        "driver_instance_pool_id": "1024-005500-twain3-pool-jk2lh0go",
                        "runtime_engine": "STANDARD"
                    }
                }
            },
            {
                "name": "filter-job-pool-batch-exists",
                "type": "Filter",
                "dependsOn": [
                    {
                        "activity": "get-databricks-job-pools",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('get-databricks-job-pools').output.instance_pools",
                        "type": "Expression"
                    },
                    "condition": {
                        "value": "@equals(item().instance_pool_name, pipeline().parameters.BatchPoolName)",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "set-job-pool-id",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "filter-job-pool-batch-exists",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "JobPoolId",
                    "value": {
                        "value": "@string(activity('filter-job-pool-batch-exists').output.Value[0].instance_pool_id)",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "get-databricks-jobs",
                "type": "WebActivity",
                "dependsOn": [
                    {
                        "activity": "set-secret-variable",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": "https://australiaeast.azuredatabricks.net/api/2.1/jobs/list",
                    "method": "GET",
                    "headers": {
                        "Authorization": {
                            "value": "Bearer @{variables('DatabricksSecret')}",
                            "type": "Expression"
                        }
                    }
                }
            },
            {
                "name": "if-jobs-exist",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "get-databricks-jobs",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@bool(contains(activity('get-databricks-jobs').output, 'jobs'))",
                        "type": "Expression"
                    },
                    "ifTrueActivities": [
                        {
                            "name": "filter-pipeline-job",
                            "type": "Filter",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "items": {
                                    "value": "@activity('get-databricks-jobs').output.jobs",
                                    "type": "Expression"
                                },
                                "condition": {
                                    "value": "@equals(item().settings.name, 'riverwatch-pipeline')",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "set-pipeline-job-id",
                            "type": "SetVariable",
                            "dependsOn": [
                                {
                                    "activity": "filter-pipeline-job",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "PipelineJobID",
                                "value": {
                                    "value": "@string(activity('filter-pipeline-job').output.Value[0].job_id)",
                                    "type": "Expression"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "get-job-id-last-task",
                "type": "Filter",
                "dependsOn": [
                    {
                        "activity": "get-run-task-id",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('get-run-task-id').output.tasks",
                        "type": "Expression"
                    },
                    "condition": {
                        "value": "@equals(item().task_key, 'inference_water_quality')",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Ingest Beachwatch BoM and IICATS Data",
                "type": "ExecutePipeline",
                "dependsOn": [],
                "userProperties": [],
                "typeProperties": {
                    "pipeline": {
                        "referenceName": "Main",
                        "type": "PipelineReference"
                    },
                    "waitOnCompletion": true,
                    "parameters": {
                        "SystemCodes": "beachwatch,bom,iicats_rw"
                    }
                }
            },
            {
                "name": "set-current-model-run-time",
                "description": "",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Ingest Beachwatch BoM and IICATS Data",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "CurrentModelRuntime",
                    "value": {
                        "value": "@substring(replace(coalesce(pipeline().parameters.currentModelRuntimeOverride,startOfHour(convertTimeZone(utcNow(),'UTC','AUS Eastern Standard Time'))),'T',' '),0,23)",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "set-last-model-run-time",
                "description": "",
                "type": "SetVariable",
                "dependsOn": [
                    {
                        "activity": "Ingest Beachwatch BoM and IICATS Data",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "variableName": "LastModelRuntime",
                    "value": {
                        "value": "@substring(replace(coalesce(pipeline().parameters.lastModelRuntimeOverride,startOfHour(convertTimeZone(addDays(utcNow(), -1),'UTC','AUS Eastern Standard Time'))),'T',' '),0,23)",
                        "type": "Expression"
                    }
                }
            }
        ],
        "parameters": {
            "DatabricksJobName": {
                "type": "string",
                "defaultValue": "riverwatch-pipeline"
            },
            "currentModelRuntimeOverride": {
                "type": "string"
            },
            "lastModelRuntimeOverride": {
                "type": "string"
            },
            "BatchPoolName": {
                "type": "string",
                "defaultValue": "RIVERWATCH_POOL"
            }
        },
        "variables": {
            "DatabricksSecret": {
                "type": "String"
            },
            "PipelineJobExists": {
                "type": "Boolean"
            },
            "PipelineJobID": {
                "type": "String"
            },
            "CurrentModelRuntime": {
                "type": "String"
            },
            "LastModelRuntime": {
                "type": "String"
            },
            "CSRFToken": {
                "type": "String"
            },
            "AemSubscriptionKey": {
                "type": "String"
            },
            "ClusterId": {
                "type": "String"
            },
            "BaseAemUrl": {
                "type": "String"
            },
            "JobPoolId": {
                "type": "String"
            }
        },
        "folder": {
            "name": "AI-ML/Riverwatch"
        },
        "annotations": []
    }
}