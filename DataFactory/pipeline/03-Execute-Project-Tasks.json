{
	"name": "03-Execute-Project-Tasks",
	"properties": {
		"activities": [
			{
				"name": "Get Load Tasks",
				"description": "",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[CTL].[getExecutionTasks]",
						"storedProcedureParameters": {
							"ProjectId": {
								"type": "Int64",
								"value": {
									"value": "@pipeline().parameters.ProjectId",
									"type": "Expression"
								}
							},
							"StageId": {
								"type": "Int64",
								"value": {
									"value": "@pipeline().parameters.StageId",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlDatabase_Ctrldb",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Execute Each Task",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Generate Batch Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Load Tasks').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Generate Task Log",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[CTL].[CreateTaskLog]",
									"storedProcedureParameters": {
										"BatchLogId": {
											"type": "Int64",
											"value": {
												"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
												"type": "Expression"
											}
										},
										"TaskId": {
											"type": "Int64",
											"value": {
												"value": "@item().TaskId",
												"type": "Expression"
											}
										}
									},
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlDatabase_Ctrldb",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Source-to-Raw-Blob      Stage1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Generate Task Log",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(equals(item().SourceType,'BLOB Storage (json)'), equals(item().ControlStageId,1))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "EP-Blob-to-Raw",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "04-Blob-A-Source Load",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"TaskDetails": {
													"value": "@item()",
													"type": "Expression"
												},
												"BatchLogId": {
													"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
													"type": "Expression"
												},
												"TaskExecutionLogId": {
													"value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
													"type": "Expression"
												},
												"ProjectRunID": {
													"value": "@pipeline().parameters.ProjectRunID",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "Raw-to-Cleansed Stage2",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Generate Task Log",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().ControlStageId,2)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "EP-Raw-to-Cleansed",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "05-DL-Load-Raw-to-Cleansed",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"TaskDetails": {
													"value": "@item()",
													"type": "Expression"
												},
												"BatchLogId": {
													"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
													"type": "Expression"
												},
												"TaskExecutionLogId": {
													"value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
													"type": "Expression"
												},
												"ProjectRunID": {
													"value": "@pipeline().parameters.ProjectRunID",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "Cleansed-to-Curated Stage3",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Generate Task Log",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().ControlStageId,3)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "EP-Cleansed-to-Curated",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "05-DL-Load-Cleansed-to-Curated",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"TaskDetails": {
													"value": "@item()",
													"type": "Expression"
												},
												"BatchLogId": {
													"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
													"type": "Expression"
												},
												"TaskExecutionLogId": {
													"value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
													"type": "Expression"
												},
												"ProjectRunID": {
													"value": "@pipeline().parameters.ProjectRunID",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "Source-to-Raw-Blob _FlatFile_Copy",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Generate Task Log",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(equals(item().SourceType,'Flat File'), equals(item().ControlStageId,1))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "EP-Blob-to-Raw_copy1",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "04-LakeLanding-FlatFile-A-Source-Copy",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"TaskDetails": {
													"value": "@item()",
													"type": "Expression"
												},
												"BatchLogId": {
													"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
													"type": "Expression"
												},
												"TaskExecutionLogId": {
													"value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
													"type": "Expression"
												},
												"ProjectRunID": {
													"value": "@pipeline().parameters.ProjectRunID",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Batch Log Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Execute Each Task",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateBatchLog]",
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": null,
							"type": "String"
						},
						"Status": {
							"value": "Complete",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "daf-sql-controldb-connectionstring"
					}
				}
			},
			{
				"name": "Batch Log Failure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Execute Each Task",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateBatchLog]",
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": "Check Task Execution Log for errors",
							"type": "String"
						},
						"Status": {
							"value": "Failure",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "daf-sql-controldb-connectionstring"
					}
				}
			},
			{
				"name": "Generate Batch Log",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Get Load Tasks",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[CTL].[CreateBatchLog]",
						"storedProcedureParameters": {
							"ProjectID": {
								"type": "Int64",
								"value": {
									"value": "@pipeline().parameters.ProjectId",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlDatabase_Ctrldb",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"StageId": {
				"type": "int"
			},
			"ProjectId": {
				"type": "int"
			},
			"ProjectRunID": {
				"type": "string"
			}
		},
		"annotations": [],
		"lastPublishTime": "2021-06-30T02:11:41Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}