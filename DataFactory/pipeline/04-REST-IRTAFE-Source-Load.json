{
	"name": "04-REST-IRTAFE-Source-Load",
	"properties": {
		"activities": [
			{
				"name": "Check Delta Load",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Full File Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.TaskDetails.DeltaExtract,true)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Log Success",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EP-SQL-Copy-Full",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateTaskLog]",
								"storedProcedureParameters": {
									"BatchLogId": {
										"value": {
											"value": "@pipeline().parameters.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ErrorMessage": {
										"value": "",
										"type": "String"
									},
									"ExecutionLogId": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Status": {
										"value": "Success",
										"type": "String"
									},
									"TaskId": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.TaskId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Output": {
										"value": {
											"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "Log Failure",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EP-SQL-Copy-Full",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateTaskLog]",
								"storedProcedureParameters": {
									"BatchLogId": {
										"value": {
											"value": "@pipeline().parameters.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ErrorMessage": {
										"value": "Some error occured",
										"type": "String"
									},
									"ExecutionLogId": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Status": {
										"value": "Failure",
										"type": "String"
									},
									"TaskId": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.TaskId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Output": {
										"value": null,
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "EP-SQL-Copy-Full",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "04-SQLServer-B-Source-Copy",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"BatchLogId": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"TaskDetails": {
										"value": "@pipeline().parameters.TaskDetails",
										"type": "Expression"
									},
									"TaskExecutionLogId": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"SourceSQL": {
										"value": "@pipeline().parameters.TaskDetails.Command",
										"type": "Expression"
									},
									"TargetBLOBFolder": {
										"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
										"type": "Expression"
									},
									"TargetBLOBName": {
										"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
										"type": "Expression"
									},
									"StartCounter": "0",
									"EndCounter": "0"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Task Log Failure",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy-API-Raw",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateTaskLog]",
								"storedProcedureParameters": {
									"BatchLogId": {
										"value": {
											"value": "@pipeline().parameters.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ErrorMessage": {
										"value": {
											"value": "An Error Occurred",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionLogId": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Status": {
										"value": "Failure",
										"type": "String"
									},
									"TaskId": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.TaskId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Output": {
										"value": null,
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "Watermark Task Failure",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SP-Update-Watermark",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateTaskLog]",
								"storedProcedureParameters": {
									"BatchLogId": {
										"value": {
											"value": "@pipeline().parameters.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ErrorMessage": {
										"value": {
											"value": "An Error Occurred",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionLogId": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Status": {
										"value": "Failure",
										"type": "String"
									},
									"TaskId": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.TaskId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Output": {
										"value": null,
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "Watermark Task Success",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SP-Update-Watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateTaskLog]",
								"storedProcedureParameters": {
									"BatchLogId": {
										"value": {
											"value": "@pipeline().parameters.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ErrorMessage": {
										"value": "",
										"type": "String"
									},
									"ExecutionLogId": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Status": {
										"value": "Success",
										"type": "String"
									},
									"TaskId": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.TaskId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Output": {
										"value": {
											"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "SP-Update-Watermark",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Execute-DB-Load-Delta-Table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[updateWatermarks]",
								"storedProcedureParameters": {
									"SourceId": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.SourceId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Watermark": {
										"value": {
											"value": "@variables('CurrentTime')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "Copy-API-Raw",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SET-RelativeURL",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "LU-API-Params",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:05:00",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"AbsoluteUrl": {
											"value": "@variables('PropNextTag')",
											"type": "Expression"
										}
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"value": "@json(activity('LU-API-Params').output.firstRow.MappingInfo)",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "RAW_REST_IRTAFE_Basic",
									"type": "DatasetReference",
									"parameters": {
										"BaesUrl": {
											"value": "@pipeline().parameters.TaskDetails.Command",
											"type": "Expression"
										},
										"UserName": {
											"value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[0]",
											"type": "Expression"
										},
										"SecretKey": {
											"value": "@split(pipeline().parameters.TaskDetails.SourceServer,'|')[1]",
											"type": "Expression"
										},
										"RelativeURL": {
											"value": "@variables('RelativeURL')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "RAW_ADLS_JSON",
									"type": "DatasetReference",
									"parameters": {
										"BlobPath": {
											"value": "@activity('Get Full File Name').output.firstRow.StorageFolder",
											"type": "Expression"
										},
										"BlobName": {
											"value": "@activity('Get Full File Name').output.firstRow.StorageFile",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "SP-Record-Manifest",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy-API-Raw",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[CreateManifestRecord]",
								"storedProcedureParameters": {
									"BatchExecutionLogID": {
										"value": {
											"value": "@pipeline().parameters.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Container": {
										"value": "raw",
										"type": "String"
									},
									"EndCounter": {
										"value": {
											"value": "@variables('CurrentTime')",
											"type": "Expression"
										},
										"type": "String"
									},
									"FileName": {
										"value": {
											"value": "@activity('Get Full File Name').output.firstRow.StorageFile",
											"type": "Expression"
										},
										"type": "String"
									},
									"FolderName": {
										"value": {
											"value": "@activity('Get Full File Name').output.firstRow.StorageFolder",
											"type": "Expression"
										},
										"type": "String"
									},
									"Records": {
										"value": {
											"value": "@activity('Copy-API-Raw').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"SourceObject": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.SourceName",
											"type": "Expression"
										},
										"type": "String"
									},
									"StartCounter": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.Watermarks",
											"type": "Expression"
										},
										"type": "String"
									},
									"TaskExecutionLogID": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"DeltaColumn": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "Execute-DB-Load-Delta-Table",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "SP-Record-Manifest",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "EP-Download-Schema-File",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "04-DL-Load-Raw-to-Delta-Table",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"BatchLogId": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"TaskExecutionLogId": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"TaskDetails": {
										"value": "@pipeline().parameters.TaskDetails",
										"type": "Expression"
									},
									"TargetBLOBFolder": {
										"value": "@activity('Get Full File Name').output.firstRow.StorageFolder",
										"type": "Expression"
									},
									"TargetBLOBName": {
										"value": "@activity('Get Full File Name').output.firstRow.StorageFile",
										"type": "Expression"
									},
									"ProjectRunID": {
										"value": "@pipeline().parameters.ProjectRunID",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SET-RelativeURL",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "SET-Prop-NextTag",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "SET-Prop-FieldStart",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "SET-Prop-FieldEnd",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "SET-Prop-QSStatic",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "SET-CurrentTime",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "RelativeURL",
								"value": {
									"value": "@concat(\n  pipeline().parameters.TaskDetails.SourceLocation,\n  '/',\n  '?',\n  variables('PropQSStatic'), '&',\n  variables('PropQSFieldStart'), '=', formatDateTime(pipeline().parameters.TaskDetails.WaterMarks,variables('PropTSFormat')), '&',\n  variables('PropQSFieldEnd'), '=', variables('CurrentTime'), '&'\n)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "LU-API-Params",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[CTL].[GetAPIParams]",
									"storedProcedureParameters": {
										"SourceId": {
											"type": "Int64",
											"value": {
												"value": "@pipeline().parameters.TaskDetails.SourceId",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlDatabase_Ctrldb",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Log Manifest Failure",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SP-Record-Manifest",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateTaskLog]",
								"storedProcedureParameters": {
									"BatchLogId": {
										"value": {
											"value": "@pipeline().parameters.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ErrorMessage": {
										"value": {
											"value": "Databricks Error has occured",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionLogId": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Output": {
										"value": null,
										"type": "String"
									},
									"Status": {
										"value": "Failure",
										"type": "String"
									},
									"TaskId": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.TaskId",
											"type": "Expression"
										},
										"type": "Int64"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "SET-CurrentTime",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "SET-Pro-TSFormat",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "SET-Pro-TimeZone",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "CurrentTime",
								"value": {
									"value": "@formatDateTime(convertFromUtc(utcNow('o'), variables('PropTimeZone')), variables('PropTSFormat'))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "SET-Prop-NextTag",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "PropNextTag",
								"value": {
									"value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty, '|')[2]",
									"type": "Expression"
								}
							}
						},
						{
							"name": "SET-Prop-FieldStart",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "PropQSFieldStart",
								"value": {
									"value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty, '|')[4]",
									"type": "Expression"
								}
							}
						},
						{
							"name": "SET-Prop-FieldEnd",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "PropQSFieldEnd",
								"value": {
									"value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty, '|')[5]",
									"type": "Expression"
								}
							}
						},
						{
							"name": "SET-Pro-TSFormat",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "PropTSFormat",
								"value": {
									"value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty, '|')[6]",
									"type": "Expression"
								}
							}
						},
						{
							"name": "SET-Prop-QSStatic",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "PropQSStatic",
								"value": {
									"value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty, '|')[3]",
									"type": "Expression"
								}
							}
						},
						{
							"name": "SET-Pro-TimeZone",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "PropTimeZone",
								"value": {
									"value": "@split(pipeline().parameters.TaskDetails.AdditionalProperty, '|')[7]",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Task Relative URL Failure",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SET-RelativeURL",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateTaskLog]",
								"storedProcedureParameters": {
									"BatchLogId": {
										"value": {
											"value": "@pipeline().parameters.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ErrorMessage": {
										"value": {
											"value": "An Error Occurred while setting Relative URL",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionLogId": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Status": {
										"value": "Failure",
										"type": "String"
									},
									"TaskId": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.TaskId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Output": {
										"value": null,
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "Task API Params",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "LU-API-Params",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateTaskLog]",
								"storedProcedureParameters": {
									"BatchLogId": {
										"value": {
											"value": "@pipeline().parameters.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ErrorMessage": {
										"value": {
											"value": "An Error Occurred while getting API Params",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionLogId": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Status": {
										"value": "Failure",
										"type": "String"
									},
									"TaskId": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.TaskId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Output": {
										"value": null,
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "EP-Download-Schema-File",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "util-download-schema-file-from-default",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"TaskDetails": {
										"value": "@pipeline().parameters.TaskDetails",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Log File Download Error",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EP-Download-Schema-File",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateTaskLog]",
								"storedProcedureParameters": {
									"BatchLogId": {
										"value": {
											"value": "@pipeline().parameters.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ErrorMessage": {
										"value": {
											"value": "Error Downloading File",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionLogId": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Output": {
										"value": null,
										"type": "String"
									},
									"Status": {
										"value": "Failure",
										"type": "String"
									},
									"TaskId": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.TaskId",
											"type": "Expression"
										},
										"type": "Int64"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						}
					]
				}
			},
			{
				"name": "Get Full File Name",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[CTL].[GetStorageFileName]",
						"storedProcedureParameters": {
							"DeltaExtract": {
								"type": "Boolean",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.DeltaExtract",
									"type": "Expression"
								}
							},
							"FileName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.SourceLocation",
									"type": "Expression"
								}
							},
							"FolderName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.TargetLocation",
									"type": "Expression"
								}
							},
							"Grain": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.ObjectGrain",
									"type": "Expression"
								}
							},
							"Compressed": {
								"type": "Boolean",
								"value": {
									"value": "true",
									"type": "Expression"
								}
							},
							"TargetType": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.TargetType",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlDatabase_Ctrldb",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			}
		],
		"parameters": {
			"BatchLogId": {
				"type": "int",
				"defaultValue": 1
			},
			"TaskDetails": {
				"type": "object",
				"defaultValue": {
					"SourceType": "API-TAFE",
					"SourceServer": "API-VCPrexip-UserID|API-VCPrexip-Password",
					"SourceName": "VCPrexip_participant",
					"SourceLocation": "participant",
					"AdditionalProperty": "av_id,bandwidth,call_direction,call_quality,call_uuid,conference,conference_name,conversation_id,disconnect_reason,display_name,duration,encryption,end_time,has_media,id,is_streaming,license_count,license_type,local_alias,media_node,parent_id,presentation_id,protocol,proxy_node,remote_address,remote_alias,remote_port,resource_uri,role,service_tag,service_type,signalling_node,start_time,system_location,vendor|$.objects|$.meta.next|limit=100000|end_time__gte|end_time__lt|yyyy-MM-ddTHH:mm:ss",
					"Processor": "databricks-token|0708-233111-note225|Standard_DS3_v2|6.4.x-scala2.11|2:8",
					"ProjectName": "ONDEMAND",
					"TargetType": "BLOB Storage (json)",
					"TargetName": "VCPrexip_participant",
					"TargetLocation": "VCPrexip/participant",
					"TargetServer": "datalake-SasToken",
					"TargetDBSchema": null,
					"DataLoadMode": "INCREMENTAL",
					"DeltaExtract": true,
					"CDCSource": false,
					"TruncateTarget": false,
					"UpsertTarget": true,
					"TrackChanges": false,
					"LoadToSqlEDW": true,
					"TaskName": "VCPrexip_participant",
					"ControlStageId": 1,
					"TaskId": 584,
					"StageSequence": 100,
					"StageName": "Source to Raw",
					"SourceId": 622,
					"TargetId": 601,
					"ObjectGrain": "Day",
					"CommandTypeId": 14,
					"Watermarks": "2020-09-11T16:28:50Z",
					"WatermarksDT": "2020-09-11T16:28:50Z",
					"WatermarkColumn": "end_time",
					"BusinessKeyColumn": "id",
					"Command": "https://manage.vc.tafensw.edu.au/api/admin/history/v1",
					"LastLoadedFile": null
				}
			},
			"TaskExecutionLogId": {
				"type": "int",
				"defaultValue": 1
			},
			"ProjectRunID": {
				"type": "string"
			}
		},
		"variables": {
			"RelativeURL": {
				"type": "String"
			},
			"CurrentTime": {
				"type": "String"
			},
			"PropNextTag": {
				"type": "String"
			},
			"PropQSFieldStart": {
				"type": "String"
			},
			"PropQSFieldEnd": {
				"type": "String"
			},
			"PropTSFormat": {
				"type": "String"
			},
			"PropQSStatic": {
				"type": "String"
			},
			"PropTimeZone": {
				"type": "String"
			}
		},
		"folder": {
			"name": "API"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}