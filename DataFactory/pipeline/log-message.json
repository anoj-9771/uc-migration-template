{
	"name": "log-message",
	"properties": {
		"activities": [
			{
				"name": "if-email-alerting",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "log-copy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('log-copy').output.firstRow.Alert",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "send-email",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "set-body",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@pipeline().globalParameters.logicAppAlertUrl",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "{\n\"importance\": \"\",\n\"body\": \"@{variables('body')}\",\n\"recipient\": \"@{activity('log-copy').output.firstRow.RecipientList}\",\n\"sender\": \"logicAppTestMailbox@sydneywater.com.au\",\n\"subject\": \"ADF Pipeline Failure\"\n}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "set-body",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "body",
								"value": {
									"value": "<style> table {   border: 1px solid #1C6EA4;   background-color: #EEEEEE;   width: 100%;   text-align: left;   border-collapse: collapse; } table td, table th {   border: 1px solid #AAAAAA;   padding: 3px 2px; } table tbody td {   font-size: 13px; } table thead {   background: red;   border-bottom: 2px solid #444444; } table thead th {   font-size: 15px;   font-weight: bold;   border-left: 2px solid #D0E4F5;   text-align: left;   text-color:#FFFFFF; } table thead th:first-child {   border-left: none; } </style>\n<table>\n   <thead>\n      <tr>\n         <th>LogId</th>\n         <th>BatchId</th>\n         <th>SystemCode</th>\n         <th>DestinationTableName</th>\n         <th>ExtractLoadStatusID</th>\n         <th>ActivityType</th>\n         <th>ErrorMessage</th>\n      </tr>\n   </thead>\n   <tbody>\n      <tr>\n         <td>@{activity('log-copy').output.firstRow.LogId}</td>\n         <td>@{activity('log-copy').output.firstRow.BatchId}</td>\n         <td>@{activity('log-copy').output.firstRow.SystemCode}</td>\n         <td>@{activity('log-copy').output.firstRow.DestinationTableName}</td>\n         <td>@{activity('log-copy').output.firstRow.ExtractLoadStatusID}</td>\n         <td>@{activity('log-copy').output.firstRow.ActivityType}</td>\n         <td>@{activity('log-copy').output.firstRow.ErrorMessage}</td>\n      </tr>\n   </tbody>\n</table>",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "log-copy",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[LogMessage]",
						"storedProcedureParameters": {
							"ID": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.ID",
									"type": "Expression"
								}
							},
							"ActivityType": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.ActivityType",
									"type": "Expression"
								}
							},
							"Message": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.Message",
									"type": "Expression"
								}
							},
							"IsTransform": {
								"type": "Boolean",
								"value": {
									"value": "@pipeline().parameters.IsTransform",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQL_ControlDB",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "if-log-storage",
				"description": "",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "log-copy",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "false()",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "log-storage",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@replace(replace(replace(replace(replace(replace(replace(\n'https://$STORAGE_NAME$.blob.core.windows.net/raw/log/$yyyy$/$MM$/$dd$/$HH$$mm$/$guid$.json?resource=filesystem'\n,'$STORAGE_NAME$', pipeline().globalParameters.storageName)\n,'$yyyy$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'yyyy'))\n,'$MM$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'MM'))\n,'$dd$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'dd'))\n,'$HH$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'HH'))\n,'$mm$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'mm'))\n,'$guid$', guid())\n",
									"type": "Expression"
								},
								"method": "PUT",
								"headers": {
									"x-ms-version": "2017-11-09",
									"x-ms-blob-type": "BlockBlob"
								},
								"body": {
									"value": "{\n    \"id\" : \"@{pipeline().RunId}\",\n    \"pipeline_run_id\" : \"@{pipeline().RunId}\",\n    \"extract_load_status_id\" : @{if(not(coalesce(pipeline().parameters.IsTransform, false)), pipeline().parameters.ID, 0)},\n    \"transform_status_id\" : @{if(coalesce(pipeline().parameters.IsTransform, false), pipeline().parameters.ID, 0)},\n    \"activity_type\" : \"@{pipeline().parameters.ActivityType}\",\n    \"created_dts\" : \"@{convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time')}\",\n    \"message\" : @{pipeline().parameters.Message}\n}\n",
									"type": "Expression"
								},
								"authentication": {
									"type": "MSI",
									"resource": "https://storage.azure.com/"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"ID": {
				"type": "int"
			},
			"ActivityType": {
				"type": "string"
			},
			"Message": {
				"type": "string"
			},
			"IsTransform": {
				"type": "bool"
			}
		},
		"variables": {
			"body": {
				"type": "String"
			}
		},
		"folder": {
			"name": "MDP-Framework/Common/Logging"
		},
		"annotations": []
	}
}