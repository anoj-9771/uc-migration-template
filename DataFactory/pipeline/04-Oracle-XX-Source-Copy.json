{
	"name": "04-Oracle-XX-Source-Copy",
	"properties": {
		"activities": [
			{
				"name": "LU-DataToLoad",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Generate Batch Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('SELECT ', variables('Columns') , ' FROM CTL.CustomDataLoad WHERE TableName = ', '''', pipeline().parameters.SourceObject, '''', 'AND ExtractionComplete IS NULL ORDER BY StartDate')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlDatabase_Ctrldb",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Loop Periods",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LU-DataToLoad",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU-DataToLoad').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy-Source-DataLake",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SET-LU-SQL-Main",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "OracleSource",
									"oracleReaderQuery": {
										"value": "@variables('SQLQuery')",
										"type": "Expression"
									},
									"partitionOption": "None",
									"queryTimeout": "10:00:00"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "SRC_Oracle",
									"type": "DatasetReference",
									"parameters": {
										"kvSecret": {
											"value": "@item().ServiceName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "RAW_ADLS_JSON",
									"type": "DatasetReference",
									"parameters": {
										"BlobPath": {
											"value": "@variables('Folder')",
											"type": "Expression"
										},
										"BlobName": {
											"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "SP-Record-Manifest",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SET-Source-RecordCount",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[CreateManifestRecord]",
								"storedProcedureParameters": {
									"BatchExecutionLogID": {
										"value": {
											"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Container": {
										"value": "raw",
										"type": "String"
									},
									"EndCounter": {
										"value": {
											"value": "@item().EndDate",
											"type": "Expression"
										},
										"type": "String"
									},
									"FileName": {
										"value": {
											"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
											"type": "Expression"
										},
										"type": "String"
									},
									"FolderName": {
										"value": {
											"value": "@variables('Folder')",
											"type": "Expression"
										},
										"type": "String"
									},
									"Records": {
										"value": {
											"value": "@variables('RecordCount')",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"SourceObject": {
										"value": {
											"value": "@toLower(concat(pipeline().parameters.ProjectName, '_', replace(pipeline().parameters.SourceObject, '.', '_')))",
											"type": "Expression"
										},
										"type": "String"
									},
									"StartCounter": {
										"value": {
											"value": "@item().StartDate",
											"type": "Expression"
										},
										"type": "String"
									},
									"TaskExecutionLogID": {
										"value": {
											"value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"DeltaColumn": {
										"value": {
											"value": "@variables('DeltaColumn')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "SET-Source-RecordCount",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy-Source-DataLake",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "RecordCount",
								"value": {
									"value": "@string(activity('Copy-Source-DataLake').output.rowsCopied)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "SET-LU-SQL-Main",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set-EndDate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "SQLQuery",
								"value": {
									"value": "@concat('SELECT * FROM ', item().TableName, ' WHERE CREATED_DATE BETWEEN TO_DATE(', '''', item().StartDate, '''', ',', variables('OracleDateFormat') , ') AND ', 'TO_DATE(', '''', item().EndDate, '''', ',', variables('OracleDateFormat'),  ')')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Get Full File Name",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Generate Task Log",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[CTL].[GetStorageFileName]",
									"storedProcedureParameters": {
										"DeltaExtract": {
											"type": "Boolean",
											"value": {
												"value": "true",
												"type": "Expression"
											}
										},
										"FileName": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.SourceObject",
												"type": "Expression"
											}
										},
										"FolderName": {
											"type": "String",
											"value": {
												"value": "@concat('OneEBS/', toUpper(replace(pipeline().parameters.SourceObject, '.', '_')))",
												"type": "Expression"
											}
										},
										"Grain": {
											"type": "String",
											"value": {
												"value": "day",
												"type": "Expression"
											}
										},
										"Compressed": {
											"type": "Boolean",
											"value": {
												"value": "true",
												"type": "Expression"
											}
										},
										"TargetType": {
											"type": "String",
											"value": {
												"value": "BLOB Storage (json)",
												"type": "Expression"
											}
										}
									},
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlDatabase_Ctrldb",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "Generate Task Log",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[CTL].[CreateTaskLog]",
									"storedProcedureParameters": {
										"BatchLogId": {
											"type": "Int64",
											"value": {
												"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
												"type": "Expression"
											}
										},
										"TaskId": {
											"type": "Int64",
											"value": {
												"value": "@variables('TaskID')",
												"type": "Expression"
											}
										}
									},
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlDatabase_Ctrldb",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Log Success",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Update Data Load Log",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateTaskLog]",
								"storedProcedureParameters": {
									"BatchLogId": {
										"value": {
											"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ErrorMessage": {
										"value": "",
										"type": "String"
									},
									"ExecutionLogId": {
										"value": {
											"value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Status": {
										"value": "Success",
										"type": "String"
									},
									"TaskId": {
										"value": {
											"value": "@variables('TaskID')",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Output": {
										"value": "Success",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "Update Data Load Log",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SP-Record-Manifest",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[UpdateCustomDataLoad]",
								"storedProcedureParameters": {
									"StartDate": {
										"value": {
											"value": "@item().StartDate",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "AzureSqlDatabase-ControlDB"
								}
							}
						},
						{
							"name": "Set Folder",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Full File Name",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Folder",
								"value": {
									"value": "@concat(toLower(pipeline().parameters.ProjectName), '/', toLower(replace(pipeline().parameters.SourceObject, '.', '_')), '/json/', 'year=', formatDateTime(item().StartDate, 'yyyy'), '/month=', formatDateTime(item().StartDate, 'MM'), '/day=', formatDateTime(item().StartDate, 'dd'), '/')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set-EndDate",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set Folder",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "EndDate",
								"value": {
									"value": "@item().EndDate",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Generate Batch Log",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Execute-Generate-Schema",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[CTL].[CreateBatchLog]",
						"storedProcedureParameters": {
							"ProjectID": {
								"type": "Int64",
								"value": {
									"value": "@variables('ProjectID')",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlDatabase_Ctrldb",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Batch Log Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SP-Update-Watermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateBatchLog]",
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": {
								"value": "@activity('Notebook-Delta-Table').output.runOutput",
								"type": "Expression"
							},
							"type": "String"
						},
						"Status": {
							"value": "Complete",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			},
			{
				"name": "Batch Log Failure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Loop Periods",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateBatchLog]",
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": "Check Task Execution Log for errors",
							"type": "String"
						},
						"Status": {
							"value": "Failure",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			},
			{
				"name": "Execute-Generate-Schema",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Set ProjectID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "04-Oracle-Generate-Source-Schema",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"SourceObject": {
							"value": "@pipeline().parameters.SourceObject",
							"type": "Expression"
						},
						"Project": {
							"value": "OneEBS",
							"type": "Expression"
						},
						"SourceServer": {
							"value": "@activity('Lookup-TaskID').output.firstRow.SourceServer",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Lookup-TaskID",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('SELECT SourceID, SourceServer FROM CTL.ControlSource WHERE SourceTypeID = 6 and SourceLocation = ', '''', pipeline().parameters.SourceObject, '''')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlDatabase_Ctrldb",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set TaskID",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup-TaskID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "TaskID",
					"value": {
						"value": "@string(activity('Lookup-TaskID').output.firstRow.SourceID)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set ProjectID",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set TaskID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ProjectID",
					"value": {
						"value": "@concat(variables('TaskID'), '0')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Notebook-Delta-Table",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Loop Periods",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/build/raw/load-raw-deltatable",
					"baseParameters": {
						"file_object": {
							"value": "@toLower(concat(pipeline().parameters.ProjectName, '/', replace(pipeline().parameters.SourceObject, '.', '_'), '/*/*/*/*/*.json.gz'))",
							"type": "Expression"
						},
						"delta_extract": {
							"value": "true",
							"type": "Expression"
						},
						"cdc_mode": {
							"value": "false",
							"type": "Expression"
						},
						"delta_column": {
							"value": "@variables('DeltaColumn')",
							"type": "Expression"
						}
					},
					"libraries": [
						{
							"maven": {
								"coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
							}
						}
					]
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureDatabricks_JobCluster",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": {
							"value": "databricks-token",
							"type": "Expression"
						},
						"DataBricksClusterType": "Standard_DS5_v2",
						"DataBricksClusterVersion": "6.4.x-scala2.11",
						"DataBricksWorkerNodes": "2:8"
					}
				}
			},
			{
				"name": "Batch Log Failure-Notebook",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Notebook-Delta-Table",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[UpdateBatchLog]",
					"storedProcedureParameters": {
						"BatchLogId": {
							"value": {
								"value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"ErrorMessage": {
							"value": "Check Task Execution Log for errors",
							"type": "String"
						},
						"Status": {
							"value": "Failure",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			},
			{
				"name": "SP-Update-Watermark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Notebook-Delta-Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[CTL].[updateWatermarks]",
					"storedProcedureParameters": {
						"SourceId": {
							"value": {
								"value": "@string(activity('Lookup-TaskID').output.firstRow.SourceID)",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"Watermark": {
							"value": {
								"value": "@variables('EndDate')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference",
					"parameters": {
						"kvSecret": "AzureSqlDatabase-ControlDB"
					}
				}
			}
		],
		"parameters": {
			"SourceObject": {
				"type": "string",
				"defaultValue": "EBS_0165.REGISTER_EVENTS"
			},
			"ProjectName": {
				"type": "string",
				"defaultValue": "OneEBS"
			}
		},
		"variables": {
			"SQLQuery": {
				"type": "String"
			},
			"RecordCount": {
				"type": "String"
			},
			"DeltaColumn": {
				"type": "String",
				"defaultValue": "UPDATED_DATE, CREATED_DATE"
			},
			"Folder": {
				"type": "String"
			},
			"Columns": {
				"type": "String",
				"defaultValue": "TableName, ServiceName, format(StartDate, 'yyyy-MM-dd hh:mm:ss') StartDate, format(EndDate, 'yyyy-MM-dd hh:mm:ss') EndDate"
			},
			"OracleDateFormat": {
				"type": "String",
				"defaultValue": "'YYYY-MM-DD HH24:MI:SS'"
			},
			"TaskID": {
				"type": "String"
			},
			"ProjectID": {
				"type": "String"
			},
			"EndDate": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Oracle/OneTimeLoad"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}