{
	"name": "bods-load",
	"properties": {
		"activities": [
			{
				"name": "set-source-file-path",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "SourceFilePath",
					"value": {
						"value": "@split(pipeline().parameters.task.SourceQuery,'/')[0]",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set-output-full-path",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "OutputFullPath",
					"value": {
						"value": "@replace(replace(replace(replace(replace(replace(\npipeline().parameters.task.RawPath\n,'$yyyy$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'yyyy'))\n,'$MM$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'MM'))\n,'$dd$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'dd'))\n,'$HH$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'HH'))\n,'$mm$', formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'mm'))\n,'$guid$', guid())",
						"type": "Expression"
					}
				}
			},
			{
				"name": "log-copy",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "copy-folder-binary",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-message",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"ActivityType": "copy-data",
						"Message": {
							"value": "@{activity('copy-folder-binary')}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "fail-folder-copy",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "copy-folder-binary",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"message": "fail-folder-copy",
					"errorCode": "500"
				}
			},
			{
				"name": "set-delete-source-files",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "DeleteSourceFiles",
					"value": {
						"value": "@if(contains(coalesce(pipeline().parameters.task.ExtendedProperties, ''), 'DeleteSourceFiles'), bool(json(coalesce(pipeline().parameters.task.ExtendedProperties, '{}')).DeleteSourceFiles),false)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set-source-file-name",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "sourceFileName",
					"value": {
						"value": "@split(pipeline().parameters.task.SourceQuery,'/')[1]",
						"type": "Expression"
					}
				}
			},
			{
				"name": "switch-load-type",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "copy-folder-binary",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "for-last-modified",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@toLower(variables('LoadType'))",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "overwrite",
							"activities": [
								{
									"name": "task-raw-path-last-modified",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-status-update",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"Property": "RawPath",
											"Value": {
												"value": "@concat(concat(variables('OutputFullPath'),'/'),variables('LastModifiedFileName'))",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "task-raw-path",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "log-status-update",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"ID": {
										"value": "@pipeline().parameters.task.ID",
										"type": "Expression"
									},
									"Property": "RawPath",
									"Value": {
										"value": "@variables('OutputFullPath')",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "get-file-metadata",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "set-source-file-name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "BLOB_Json_File_Name",
						"type": "DatasetReference",
						"parameters": {
							"BlobFolderName": {
								"value": "@split(pipeline().parameters.task.SourceQuery,'/')[0]",
								"type": "Expression"
							},
							"BlobFileName": {
								"value": "@concat(variables('sourceFileName'),'_2*')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "for-last-modified",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get-file-metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get-file-metadata').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "get-file-modified-time",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "BLOB_Json_File_Name",
									"type": "DatasetReference",
									"parameters": {
										"BlobFolderName": {
											"value": "@split(pipeline().parameters.task.SourceQuery,'/')[0]",
											"type": "Expression"
										},
										"BlobFileName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"lastModified",
									"itemName"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							}
						},
						{
							"name": "if-file-modified-time",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "get-file-modified-time",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('get-file-modified-time').output.lastModified, variables('FileModifiedTime'))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "set-file-max-modified-time",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "FileModifiedTime",
											"value": {
												"value": "@activity('get-file-modified-time').output.lastModified",
												"type": "Expression"
											}
										}
									},
									{
										"name": "set-file-name",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "LastModifiedFileName",
											"value": {
												"value": "@activity('get-file-modified-time').output.itemName",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "copy-folder-binary",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "set-delete-source-files",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-output-full-path",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-source-file-name",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-source-file-path",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-Load-Type",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Destination",
						"value": "raw/Cewa Financials/"
					}
				],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": {
								"value": "@concat(variables('sourceFileName'),'_2*')",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": {
								"value": "@variables('DeleteSourceFiles')",
								"type": "Expression"
							}
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "BLOB_Binary_Folder",
						"type": "DatasetReference",
						"parameters": {
							"folderPath": {
								"value": "@variables('SourceFilePath')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DLS_Binary_Folder",
						"type": "DatasetReference",
						"parameters": {
							"folderPath": {
								"value": "@variables('OutputFullPath')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "set-Load-Type",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "LoadType",
					"value": {
						"value": "@coalesce(pipeline().parameters.task.waterMarkColumn,'overwrite')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "execute-load-manifest",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "set-source-file-name",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-source-file-path",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-output-full-path",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-delete-source-files",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set-Load-Type",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "bods-load-manifest",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"task": {
							"value": "@pipeline().parameters.task",
							"type": "Expression"
						},
						"SourceFilePath": {
							"value": "@variables('SourceFilePath')",
							"type": "Expression"
						},
						"OutputFullPath": {
							"value": "@variables('OutputFullPath')",
							"type": "Expression"
						},
						"DeleteSourceFiles": {
							"value": "@variables('DeleteSourceFiles')",
							"type": "Expression"
						},
						"SourceFileName": {
							"value": "@variables('sourceFileName')",
							"type": "Expression"
						},
						"LoadType": {
							"value": "@variables('LoadType')",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"task": {
				"type": "object"
			}
		},
		"variables": {
			"OutputFullPath": {
				"type": "String"
			},
			"SourceFilePath": {
				"type": "String"
			},
			"DeleteSourceFiles": {
				"type": "Boolean",
				"defaultValue": false
			},
			"sourceFileName": {
				"type": "String"
			},
			"FileModifiedTime": {
				"type": "String"
			},
			"LastModifiedFileName": {
				"type": "String"
			},
			"LoadType": {
				"type": "String"
			}
		},
		"folder": {
			"name": "MDP-Framework/SourceHandler/BODS"
		},
		"annotations": []
	}
}