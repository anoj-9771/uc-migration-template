{
	"name": "Raw",
	"properties": {
		"activities": [
			{
				"name": "switch-source-handler",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "log-status-start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@split(pipeline().parameters.task.SourceHandler, '/')[0]",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "sql-load",
							"activities": [
								{
									"name": "execute-sql-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "sql-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "csv-load",
							"activities": [
								{
									"name": "execute-csv-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "csv-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TaskDetails": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "file-binary-load",
							"activities": [
								{
									"name": "execute-file-binary-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "file-binary-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "blob-folder-load",
							"activities": [
								{
									"name": "execute-blob-folder-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "blob-folder-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "qualtrics-load",
							"activities": [
								{
									"name": "execute-qualtrics-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "qualtrics-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "qualtrics-responses-load",
							"activities": [
								{
									"name": "execute-qualtrics-responses-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "qualtrics-responses-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "http-binary-load",
							"activities": [
								{
									"name": "execute-http-binary-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "http-binary-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "oracle-load",
							"activities": [
								{
									"name": "execute-oracle-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "oracle-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "ftp-binary-load",
							"activities": [
								{
									"name": "execute-ftp-binary-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ftp-binary-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "bods-load",
							"activities": [
								{
									"name": "execute-bods-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "bods-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "no-handler-found",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "'No handler found @{split(pipeline().parameters.task.SourceHandler, '/')[0]}!'",
									"type": "Expression"
								},
								"errorCode": "500"
							}
						}
					]
				}
			},
			{
				"name": "if-raw-handler",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "switch-source-handler",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(empty(pipeline().parameters.task.RawHandler))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "raw-databricks",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "task-status",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": {
									"value": "/MDP-Framework/Zone/@{pipeline().parameters.task.RawHandler}",
									"type": "Expression"
								},
								"baseParameters": {
									"rawPath": {
										"value": "@activity('task-status').output.firstRow.RawPath",
										"type": "Expression"
									},
									"task": {
										"value": "@{pipeline().parameters.task}",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureDatabricks_DefinedCluster",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "databricks-token",
									"clusterId": {
										"value": "@pipeline().parameters.ClusterId",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "task-status",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT * FROM [dbo].[ExtractLoadStatus] WHERE [BatchID] = '@{pipeline().parameters.task.BatchID}' AND [SourceID] = '@{pipeline().parameters.task.SourceID}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "SQL_ControlDB",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "log-databricks",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "raw-databricks",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "log-message",
									"type": "PipelineReference"
								},
								"waitOnCompletion": false,
								"parameters": {
									"ID": {
										"value": "@pipeline().parameters.task.ID",
										"type": "Expression"
									},
									"ActivityType": "raw-databricks",
									"Message": {
										"value": "@{activity('raw-databricks')}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "raw-databricks-fail",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "raw-databricks",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "@activity('raw-databricks').output.Error",
									"type": "Expression"
								},
								"errorCode": "500"
							}
						},
						{
							"name": "set-raw-sink-flag",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "raw-databricks",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "RawSinkFlag",
								"value": {
									"value": "@string(bool(contains(activity('raw-databricks').output,'runOutput')))",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "log-status-start",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawStartDTS",
						"Value": {
							"value": "@formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "log-status-end",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "if-raw-handler",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawEndDTS",
						"Value": {
							"value": "@formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "log-status-fail",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "if-raw-handler",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawStatus",
						"Value": "Fail",
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "log-status-success",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "if-raw-handler",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawStatus",
						"Value": "Success",
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "log-status-end-fail",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "if-raw-handler",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawEndDTS",
						"Value": {
							"value": "@formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "log-status-fail-source",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "switch-source-handler",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawStatus",
						"Value": "Fail",
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "log-status-end-fail-source",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "switch-source-handler",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawEndDTS",
						"Value": {
							"value": "@formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "if-raw-sink-flag",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "if-raw-handler",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('RawSinkFlag'),'True')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "task-raw-sink-count",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "log-status-update",
									"type": "PipelineReference"
								},
								"waitOnCompletion": false,
								"parameters": {
									"ID": {
										"value": "@pipeline().parameters.task.ID",
										"type": "Expression"
									},
									"Property": "SinkRowCount",
									"Value": {
										"value": "@string(activity('raw-databricks').output.runOutput.SinkRowCount)",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"task": {
				"type": "object"
			},
			"ClusterId": {
				"type": "string"
			}
		},
		"variables": {
			"RawSinkCount": {
				"type": "String"
			},
			"CleansedSinkFlag": {
				"type": "String"
			},
			"RawSinkFlag": {
				"type": "String"
			}
		},
		"folder": {
			"name": "MDP-Framework/Zone"
		},
		"annotations": []
	}
}