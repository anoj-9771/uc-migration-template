{
	"name": "Raw",
	"properties": {
		"activities": [
			{
				"name": "switch-source-handler",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "log-status-start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@split(pipeline().parameters.task.SourceHandler, '/')[0]",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "sql-load",
							"activities": [
								{
									"name": "execute-sql-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "sql-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-sql-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-sql-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-sql-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						},
						{
							"value": "csv-load",
							"activities": [
								{
									"name": "execute-csv-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "csv-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TaskDetails": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-csv-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-csv-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-csv-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						},
						{
							"value": "file-binary-load",
							"activities": [
								{
									"name": "execute-file-binary-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "file-binary-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-file-binary-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-file-binary-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-file-binary-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						},
						{
							"value": "blob-folder-load",
							"activities": [
								{
									"name": "execute-blob-folder-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "blob-folder-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-blob-folder-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-blob-folder-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-blob-folder-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						},
						{
							"value": "qualtrics-load",
							"activities": [
								{
									"name": "execute-qualtrics-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "qualtrics-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-qualtrics-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-qualtrics-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-qualtrics-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						},
						{
							"value": "qualtrics-responses-load",
							"activities": [
								{
									"name": "execute-qualtrics-responses-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "qualtrics-responses-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-qualtrics-responses-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-qualtrics-responses-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-qualtrics-responses-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						},
						{
							"value": "http-binary-load",
							"activities": [
								{
									"name": "execute-http-binary-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "http-binary-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-http-binary-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-http-binary-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-http-binary-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						},
						{
							"value": "oracle-load",
							"activities": [
								{
									"name": "execute-oracle-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "oracle-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-oracle-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-oracle-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-oracle-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						},
						{
							"value": "ftp-binary-load",
							"activities": [
								{
									"name": "execute-ftp-binary-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ftp-binary-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-ftp-binary-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-ftp-binary-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-ftp-binary-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						},
						{
							"value": "bods-load",
							"activities": [
								{
									"name": "execute-bods-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "bods-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-bods-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-bods-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-bods-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						},
						{
							"value": "bom-nc-load",
							"activities": [
								{
									"name": "execute-bom-nc-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "bom-nc-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "skip-load",
							"activities": [
								{
									"name": "execute-skip-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "skip-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "nas-binary-load",
							"activities": [
								{
									"name": "execute-nas-binary-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "nas-binary-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-nas-binary-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-nas-binary-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-nas-binary-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						},
						{
							"value": "sharepointlist-load",
							"activities": [
								{
									"name": "execute-sharepointonlinelist-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "sharepointonlinelist-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-sharepointonlinelist-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-sharepointonlinelist-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-sharepointonlinelist-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						},
						{
							"value": "dataverse-load",
							"activities": [
								{
									"name": "execute-dataverse-load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "dataverse-load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"task": {
												"value": "@pipeline().parameters.task",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "log-dataverse-load",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "execute-dataverse-load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "log-message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ID": {
												"value": "@pipeline().parameters.task.ID",
												"type": "Expression"
											},
											"ActivityType": "source-load",
											"Message": {
												"value": "@{activity('execute-dataverse-load')}",
												"type": "Expression"
											},
											"IsTransform": false
										}
									}
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "no-handler-found",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "'No handler found @{split(pipeline().parameters.task.SourceHandler, '/')[0]}!'",
									"type": "Expression"
								},
								"errorCode": "500"
							}
						}
					]
				}
			},
			{
				"name": "if-raw-handler",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "task-status",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(not(empty(pipeline().parameters.task.RawHandler))\n,not(equals(activity('task-status').output.firstRow.SinkRowCount, 0)))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "execute-raw-databricks",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "run-databricks-notebook",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"task": {
										"value": "@json(\n    replace(\n        string(pipeline().parameters.task),\n        pipeline().parameters.task.RawPath,\n        activity('task-status').output.firstRow.RawPath\n    )\n)",
										"type": "Expression"
									},
									"config": {
										"value": "@json(concat(\n    '{',\n    '\"notebookPath\":\"/MDP-Framework/Zone/',pipeline().parameters.task.RawHandler,'\",',\n    '\"sinkCountProperty\":\"SinkRowCount\",',\n    '\"activityType\":\"raw-databricks\"',\n    '}'\n))",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "log-status-start",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawStartDTS",
						"Value": {
							"value": "@formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "log-status-end",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "if-raw-handler",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawEndDTS",
						"Value": {
							"value": "@formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "log-status-fail",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "if-raw-handler",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawStatus",
						"Value": "Fail",
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "log-status-success",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "if-raw-handler",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawStatus",
						"Value": "Success",
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "log-status-end-fail",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "if-raw-handler",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawEndDTS",
						"Value": {
							"value": "@formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "log-status-fail-source",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "switch-source-handler",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawStatus",
						"Value": "Fail",
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "log-status-end-fail-source",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "switch-source-handler",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "log-status-update",
						"type": "PipelineReference"
					},
					"waitOnCompletion": false,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.task.ID",
							"type": "Expression"
						},
						"Property": "RawEndDTS",
						"Value": {
							"value": "@formatDateTime(convertTimeZone(utcnow(), 'UTC', 'AUS Eastern Standard Time'), 'yyyy-MM-dd HH:mm:ss')",
							"type": "Expression"
						},
						"TableName": "ExtractLoadStatus"
					}
				}
			},
			{
				"name": "task-status",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "switch-source-handler",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM [dbo].[ExtractLoadStatus] WHERE [BatchID] = '@{pipeline().parameters.task.BatchID}' AND [SourceID] = '@{pipeline().parameters.task.SourceID}'",
							"type": "Expression"
						},
						"queryTimeout": "00:05:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQL_ControlDB",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"task": {
				"type": "object"
			}
		},
		"variables": {
			"RawSinkCount": {
				"type": "String"
			}
		},
		"folder": {
			"name": "MDP-Framework/Zone"
		},
		"annotations": []
	}
}