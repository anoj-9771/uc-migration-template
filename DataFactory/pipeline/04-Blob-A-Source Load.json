{
	"name": "04-Blob-A-Source Load",
	"properties": {
		"description": "Clone of 05-DL-Load-Raw-to-Trusted",
		"activities": [
			{
				"name": "Get Metadata",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Get Full File Name",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-Source-Container",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set-Source-Filename_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "SRC_BLOB_JSON_copy1",
						"type": "DatasetReference",
						"parameters": {
							"BlobName": {
								"value": "@concat(variables('SourceFileName'),'*')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Loop-All-Files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy-Blob-to-DataLake-Raw",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SET-FileName to Child Item",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "SRC_BLOB_JSON_copy1",
									"type": "DatasetReference",
									"parameters": {
										"BlobName": {
											"value": "@variables('FileName')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "RAW_ADLS_JSON_v2",
									"type": "DatasetReference",
									"parameters": {
										"BlobPath": {
											"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
											"type": "Expression"
										},
										"BlobName": {
											"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "SET-FileName to Child Item",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "FileName",
								"value": {
									"value": "item().name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Execute-DP-Load-Raw-to-Delta-Table",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "04-DL-Load-Raw-to-Delta-Table",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"BatchLogID": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"TaskExecutionLogId": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"TaskDetails": {
										"value": "@pipeline().parameters.TaskDetails",
										"type": "Expression"
									},
									"TargetBLOBFolder": {
										"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
										"type": "Expression"
									},
									"TargetBLOBName": {
										"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
										"type": "Expression"
									},
									"ProjectRunID": {
										"value": "@pipeline().parameters.ProjectRunID",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Copy Blob File to ArchiveContainer",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFileName": {
											"value": "@concat(first(split(variables('SourceFileName'),'.')),'_*')",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "SRC_BLOB_JSON",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ARCHIVE_BLOB_JSON",
									"type": "DatasetReference",
									"parameters": {
										"BlobContainer": {
											"value": "@concat('archive/', activity('Get Full File Name').output.firstrow.StorageFolder)",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Delete File from LandingBlob",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "SRC_BLOB_JSON",
									"type": "DatasetReference"
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "LS_AzureDatalake",
										"type": "LinkedServiceReference"
									},
									"path": "assurance"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@{concat(first(split(variables('SourceFileName'),'.')),'_*')}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "SP-Create-Manifest",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[CTL].[CreateManifestRecord]",
								"storedProcedureParameters": {
									"BatchExecutionLogID": {
										"value": {
											"value": "@pipeline().parameters.BatchLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Container": {
										"value": "raw",
										"type": "String"
									},
									"EndCounter": {
										"value": "0",
										"type": "String"
									},
									"FileName": {
										"value": {
											"value": "@activity('Get Full File Name').output.firstrow.StorageFile",
											"type": "Expression"
										},
										"type": "String"
									},
									"FolderName": {
										"value": {
											"value": "@activity('Get Full File Name').output.firstrow.StorageFolder",
											"type": "Expression"
										},
										"type": "String"
									},
									"Records": {
										"value": {
											"value": "@activity('Copy-Blob-to-DataLake-Raw').output.Fileswritten",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"SourceObject": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.SourceName",
											"type": "Expression"
										},
										"type": "String"
									},
									"StartCounter": {
										"value": "0",
										"type": "String"
									},
									"TaskExecutionLogID": {
										"value": {
											"value": "@pipeline().parameters.TaskExecutionLogId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"DeltaColumn": {
										"value": {
											"value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineRunID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS-AzureSqlDatabase_Ctrldb",
								"type": "LinkedServiceReference",
								"parameters": {
									"kvSecret": "daf-sql-controldb-connectionstring"
								}
							}
						}
					]
				}
			},
			{
				"name": "Set-Source-Container",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "SourceContainer",
					"value": {
						"value": "@toLower(first(split(pipeline().parameters.TaskDetails.SourceLocation,'/')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set-Source-Filename_copy1",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "SourceFileName",
					"value": {
						"value": "@last(split(pipeline().parameters.TaskDetails.SourceLocation,'/'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Full File Name",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[CTL].[GetStorageFileName]",
						"storedProcedureParameters": {
							"DeltaExtract": {
								"type": "Boolean",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.DeltaExtract",
									"type": "Expression"
								}
							},
							"FileName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.SourceLocation",
									"type": "Expression"
								}
							},
							"FolderName": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.TargetLocation",
									"type": "Expression"
								}
							},
							"Grain": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.ObjectGrain",
									"type": "Expression"
								}
							},
							"Compressed": {
								"type": "Boolean",
								"value": {
									"value": "true",
									"type": "Expression"
								}
							},
							"TargetType": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.TaskDetails.TargetType",
									"type": "Expression"
								}
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlDatabase_Ctrldb",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			}
		],
		"parameters": {
			"TaskDetails": {
				"type": "object"
			},
			"BatchLogId": {
				"type": "int"
			},
			"TaskExecutionLogId": {
				"type": "int"
			},
			"ProjectRunID": {
				"type": "string"
			},
			"TargetBLOBFolder": {
				"type": "string"
			},
			"TargetBLOBName": {
				"type": "string"
			},
			"StartCounter": {
				"type": "string"
			},
			"EndCounter": {
				"type": "string"
			},
			"ValidationDetails": {
				"type": "string"
			}
		},
		"variables": {
			"SourceContainer": {
				"type": "String"
			},
			"SourceFileName": {
				"type": "String"
			},
			"OutputFileName": {
				"type": "String"
			},
			"DeltaSQL": {
				"type": "String"
			},
			"FileName": {
				"type": "String"
			},
			"DateStamp": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Blob"
		},
		"annotations": [],
		"lastPublishTime": "2021-06-30T08:46:15Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}