{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory Name",
            "defaultValue": "cbhazr-inf-datafactory-sand"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_SQLDB')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSQLDatabase",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "kvSecret": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Oracle')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "Oracle",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "kvSecret": {
                            "value": "@dataset().kvSecret",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "kvSecret": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "OracleTable",
                "typeProperties": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Update Watermarks from Oracle')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Watermark Values",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get Watermark SQL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "OracleSource",
                                "oracleReaderQuery": {
                                    "value": "@activity('Get Watermark SQL').output.firstrow.SQLStatement",
                                    "type": "Expression"
                                },
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "Oracle",
                                "type": "DatasetReference",
                                "parameters": {
                                    "kvSecret": "@pipeline().parameters.TaskDetails.SourceServer"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Update Watermarks",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Watermark Values",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Watermark Values').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Update Control Watermark",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[updateWatermarks]",
                                        "storedProcedureParameters": {
                                            "SourceColumn": {
                                                "value": {
                                                    "value": "@item().SOURCECOLUMN",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "SourceId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.SourceId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Watermark": {
                                                "value": {
                                                    "value": "@item().RETURNVALUE",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Watermark SQL",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[getWatemarkSQL]",
                                "storedProcedureParameters": {
                                    "SourceId": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@pipeline().parameters.SourceId",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "parameters": {
                    "SourceId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Oracle')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pipeline1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "RawToStage",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSetting",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSetting"
                                }
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSetting"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureBlobStorage_Raw",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": "dummy/EKAUAT2/2019-07-17",
                                    "BlobName": "DUPNL_DAILY_UNREAL_PNL.csv.gz"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "AzureBlobStorage_Stage_pqt",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": "dummy/EKAUAT2/2019-07-17",
                                    "BlobName": "DUPNL_DAILY_UNREAL_PNL"
                                }
                            }
                        ]
                    },
                    {
                        "name": "StageToDW",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "RawToStage",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "ParquetSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSetting",
                                    "recursive": true
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink"
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureBlobStorage_Stage_pqt",
                                "type": "DatasetReference",
                                "parameters": {
                                    "BlobPath": "dummy/EKAUAT2/2019-07-17",
                                    "BlobName": "DUPNL_DAILY_UNREAL_PNL"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "AzureSqlDatabase_SQLDB",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "parameters": {
                    "Source": {
                        "type": "string"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDatabase_SQLDB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Oracle Source Data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Check Delta Load",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get Full File Name",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(pipeline().parameters.TaskDetails.DeltaLoad,true)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Copy Oracle Data",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [
                                        {
                                            "name": "Destination",
                                            "value": "raw/Cewa Financials/"
                                        }
                                    ],
                                    "typeProperties": {
                                        "source": {
                                            "type": "OracleSource",
                                            "oracleReaderQuery": {
                                                "value": "@pipeline().parameters.TaskDetails.Command",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "AzureBlobFSSink"
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Oracle",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "kvSecret": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "AzureBlobStorage_Raw",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "BlobPath": {
                                                    "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                                    "type": "Expression"
                                                },
                                                "BlobName": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.FileName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Log Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Oracle Data",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.FileName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Log Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Copy Oracle Data",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "@activity('Copy Oracle Data').output.errors[0].Message",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "Delta Copy Oracle Data",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [
                                        {
                                            "name": "Destination",
                                            "value": "raw/Cewa Financials/"
                                        }
                                    ],
                                    "typeProperties": {
                                        "source": {
                                            "type": "OracleSource",
                                            "oracleReaderQuery": {
                                                "value": "@pipeline().parameters.TaskDetails.Command",
                                                "type": "Expression"
                                            },
                                            "partitionOption": "None"
                                        },
                                        "sink": {
                                            "type": "AzureBlobFSSink"
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "Oracle",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "kvSecret": {
                                                    "value": "@pipeline().parameters.TaskDetails.SourceServer",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "AzureBlobStorage_Raw",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "BlobPath": {
                                                    "value": "@pipeline().parameters.TaskDetails.TargetLocation",
                                                    "type": "Expression"
                                                },
                                                "BlobName": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.FileName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Task Log Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Delta Copy Oracle Data",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Update Watermarks",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Delta Copy Oracle Data",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Update Watermarks from Oracle",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "SourceId": {
                                                "value": "@pipeline().parameters.TaskDetails.SourceId",
                                                "type": "Expression"
                                            },
                                            "TaskDetails": {
                                                "value": "@pipeline().parameters.TaskDetails",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Watermark Task Failure",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Update Watermarks",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": {
                                                    "value": "An Error Occurred",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Failure",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": null,
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference"
                                    }
                                },
                                {
                                    "name": "Watermark Task Success",
                                    "type": "SqlServerStoredProcedure",
                                    "dependsOn": [
                                        {
                                            "activity": "Update Watermarks",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "storedProcedureName": "[[CTL].[UpdateTaskLog]",
                                        "storedProcedureParameters": {
                                            "BatchLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.BatchLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "ErrorMessage": {
                                                "value": "",
                                                "type": "String"
                                            },
                                            "ExecutionLogId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskExecutionLogId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Status": {
                                                "value": "Success",
                                                "type": "String"
                                            },
                                            "TaskId": {
                                                "value": {
                                                    "value": "@pipeline().parameters.TaskDetails.TaskId",
                                                    "type": "Expression"
                                                },
                                                "type": "Int64"
                                            },
                                            "Output": {
                                                "value": {
                                                    "value": "@activity('Get Full File Name').output.firstrow.FileName",
                                                    "type": "Expression"
                                                },
                                                "type": "String"
                                            }
                                        }
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "AzureSqlDatabase_Ctrldb",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Get Full File Name",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[sp_getFullName]",
                                "storedProcedureParameters": {
                                    "CronExpresion": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.CronExpression",
                                            "type": "Expression"
                                        }
                                    },
                                    "fileName": {
                                        "type": "String",
                                        "value": {
                                            "value": "@pipeline().parameters.TaskDetails.TargetName",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": true
                        }
                    }
                ],
                "parameters": {
                    "BatchLogId": {
                        "type": "int"
                    },
                    "TaskDetails": {
                        "type": "object"
                    },
                    "TaskExecutionLogId": {
                        "type": "int"
                    }
                },
                "variables": {
                    "OutputFileName": {
                        "type": "String"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/Oracle')]",
                "[concat(variables('factoryId'), '/pipelines/Update Watermarks from Oracle')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Stage Load')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Load Tasks",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[getExecutionTasks]",
                                "storedProcedureParameters": {
                                    "ProjectId": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@pipeline().parameters.ProjectId",
                                            "type": "Expression"
                                        }
                                    },
                                    "StageId": {
                                        "type": "Int64",
                                        "value": {
                                            "value": "@pipeline().parameters.StageId",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Execute Each Task",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Generate Batch Log",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Load Tasks').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Oracle Source Load",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(item().SourceType,'Oracle')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Load Oracle Source Data",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "Oracle Source Data",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Generate Task Log",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "AzureSqlSource",
                                            "sqlReaderStoredProcedureName": "[[CTL].[CreateTaskLog]",
                                            "storedProcedureParameters": {
                                                "BatchLogId": {
                                                    "type": "Int64",
                                                    "value": {
                                                        "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                        "type": "Expression"
                                                    }
                                                },
                                                "TaskId": {
                                                    "type": "Int64",
                                                    "value": {
                                                        "value": "@item().TaskId",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "AzureSqlDatabase_Ctrldb",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    }
                                },
                                {
                                    "name": "ProcessNotebooks",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@or(and(equals(item().SourceType,'BLOB Storage (csv)'),equals(item().ControlStageId,2)), and(equals(item().SourceType,'BLOB Storage (parque)'),equals(item().ControlStageId,4)))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute Databricks",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "Data Lake File Copy",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Load Data Warehouse",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "Generate Task Log",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(equals(item().SourceType,'SQL Server'),equals(item().ControlStageId,4))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "Execute Load Data Warehouse Pipeline",
                                                "type": "ExecutePipeline",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "pipeline": {
                                                        "referenceName": "Load Data Warehouse",
                                                        "type": "PipelineReference"
                                                    },
                                                    "waitOnCompletion": true,
                                                    "parameters": {
                                                        "BatchLogId": {
                                                            "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                                            "type": "Expression"
                                                        },
                                                        "TaskDetails": {
                                                            "value": "@item()",
                                                            "type": "Expression"
                                                        },
                                                        "TaskExecutionLogId": {
                                                            "value": "@activity('Generate Task Log').output.firstrow.TaskLogId",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Batch Log Success",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute Each Task",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateBatchLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": null,
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Complete",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Batch Log Failure",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "Execute Each Task",
                                "dependencyConditions": [
                                    "Failed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[CTL].[UpdateBatchLog]",
                            "storedProcedureParameters": {
                                "BatchLogId": {
                                    "value": {
                                        "value": "@activity('Generate Batch Log').output.firstrow.BatchLogId",
                                        "type": "Expression"
                                    },
                                    "type": "Int64"
                                },
                                "ErrorMessage": {
                                    "value": "Check Task Execution Log for errors",
                                    "type": "String"
                                },
                                "Status": {
                                    "value": "Failure",
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase_Ctrldb",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Generate Batch Log",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get Load Tasks",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[CreateBatchLog]"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    }
                ],
                "parameters": {
                    "StageId": {
                        "type": "int"
                    },
                    "ProjectId": {
                        "type": "int"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Oracle Source Data')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Execute Project Tasks')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Stages",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": "Select ControlStageId, StageName\n  From CTL.ControlStages\n Where ControlStageId In (Select Distinct ControlStageId From CTL.ControlTasks Where TaskEnabled = 1)\n Order By StageSequence"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Execute Stages",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Stages",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Stages').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Execute Stage Load Pipeline",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Stage Load",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "StageId": {
                                                "value": "@item().ControlStageId",
                                                "type": "Expression"
                                            },
                                            "ProjectId": {
                                                "value": "@pipeline().parameters.ProjectId",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "parameters": {
                    "ProjectId": {
                        "type": "int"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Stage Load')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/Main')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Get Projects to Execute",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderStoredProcedureName": "[[CTL].[getProjectSchedule]"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDatabase_Ctrldb",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Execute Tasks for each Project",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Projects to Execute",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Projects to Execute').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Execute Project Tasks",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "Execute Project Tasks",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "ProjectId": {
                                                "value": "@item().ControlProjectId",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Execute Project Tasks')]"
            ]
        }
    ]
}