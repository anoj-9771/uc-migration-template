{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-swcprod01-daf-preprod-01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_DeltaLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Databricks Delta Lake",
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-2717485385283200.0.azuredatabricks.net",
					"clusterId": "0215-073119-gzhauiye",
					"workspaceResourceId": "/subscriptions/769a62b3-7481-44ae-878e-a466593f50ac/resourceGroups/rg-swcprod01-preprod-daf-01/providers/Microsoft.Databricks/workspaces/dbw-swcprod01-daf-preprod-01"
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime-Azure-ManagedVnet-01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/04-DL-Load-Raw-to-Delta-Table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set-ClusterType",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ClusterType",
							"value": {
								"value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If-ClusterType",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set-ClusterType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('ClusterType'), 'interactive')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Notebook-Delta-Table-Job",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@variables('NoteBookURL')",
											"type": "Expression"
										},
										"baseParameters": {
											"file_object": {
												"value": "@concat(pipeline().parameters.TargetBLOBFolder,pipeline().parameters.TargetBLOBName)",
												"type": "Expression"
											},
											"source_param": {
												"value": "@string(pipeline().parameters.TaskDetails)",
												"type": "Expression"
											},
											"file_date_time_stamp": {
												"value": "@pipeline().parameters.SourceFileDateTimeStamp",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS-AzureDatabricks_JobCluster",
										"type": "LinkedServiceReference",
										"parameters": {
											"kvSecret": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
												"type": "Expression"
											},
											"DataBricksClusterType": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
												"type": "Expression"
											},
											"DataBricksClusterVersion": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
												"type": "Expression"
											},
											"DataBricksWorkerNodes": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Set-ReturnValue-Job-DataFile",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Notebook-Delta-Table-Job",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DataFileRecordCount",
										"value": {
											"value": "@string(activity('Notebook-Delta-Table-Job').output.runOutput.DataFileRecordCount)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set-ReturnValue-Job-TargetTable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Notebook-Delta-Table-Job",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TargetTableRecordCount",
										"value": {
											"value": "@string(activity('Notebook-Delta-Table-Job').output.runOutput.TargetTableRecordCount)",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Notebook-Delta-Table-Interactive",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.02:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@variables('NoteBookURL')",
											"type": "Expression"
										},
										"baseParameters": {
											"file_object": {
												"value": "@concat(pipeline().parameters.TargetBLOBFolder,pipeline().parameters.TargetBLOBName)",
												"type": "Expression"
											},
											"source_param": {
												"value": "@string(pipeline().parameters.TaskDetails)",
												"type": "Expression"
											},
											"file_date_time_stamp": {
												"value": "@pipeline().parameters.SourceFileDateTimeStamp",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS-AzureDatabricks_DefinedCluster",
										"type": "LinkedServiceReference",
										"parameters": {
											"kvSecret": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
												"type": "Expression"
											},
											"clusterId": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Set-ReturnValue-Interactive-DataFile",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Notebook-Delta-Table-Interactive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "DataFileRecordCount",
										"value": {
											"value": "@string(activity('Notebook-Delta-Table-Interactive').output.runOutput.DataFileRecordCount)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set-ReturnValue-Interactive-TargetTable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Notebook-Delta-Table-Interactive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "TargetTableRecordCount",
										"value": {
											"value": "@string(activity('Notebook-Delta-Table-Interactive').output.runOutput.TargetTableRecordCount)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "SP-Update-Manifest-Delta-Records",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If-ClusterType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CTL].[UpdateManifestDeltaRecords]",
							"storedProcedureParameters": {
								"BatchExecutionLogID": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TaskExecutionLogID": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"RecordsDeltaTable": {
									"value": {
										"value": "@variables('DataFileRecordCount')",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"SourceFileDateStamp": {
									"value": {
										"value": "@pipeline().parameters.SourceFileDateTimeStamp",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecordsTargetTable": {
									"value": {
										"value": "@variables('TargetTableRecordCount')",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"BatchLogID": {
						"type": "int",
						"defaultValue": 1
					},
					"TaskExecutionLogId": {
						"type": "int",
						"defaultValue": 1
					},
					"TaskDetails": {
						"type": "object"
					},
					"TargetBLOBFolder": {
						"type": "string",
						"defaultValue": "raw"
					},
					"TargetBLOBName": {
						"type": "string",
						"defaultValue": "targetdirectory"
					},
					"ProjectRunID": {
						"type": "string"
					},
					"SourceFileName": {
						"type": "string"
					},
					"SourceFileDateTimeStamp": {
						"type": "string"
					}
				},
				"variables": {
					"TargetTableRecordCount": {
						"type": "String"
					},
					"ClusterType": {
						"type": "String"
					},
					"NoteBookURL": {
						"type": "String",
						"defaultValue": "/build/raw/load-raw-deltatable"
					},
					"DataFileRecordCount": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-22T04:55:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/05-DL-Load-Raw-to-Cleansed_Bak')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Log Failure DL Cleansed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If-ClusterType",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "[[CTL].[UpdateTaskLog]",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"BatchLogId": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ErrorMessage": {
									"value": "Error Occurred during Trusted Zone load",
									"type": "String"
								},
								"ExecutionLogId": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"Output": {
									"value": null
								},
								"Status": {
									"value": "Failure",
									"type": "String"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.TaskId",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If-ClusterType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "[[CTL].[UpdateTaskLog]",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"BatchLogId": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"ExecutionLogId": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"Output": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.LastLoadedFile",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.TaskId",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set-ClusterType",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ClusterType",
							"value": {
								"value": "@toLower(last(split(pipeline().parameters.TaskDetails.Processor,'|')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If-ClusterType",
						"description": "",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set-ClusterType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('ClusterType'), 'interactive')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Load-To-Cleansed-Zone-Job",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@pipeline().parameters.TaskDetails.Command",
											"type": "Expression"
										},
										"baseParameters": {
											"source_object": {
												"value": "@pipeline().parameters.TaskDetails.SourceName",
												"type": "Expression"
											},
											"source_param": {
												"value": "@string(pipeline().parameters.TaskDetails)",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS-AzureDatabricks_JobCluster",
										"type": "LinkedServiceReference",
										"parameters": {
											"kvSecret": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
												"type": "Expression"
											},
											"DataBricksClusterType": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[2]",
												"type": "Expression"
											},
											"DataBricksClusterVersion": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[3]",
												"type": "Expression"
											},
											"DataBricksWorkerNodes": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[4]",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "LoadToCleansed-Zone-Interactive",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": {
											"value": "@pipeline().parameters.TaskDetails.Command",
											"type": "Expression"
										},
										"baseParameters": {
											"source_object": {
												"value": "@pipeline().parameters.TaskDetails.SourceName",
												"type": "Expression"
											},
											"source_param": {
												"value": "@string(pipeline().parameters.TaskDetails)",
												"type": "Expression"
											},
											"delta_column": {
												"value": "@pipeline().parameters.TaskDetails.WatermarkColumn",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS-AzureDatabricks_DefinedCluster",
										"type": "LinkedServiceReference",
										"parameters": {
											"kvSecret": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
												"type": "Expression"
											},
											"clusterId": {
												"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TaskDetails": {
						"type": "object"
					},
					"BatchLogId": {
						"type": "int"
					},
					"TaskExecutionLogId": {
						"type": "int"
					},
					"ProjectRunID": {
						"type": "string"
					}
				},
				"variables": {
					"ReturnValue": {
						"type": "String"
					},
					"ClusterType": {
						"type": "String"
					},
					"SourceContainer": {
						"type": "String",
						"defaultValue": "raw"
					},
					"SourceDirectory": {
						"type": "String"
					},
					"SourceFileName": {
						"type": "String"
					},
					"TargetContainer": {
						"type": "String",
						"defaultValue": "trusted"
					},
					"TargetDirectory": {
						"type": "String"
					},
					"TargetFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "z_Archive"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-22T04:55:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Technical-Reconciliation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook-GetDeltaTableRecordCount",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": {
								"value": "@variables('NotbookURL')",
								"type": "Expression"
							},
							"baseParameters": {
								"target_table": {
									"value": "@pipeline().parameters.TaskDetails.TargetName",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureDatabricks_DefinedCluster",
							"type": "LinkedServiceReference",
							"parameters": {
								"kvSecret": {
									"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[0]",
									"type": "Expression"
								},
								"clusterId": {
									"value": "@split(pipeline().parameters.TaskDetails.Processor,'|')[1]",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SP-CreateTechRecRawToCleansed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Notebook-GetDeltaTableRecordCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "CTL.CreateTechRecRawToCleansed",
							"storedProcedureParameters": {
								"BatchExecutionId": {
									"value": {
										"value": "@pipeline().parameters.BatchLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TaskExecutionLogId": {
									"value": {
										"value": "@pipeline().parameters.TaskExecutionLogId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.TaskId",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"SourceObject": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.SourceName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TargetName": {
									"value": {
										"value": "@pipeline().parameters.TaskDetails.TargetName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalNoRecords": {
									"value": {
										"value": "@activity('Notebook-GetDeltaTableRecordCount').output.runOutput",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS-AzureSqlDatabase_Ctrldb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TaskDetails": {
						"type": "object"
					},
					"BatchLogId": {
						"type": "int"
					},
					"TaskExecutionLogId": {
						"type": "int"
					}
				},
				"variables": {
					"NotbookURL": {
						"type": "String",
						"defaultValue": "/build/cleansed/utility/getDeltaTableRecordCount"
					}
				},
				"folder": {
					"name": "Validation"
				},
				"annotations": [],
				"lastPublishTime": "2022-03-22T04:55:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARCHIVE_BLOB_BINARY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobContainer": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().BlobContainer",
							"type": "Expression"
						},
						"container": "archive"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARCHIVE_BLOB_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobContainer": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().BlobContainer",
							"type": "Expression"
						},
						"container": "archive"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARCHIVE_BLOB_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobContainer": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Source - Blob"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().BlobContainer",
							"type": "Expression"
						},
						"container": "archive"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_Ctrl_db_businessrecstage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "CTL",
					"table": "BusinessRecStage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_Ctrldb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS-AzureSqlDatabase_Ctrldb",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Control"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BINARY_ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BINARY_ADLS_bzip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "z_Archive/tests"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "bzip2",
						"level": "Fastest"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BINARY_ADLS_gzip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "z_Archive/tests"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().File",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip",
						"level": "Fastest"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DST_RAW_ADLS_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobPath": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().BlobPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": "|",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"LakeContainer": {
						"type": "string",
						"defaultValue": "raw"
					},
					"LakeDirectory": {
						"type": "string"
					},
					"LakeFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().LakeFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().LakeDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().LakeContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"LakeContainer": {
						"type": "string"
					},
					"LakeDirectory": {
						"type": "string"
					},
					"LakeFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().LakeFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().LakeDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().LakeContainer",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip",
						"level": "Optimal"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_SRC_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dataset for access reference data",
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"LakeContainer": {
						"type": "string",
						"defaultValue": "raw"
					},
					"LakeDirectory": {
						"type": "string"
					},
					"LakeFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().LakeFileName",
							"type": "Expression"
						},
						"folderPath": "access data/Z309_TPROPERTY",
						"fileSystem": "raw"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CURATED_ADLS_DELTALAKE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_DeltaLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "CURATED",
					"table": "dimdate"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DeltaLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_RAW_ADLS_DELTALAKE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_DeltaLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "raw",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_DeltaLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RAW_ADLS_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobPath": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Data Lake"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().BlobPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": "|",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RAW_ADLS_JSON_bzip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "bzipped json file in the datalake",
				"linkedServiceName": {
					"referenceName": "LS_AzureDatalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BlobPath": {
						"type": "string"
					},
					"BlobName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "z_Archive/tests"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().BlobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().BlobPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compression": {
						"type": "bzip2",
						"level": "Fastest"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		}
	]
}