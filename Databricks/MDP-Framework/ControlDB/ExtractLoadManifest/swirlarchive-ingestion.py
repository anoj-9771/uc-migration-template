# Databricks notebook source
# MAGIC %run ../common-controldb

# COMMAND ----------

import json

# COMMAND ----------

j = json.loads(spark.conf.get("spark.databricks.clusterUsageTags.clusterAllTags"))
environment = [x['value'] for x in j if x['key'] == 'Environment'][0]

# COMMAND ----------

swirlarchive_tables =['BMS_9999999_184',
'BMS_9999999_189',
'BMS_9999999_194',
'BMS_9999999_222',
'BMS_9999999_233',
'BMS_9999999_845',
'BMS_9999999_847',
'BMS_9999999_848',
'BMS_ACTIONDEFNS',
'BMS_ACTIONHISTORY',
'BMS_APPLICATION',
'BMS_APPLICATIONVERSIONS',
'BMS_AUDITTRAIL',
'BMS_AUDITTRAILCONFIGURATION',
'BMS_AUDITTRAILRESULT',
'BMS_AUDIT_ARCHIVE_INDEX',
'BMS_AUDIT_LOG',
'BMS_BUSINESSAREA',
'BMS_BUSINESSAREAITEMS',
'BMS_BUSINESSPROCESSBASESTATES',
'BMS_BUSINESSPROCESSDEFNS',
'BMS_BUSINESSPROCESSDEFNSLINK',
'BMS_BUSINESSPROCESSDEFNSUSER',
'BMS_BUSINESSPROCESSSTATES',
'BMS_COMPILED',
'BMS_COMPONENTS',
'BMS_COMPONENT_FIELDS',
'BMS_COMPONENT_GRAPHS',
'BMS_COMPONENT_HIERARCHICAL',
'BMS_COMPONENT_HOTSPOT',
'BMS_COMPONENT_LINKS_BAK',
'BMS_COMPONENT_LISTS',
'BMS_COMPONENT_NOTIFY',
'BMS_COMPONENT_REPORTS',
'BMS_COMPONENT_SCHEMA',
'BMS_COMPONENT_TIMEBASED',
'BMS_COMPONENT_VALIDATION',
'BMS_CONDITIONEXPRESSIONS',
'BMS_CONFIGURATION',
'BMS_CONFIGURATIONELEMENT',
'BMS_CONFIGURATIONENUM',
'BMS_CONFIGURATIONINFO',
'BMS_CONFIGURATIONLANGUAGES',
'BMS_CONFIGURATIONLINKS',
'BMS_CONFIGURATIONOWNERS',
'BMS_CONFIGURATIONRESOURCES',
'BMS_CONSTANTS',
'BMS_CONVERSATION',
'BMS_DASHBOARDITEMS',
'BMS_DASHBOARDS',
'BMS_DATASOURCEREPOSITORY',
'BMS_DBFILES',
'BMS_DEFAULTDASHBOARD',
'BMS_DEFAULTVIEW',
'BMS_DESIGNERMODELRELS',
'BMS_DESIGNERMODELS',
'BMS_DESIGNERMODELVERSIONS',
'BMS_DRAFTELEMENTS',
'BMS_DRAFTRECORDS',
'BMS_DYNAMICATTRIBUTES',
'BMS_DYNAMICDEFAULTS',
'BMS_DYNAMICOBJECTS',
'BMS_DYNAMICROLELINKS',
'BMS_DYNAMICTYPES',
'BMS_DYNAMICVALUES',
'BMS_ELEMENTDEFINITIONS',
'BMS_ELEMENTTYPES',
'BMS_EMAILTEMPLATES',
'BMS_ENTITY_FILTER',
'BMS_ENTITY_TEMPLATES',
'BMS_EPSILONCONFIGURATION',
'BMS_EVENTQUEUE',
'BMS_EVENTS',
'BMS_FILTER',
'BMS_FILTERPARAMETERS',
'BMS_FILTERROLELINKS',
'BMS_FILTERS',
'BMS_FILTERVALUE',
'BMS_FLAG',
'BMS_HOLIDAY',
'BMS_HOTSPOT_REGIONS',
'BMS_IMAGEDATAFEATURES',
'BMS_IMAGES',
'BMS_IMAGESUFFIX',
'BMS_IMAGESUFFIXLINKS',
'BMS_IMAGESUFFIXTEXT',
'BMS_IMPORT',
'BMS_IMPORTCONTROL',
'BMS_IMPORTLOG',
'BMS_LANGUAGERESOURCES',
'BMS_LANGUAGES',
'BMS_LAYOUTS',
'BMS_LEGACYEMAILLINKS',
'BMS_LEGACYTRANSLATIONS',
'BMS_LICENSE',
'BMS_LISTVIEWCOLUMNUSER',
'BMS_LISTVIEWFILTERREL',
'BMS_LISTVIEWOPTIONALFILTERREL',
'BMS_LISTVIEWUSERFILTERS',
'BMS_LIST_FIELDS',
'BMS_LOCALITIES',
'BMS_LOOKUPFILTERRULEDEFN',
'BMS_LOOKUPFILTERRULEITEM',
'BMS_LOOKUPFILTERRULEVALUE',
'BMS_MASTERFORMSDEFINITIONS',
'BMS_MASTERFORMSLAYOUTS',
'BMS_MASTERFORMSPAGES',
'BMS_MATRICES',
'BMS_MATRIXANSWERS',
'BMS_MATRIXAXIS',
'BMS_MATRIXAXISLINK',
'BMS_MATRIXAXISVALUES',
'BMS_MATRIXRESULTS',
'BMS_MENU',
'BMS_MENUITEMS',
'BMS_MSG',
'BMS_MULTILOOKUPITEMS_JV_BAK',
'BMS_NETWORKUSER',
'BMS_NEXTID',
'BMS_NFACTIONS',
'BMS_NFACTIONTYPES',
'BMS_NFAUDITLOG',
'BMS_NFAUTONUMBERCONFIG',
'BMS_NFCELLDEFINITIONS',
'BMS_NFCOMPFORMRELATIONSHIPS',
'BMS_NFCOMPLOOKUPDISPLAYMODE',
'BMS_NFCONDITIONPARAMETERS',
'BMS_NFCREATERELATED',
'BMS_NFERRORLOG',
'BMS_NFFIELDINHERIT',
'BMS_NFFIELDINSTANCEPCLOOKUPS',
'BMS_NFFIELDINSTANCES',
'BMS_NFFIELDLINKS',
'BMS_NFFIELDPCLOOKUPS',
'BMS_NFFIELDVALIDATIONS',
'BMS_NFFIELDVALUES',
'BMS_NFFILTERDEFINITIONS',
'BMS_NFFORMDEFINITIONS',
'BMS_NFFORMFIELDS',
'BMS_NFFORMFILTERDEFNS',
'BMS_NFGLOBALMAPPINGS',
'BMS_NFGROUPDEFINITIONS',
'BMS_NFGROUPLISTS',
'BMS_NFINPUTTYPES',
'BMS_NFLAYOUTITEMS',
'BMS_NFLISTFIELDS',
'BMS_NFNEXTIDS',
'BMS_NFPAGEDEFINITIONS',
'BMS_NFPAGESCHEMA',
'BMS_NFPARENTCHILDDETAILS',
'BMS_NFPCRELATIONSHIPS',
'BMS_NFROLLUPS',
'BMS_NFRULEGROUPS',
'BMS_NFSYSTEMINFORMATION',
'BMS_NFTEMPWEBDATA',
'BMS_NFVALIDATIONCODES',
'BMS_NFVALIDATIONCONDEXPRRULES',
'BMS_NFVALIDATIONCONDITIONS',
'BMS_NFVALIDATIONRULEGROUPS',
'BMS_NFVALIDATIONRULES',
'BMS_NFVALIDATIONS',
'BMS_NFVERSIONS',
'BMS_OHC',
'BMS_OPERATIONMESSAGE',
'BMS_OPERATIONRESULT',
'BMS_PARAMETERDEFNS',
'BMS_PARAMETERS',
'BMS_PARENTCHILD_LOOKUPS',
'BMS_PENDINGDESIGNERCHANGES',
'BMS_PERMISSIONS',
'BMS_PLUGINS',
'BMS_POLICIES',
'BMS_PREFERENCES',
'BMS_PROFILEDEFAULTS',
'BMS_PROFILEROLELINKS',
'BMS_PROFILES',
'BMS_PROFILEVALUES',
'BMS_PROPERTYDECLARATION',
'BMS_PROPERTYPERMISSIONS',
'BMS_PROPERTYSCOPE',
'BMS_PROPERTYSET',
'BMS_PROPERTYVALUE',
'BMS_PUBLISHEDLANGUAGERESOURCES',
'BMS_PUBLISHREPORTGRAPHNAMES',
'BMS_RECURRINGCOMPONENTS',
'BMS_REPORTGRAPHS',
'BMS_REPORTGROUPDEFN',
'BMS_REPORTGROUPITEM',
'BMS_REPOSITORYELEMENTS',
'BMS_REPOSITORYELEMENTVERSIONS',
'BMS_ROLEMEMBERS',
'BMS_ROLERELATIONS',
'BMS_ROLES',
'BMS_SCHEDULEDIMPORTCHILDFIELDS',
'BMS_SCHEDULEDIMPORTEMAILPOP3',
'BMS_SCHEDULEDIMPORTFIELDS',
'BMS_SCHEDULEDIMPORTFILECSV',
'BMS_SCHEDULEDIMPORTRELFIELDS',
'BMS_SCHEDULEDIMPORTS',
'BMS_SCHEDULEDIMPORTVALUES',
'BMS_SCHEDULEDREPORTS',
'BMS_SCHEDULERTASKS',
'BMS_SCRIPTTEMPLATES',
'BMS_SYSTEMSTATE',
'BMS_TEMPLATES',
'BMS_TYPEDEFINITIONS',
'BMS_UNKNOWNUSER',
'BMS_UPGRADE',
'BMS_USERS',
'BMS_VERSION',
'BMS_WEBFORM_LINKS',
'EXCLUDE_TABLE',
'PENDINGINCIDENTS_TEMP']

# COMMAND ----------

group_names = {"swirlarchive":swirlarchive_tables} 
source_key_vault_secret = "daf-oracle-swirl-connectionstring"
source_handler = 'oracle-load'
raw_handler = 'raw-load-delta'
#cleansed_handler = 'cleansed-load-delta'
#extended_properties = '{"RawTableNameMatchSource" : "True"}'
extended_properties = '{"RawTableNameMatchSource" : "True", "GroupOrderBy" : "_DLRawZoneTimeStamp Desc"}'

# COMMAND ----------

if environment == 'PREPROD':
    source_schema = "cintel_stg"
else:
    source_schema = "cintel"

# COMMAND ----------

# ------------- CONSTRUCT QUERY ----------------- #
for code in group_names:
    base_query = f"""
    WITH _Base AS 
    (
    SELECT "{code}" SystemCode, "{source_schema}" SourceSchema, "{source_key_vault_secret}" SourceKeyVaultSecret, '' SourceQuery, "{source_handler}" SourceHandler, '' RawFileExtension, "{raw_handler}" RawHandler, '{extended_properties}' ExtendedProperties,'' CleansedHandler,'' WatermarkColumn
    )"""
    select_list = [
        'SELECT "' + x + '" SourceTableName, * FROM _Base' for x in group_names[code]
    ]
    select_string = " UNION ".join(select_list)
    select_statement = select_string + " ORDER BY SourceSchema, SourceTableName"

    df = spark.sql(f"""{base_query} {select_statement}""")
    SYSTEM_CODE = code
        
    AddIngestion(df)

# COMMAND ----------

ExecuteStatement("""
    UPDATE controldb.dbo.extractloadmanifest
    SET DestinationSchema = 'swirl' 
    WHERE (SystemCode in ('swirlarchive'))""")

# COMMAND ----------

ExecuteStatement("""
    UPDATE controldb.dbo.extractloadmanifest
    SET ExtendedProperties = '{"RawTableNameMatchSource":"True"}'
    WHERE (SystemCode in ('swirlarchive'))""")
